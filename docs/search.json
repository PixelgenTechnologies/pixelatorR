[{"path":"/CHANGELOG.html","id":null,"dir":"","previous_headings":"","what":"Changelog","title":"Changelog","text":"notable changes project documented file. format based Keep Changelog, project adheres Semantic Versioning.","code":""},{"path":[]},{"path":[]},{"path":"/CHANGELOG.html","id":"added","dir":"","previous_headings":"[0.5.0] - 2024-05-16","what":"Added","title":"Changelog","text":"inspect_pxl_file : utility function inspect contents PXL file ReadMPX_layouts : read function import pre-computed layouts","code":""},{"path":"/CHANGELOG.html","id":"updates","dir":"","previous_headings":"[0.5.0] - 2024-05-16","what":"Updates","title":"Changelog","text":"Updated show method CellGraph class objects","code":""},{"path":"/CHANGELOG.html","id":"fixes","dir":"","previous_headings":"[0.5.0] - 2024-05-16","what":"Fixes","title":"Changelog","text":"Updated experimental function WriteMPX_pxl_file compatibility anndata Python library. Note since WriteMPX_pxl_file function experimental, function may change point future.","code":""},{"path":[]},{"path":"/CHANGELOG.html","id":"fixes-1","dir":"","previous_headings":"[0.4.2] - 2024-05-06","what":"Fixes","title":"Changelog","text":"Fixed bug PolarizationSsoresToAssay PolarizationSsoresToAssay failed column IDs included dashes","code":""},{"path":[]},{"path":"/CHANGELOG.html","id":"updates-1","dir":"","previous_headings":"[0.4.1] - 2024-04-29","what":"Updates","title":"Changelog","text":"Seurat methods PolarizationSsoresToAssay PolarizationSsoresToAssay now adds key returned assay object","code":""},{"path":[]},{"path":"/CHANGELOG.html","id":"updated-pixelatorr-classes-and-their-methods-for-improved-io","dir":"","previous_headings":"[0.4.0] - 2024-04-24","what":"Updated pixelatorR classes and their methods for improved I/O","title":"Changelog","text":"CellGraphAssay5 inherits Assay5 class introduced Seurat v5 used options(Seurat.object.assay.version = \"v5\") CellGraphAssay inherits Assay class Seurat v3 used options(Seurat.object.assay.version = \"v3\") CellGraphAssay methods now handle CellGraphAssay5 class objects","code":""},{"path":"/CHANGELOG.html","id":"hdf5","dir":"","previous_headings":"[0.4.0] - 2024-04-24","what":"hdf5","title":"Changelog","text":"Switched R package rhdf5 (Bioconductor) hdf5r (CRAN) handle reading writing HDF5 files","code":""},{"path":"/CHANGELOG.html","id":"writing-pxl-files","dir":"","previous_headings":"[0.4.0] - 2024-04-24","what":"Writing PXL files","title":"Changelog","text":"Introduced experimental function WriteMPX_pxl_file write MPX data Seurat object PXL file","code":""},{"path":"/CHANGELOG.html","id":"fixes-2","dir":"","previous_headings":"[0.4.0] - 2024-04-24","what":"Fixes","title":"Changelog","text":"Made EdgeRankPlot compatible incoming changes pixelator Python >0.16.2 edges renamed molecules CellGraphAssay objects","code":""},{"path":[]},{"path":"/CHANGELOG.html","id":"added-utility-functions-to-clean-up-edgelist-directories","dir":"","previous_headings":"[0.3.0] 2024-03-28","what":"Added utility functions to clean up edgelist directories","title":"Changelog","text":"edgelist_directories_clean runs cleanup edgelist directory set “pixelatorR.arrow_outdir” global option edgelist_directories_du returns total disk usage edgelist directory set “pixelatorR.arrow_outdir” global option Added global option “pixelatorR.arrowdir_maxsize”. running ReadMPX_Seurat, merge.CellGraphAssay, subset.CellGraphAssay RenameCells.CellGraphAssay, clean triggered total disk usage edgelist directory exceeds value. default value 5 GB.","code":""},{"path":[]},{"path":"/CHANGELOG.html","id":"added-new-test-data-set---five_cellspxl","dir":"","previous_headings":"[0.2.0] - 2024-03-18","what":"Added new test data set - five_cells.pxl","title":"Changelog","text":"pixelatorR installed, test data can read following path: CD3 capped cell: RCVCMP0000217 CD3 capping data set (stimulated) B cell: RCVCMP0000118, CD4 T cell: RCVCMP0000487, CD8 T cell: RCVCMP0000655 PBMC data set Uropod cell: RCVCMP0000263 RANTES stimulated data set cells now fully connected components total file size 2.1 MB, following fields excluded edgelist.parquet file: “umi”, “sequence”, “umi_unique_count”, “upi_unique_count”","code":"pxl_file <- system.file(\"extdata/five_cells\",   \"five_cells.pxl\",   package = \"pixelatorR\" )"},{"path":"/CHANGELOG.html","id":"id_013---2024-03-18","dir":"","previous_headings":"","what":"[0.1.3] - 2024-03-18","title":"Changelog","text":"latest version arrow CRAN (v15.0.1) contains several bugs picked R CMD checks. Fixed version arrow v14.0.2.1 stable release available.","code":""},{"path":"/CHANGELOG.html","id":"id_012---2024-03-14","dir":"","previous_headings":"","what":"[0.1.2] - 2024-03-14","title":"Changelog","text":"Fixed bug LoadCellGraphs working Seurat objects multiple data sets (merged). Previous version returned components invalid order.","code":""},{"path":"/CHANGELOG.html","id":"id_011---2024-02-29","dir":"","previous_headings":"","what":"[0.1.1] - 2024-02-29","title":"Changelog","text":"Fixed bug ComputeLayout normalizing projecting layout coordinates center_layout_coordinates - Center layout coordinates origin normalize_layout_coordinates - Normalize layout coordinates centered origin median length (euclidean norm) 1 project_layout_coordinates_on_unit_sphere - Project layout 3D coordinates onto unit sphere","code":""},{"path":"/CHANGELOG.html","id":"id_010---2024-02-21","dir":"","previous_headings":"","what":"[0.1.0] - 2024-02-21","title":"Changelog","text":"First public release pixelatorR.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"/articles/introduction.html","id":"setting-up-a-conda-environment","dir":"Articles","previous_headings":"","what":"Setting up a conda environment","title":"Introduction","text":"highly recommend setting conda environment run pixelatorR. conda, can create enviroment using YAML file provided GitHub page. Download YAML file run following terminal: environment installed, can activate : ’re using RStudio, need make sure application uses correct environment. Mac OS, can open RStudio directly terminal (environment active) :","code":"conda env create -f environment.yml conda activate r-pixelator /Applications/RStudio.app/Contents/MacOS/RStudio"},{"path":"/articles/introduction.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction","text":"creating environment, required dependencies installed. However, pixelatorR currently available GitHub can install via remotes devtools:","code":"remotes::install_github(\"PixelgenTechnologies/pixelatorR\")"},{"path":"/articles/introduction.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Introduction","text":"software website, can find publicly available data sets. get started, can download PXL file load Seurat object:  Now, can load MPX data Seurat object ReadMPX_Seurat:","code":"library(pixelatorR) download.file(url = \"https://pixelgen-technologies-datasets.s3.eu-north-1.amazonaws.com/mpx-datasets/pixelator/0.12.0/1k-human-pbmcs-v1.0-immunology-I/Sample01_human_pbmcs_unstimulated.dataset.pxl?download=1\",                destfile = \"Sample01_human_pbmcs_unstimulated.dataset.pxl\") seur <- ReadMPX_Seurat(\"./Sample01_human_pbmcs_unstimulated.dataset.pxl\") ## ✔ Created a 'Seurat' object with 477 cells and 80 targeted surface proteins"},{"path":"/articles/introduction.html","id":"seurat-v5","dir":"Articles","previous_headings":"","what":"Seurat v5","title":"Introduction","text":"Seurat v5, new Assay type introduced called Assay5. Users can switch using Assay Assay5 classes store counts data setting global option Seurat.object.assay.version either “v3” “v5”. Similarly, pixelatorR, can set global option control whether use CellGraphAssay CellGraphAssay5 class. CellGraphAssay class inherits Assay class CellGraphAssay5 class inherits Assay5 class. two pixelatorR classes can thought extensions Seurat Assay classes provide slots store spatial metrics MPX component graphs.","code":""},{"path":"/articles/load_data.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load data","title":"Load data","text":"get started, need pxl file can download https://software.pixelgen.com/. pixelatorR provides several functions load data pxl file. instance, ReadMPX_counts allows us load count matrix nothing else: ReadMPX_item, can chose specific item load pxl file, including: “polarization”, “colocalization”, “edgelist”. provide multiple items, ReadMPX_item returns list instead: Alternatively, can use wrapper functions ReadMPX_polarization, ReadMPX_colocaliztion ReadMPX_edgelist thing ReadMPX_item: equivalent ","code":"dir.create(\"PBMC_data\") download.file(url = \"https://pixelgen-technologies-datasets.s3.eu-north-1.amazonaws.com/mpx-datasets/pixelator/0.12.0/1k-human-pbmcs-v1.0-immunology-I/Sample01_human_pbmcs_unstimulated.dataset.pxl?download=1\",               destfile = \"PBMC_data/Sample01_human_pbmcs_unstimulated.dataset.pxl\") pxl_file <- \"PBMC_data/Sample01_human_pbmcs_unstimulated.dataset.pxl\" countMatrix <- ReadMPX_counts(pxl_file) countMatrix[1:5, 1:5] ##       RCVCMP0000000 RCVCMP0000002 RCVCMP0000003 RCVCMP0000005 RCVCMP0000006 ## CD274            62            11            25            31            16 ## CD44            553           180            66           347           213 ## CD25             12             7             6             8             5 ## CD279             4             2             0             8             2 ## CD41              6             1             3             5             6 polarization_scores <- ReadMPX_item(pxl_file, items = \"polarization\") polarization_scores ## # A tibble: 33,479 × 6 ##     morans_i morans_p_value morans_p_adjusted morans_z marker component     ##        <dbl>          <dbl>             <dbl>    <dbl> <chr>  <chr>         ##  1 -0.00299          0.772              1.00   -0.290  ACTB   RCVCMP0000830 ##  2 -0.0161           0.177              0.771  -1.35   B2M    RCVCMP0000830 ##  3  0.0147           0.125              0.633   1.53   CD102  RCVCMP0000830 ##  4 -0.00678          0.590              1.00   -0.539  CD11a  RCVCMP0000830 ##  5  0.000836         0.891              1.00    0.137  CD127  RCVCMP0000830 ##  6 -0.00132          0.145              0.693  -1.46   CD150  RCVCMP0000830 ##  7 -0.00103          0.395              1.00   -0.851  CD152  RCVCMP0000830 ##  8 -0.00162          0.0365             0.265  -2.09   CD154  RCVCMP0000830 ##  9 -0.000919         0.971              1.00   -0.0364 CD162  RCVCMP0000830 ## 10 -0.000345         0.561              1.00    0.582  CD163  RCVCMP0000830 ## # ℹ 33,469 more rows all_items <- ReadMPX_item(pxl_file, items = c(\"polarization\", \"colocalization\", \"edgelist\")) names(all_items) ## [1] \"polarization\"   \"colocalization\" \"edgelist\" polarization_scores <- ReadMPX_polarization(pxl_file) polarization_scores <- ReadMPX_item(pxl_file, items = \"polarization\")"},{"path":"/articles/load_data.html","id":"seurat","dir":"Articles","previous_headings":"Load data","what":"Seurat","title":"Load data","text":"Perhaps useful function ReadMPX_Seurat allows us load MPX data Seurat object additional bells whistles provided pixelatorR. , options modify Seurat created. First foremost, can set return_cellgraphassay = FALSE return Seurat object includes abundance measurements. simpler data set, count matrix stored Assay without spatial data. means almost information unique MPX ignored able analyze visualize graphs way explore spatial statistics. However, basic data set uses significantly less memory faster process can useful protein abundance interesting data type analysis. default, ReadMPX_Seurat returns MPX data object called CellGraphAssay. object class extends Assay class Seurat essentially Assay object additional data slots. CellGraphAssay class covered detail later tutorial. additional parameters ReadMPX_Seurat controls behavior return_cellgraphassay = TRUE. default, MPX polarization scores colocalization scores loaded stored CellGraphAssay named “mpxCells”.","code":"seur_obj <- ReadMPX_Seurat(pxl_file) # Load simpler data set seur_obj <- ReadMPX_Seurat(pxl_file, return_cellgraphassay = FALSE) ## Warning: Data is of class matrix. Coercing to dgCMatrix. seur_obj[[\"mpxCells\"]] ## Assay (v5) data with 80 features for 477 cells ## Top 10 variable features: ##  CD274, CD44, CD25, CD279, CD41, HLA-ABC, CD54, CD26, CD27, CD38  ## Layers: ##  counts seur_obj <- ReadMPX_Seurat(pxl_file) seur_obj ## An object of class Seurat  ## 80 features across 477 samples within 1 assay  ## Active assay: mpxCells (80 features, 80 variable features) ##  1 layer present: counts"},{"path":"/articles/load_data.html","id":"spatial-metrics","dir":"Articles","previous_headings":"Load data","what":"Spatial metrics","title":"Load data","text":"can fetch polarization/colocalization score tables Seurat object PolarizationScores ColocalizationScores methods: equivalent way extract polarization scores : ’s good practice use PolarizationScores/ColocalizationScores easier read. One just make sure DefaultAssay set “mpxCells”.","code":"# Fetch polarization scores polarizaton_scores <- PolarizationScores(seur_obj) polarizaton_scores %>% head() ## # A tibble: 6 × 6 ##    morans_i morans_p_value morans_p_adjusted morans_z marker component     ##       <dbl>          <dbl>             <dbl>    <dbl> <chr>  <chr>         ## 1 -0.00299           0.772             1.00    -0.290 ACTB   RCVCMP0000830 ## 2 -0.0161            0.177             0.771   -1.35  B2M    RCVCMP0000830 ## 3  0.0147            0.125             0.633    1.53  CD102  RCVCMP0000830 ## 4 -0.00678           0.590             1.00    -0.539 CD11a  RCVCMP0000830 ## 5  0.000836          0.891             1.00     0.137 CD127  RCVCMP0000830 ## 6 -0.00132           0.145             0.693   -1.46  CD150  RCVCMP0000830 # Fetch colocalization scores colocalization_scores <- ColocalizationScores(seur_obj) colocalization_scores %>% head() ## # A tibble: 6 × 15 ##   marker_1 marker_2 pearson pearson_mean pearson_stdev pearson_z pearson_p_value ##   <chr>    <chr>      <dbl>        <dbl>         <dbl>     <dbl>           <dbl> ## 1 ACTB     ACTB       1            1           0          NA          NA         ## 2 ACTB     B2M        0.324        0.317       0.0162      0.429       0.334     ## 3 B2M      B2M        1            1           0          NA          NA         ## 4 ACTB     CD102      0.304        0.235       0.0167      4.17        0.0000151 ## 5 B2M      CD102      0.604        0.614       0.00966    -1.06        0.145     ## 6 CD102    CD102      1            1           0          NA          NA         ## # ℹ 8 more variables: pearson_p_value_adjusted <dbl>, jaccard <dbl>, ## #   jaccard_mean <dbl>, jaccard_stdev <dbl>, jaccard_z <dbl>, ## #   jaccard_p_value <dbl>, jaccard_p_value_adjusted <dbl>, component <chr> polarizaton_scores <- seur_obj[[\"mpxCells\"]]@polarization"},{"path":"/articles/load_data.html","id":"qc-metrics","dir":"Articles","previous_headings":"Load data","what":"QC metrics","title":"Load data","text":"Component-specific metrics stored @meta.data slot Seurat object can accessed double brackets ([[]]): can instance explore QC metrics visually component filtering:","code":"colnames(seur_obj[[]]) ##  [1] \"antibodies\"          \"edges\"               \"leiden\"              ##  [4] \"mean_reads\"          \"mean_umi_per_upia\"   \"mean_upia_degree\"    ##  [7] \"median_reads\"        \"median_umi_per_upia\" \"median_upia_degree\"  ## [10] \"reads\"               \"tau\"                 \"tau_type\"            ## [13] \"umi\"                 \"umi_per_upia\"        \"upia\"                ## [16] \"upia_per_upib\"       \"upib\"                \"vertices\" seur_obj[[]] %>% head() ##               antibodies edges leiden mean_reads mean_umi_per_upia ## RCVCMP0000000         77 23925      2   6.099645          8.179487 ## RCVCMP0000002         72  6719      1   5.868135          3.857061 ## RCVCMP0000003         78  8596      5   5.960330          3.653209 ## RCVCMP0000005         79 17206      3   5.743520          4.782101 ## RCVCMP0000006         76 21254      2   5.510445          5.413653 ## RCVCMP0000007         69  6687      1   5.683565          5.195804 ##               mean_upia_degree median_reads median_umi_per_upia ## RCVCMP0000000         3.134359            5                   5 ## RCVCMP0000002         2.191160            5                   3 ## RCVCMP0000003         2.002550            5                   2 ## RCVCMP0000005         2.540578            5                   3 ## RCVCMP0000006         2.461793            5                   3 ## RCVCMP0000007         2.732712            5                   3 ##               median_upia_degree  reads       tau tau_type   umi umi_per_upia ## RCVCMP0000000                  2 145934 0.9832869   normal 23645     8.083761 ## RCVCMP0000002                  2  39428 0.9734463   normal  6703     3.847876 ## RCVCMP0000003                  1  51235 0.9825753   normal  8548     3.632809 ## RCVCMP0000005                  2  98823 0.9733801   normal 17034     4.734297 ## RCVCMP0000006                  2 117119 0.9864106   normal 21032     5.357106 ## RCVCMP0000007                  2  38006 0.9710634   normal  6667     5.180264 ##               upia upia_per_upib upib vertices ## RCVCMP0000000 2925      2.881773 1015     3940 ## RCVCMP0000002 1742      2.927731  595     2337 ## RCVCMP0000003 2353      3.994907  589     2942 ## RCVCMP0000005 3598      2.784830 1292     4890 ## RCVCMP0000006 3926      2.918959 1345     5271 ## RCVCMP0000007 1287      2.508772  513     1800 ggplot(seur_obj[[]], aes(tau, umi_per_upia)) +   geom_point() +   scale_x_continuous(labels = scales::percent)"},{"path":"/articles/load_data.html","id":"edge-lists-graphs-and-pxl-files","dir":"Articles","previous_headings":"Load data","what":"Edge lists, graphs and PXL files","title":"Load data","text":"edge list represents raw MPX data row corresponds edge formed UPIA UPIB pixel. information rarely needed analysis, required want load explore component graphs. ReadMPX_Seurat doesn’t load edge list memory, instead keeps track paths PXL file(s) associated data. can get path PXL file FSMap function: FSMap returns tibble paths PXL files associated Seurat object. case, one PXL file. “id_map” column list, element consists tibble component IDs can used look table map “current” component IDs “original” component IDs. unnest “id_map” column, can see current original component IDs: rename component IDs Seurat object, “current_id” column updated, “original_id” column remain unchanged: current IDs always unique, original IDs often duplicated components follow naming convention across data sets. table helps us map current IDs correct original IDs PXL file(s). need load MPX component graphs memory, can use LoadCellGraphs function. hood, LoadCellGraphs uses table sort edge list data stored, reads edge list data converts graph object per component. example, can load graphs two selected components like : can fetch loaded CellGraph objects two components using: NOTE: PXL file path invalid, e.g. file missing moved, LoadCellGraphs throw error.","code":"FSMap(seur_obj[[\"mpxCells\"]]) FSMap(seur_obj[[\"mpxCells\"]]) %>%    tidyr::unnest(id_map) ## # A tibble: 477 × 4 ##    current_id    original_id   sample pxl_file                                   ##    <chr>         <chr>          <int> <chr>                                      ##  1 RCVCMP0000000 RCVCMP0000000      1 PBMC_data/Sample01_human_pbmcs_unstimulat… ##  2 RCVCMP0000002 RCVCMP0000002      1 PBMC_data/Sample01_human_pbmcs_unstimulat… ##  3 RCVCMP0000003 RCVCMP0000003      1 PBMC_data/Sample01_human_pbmcs_unstimulat… ##  4 RCVCMP0000005 RCVCMP0000005      1 PBMC_data/Sample01_human_pbmcs_unstimulat… ##  5 RCVCMP0000006 RCVCMP0000006      1 PBMC_data/Sample01_human_pbmcs_unstimulat… ##  6 RCVCMP0000007 RCVCMP0000007      1 PBMC_data/Sample01_human_pbmcs_unstimulat… ##  7 RCVCMP0000008 RCVCMP0000008      1 PBMC_data/Sample01_human_pbmcs_unstimulat… ##  8 RCVCMP0000010 RCVCMP0000010      1 PBMC_data/Sample01_human_pbmcs_unstimulat… ##  9 RCVCMP0000012 RCVCMP0000012      1 PBMC_data/Sample01_human_pbmcs_unstimulat… ## 10 RCVCMP0000013 RCVCMP0000013      1 PBMC_data/Sample01_human_pbmcs_unstimulat… ## # ℹ 467 more rows seur_obj_renamed <- RenameCells(seur_obj, new.names = paste0(\"A_\", colnames(seur_obj)))  FSMap(seur_obj_renamed[[\"mpxCells\"]]) %>%    tidyr::unnest(id_map) ## # A tibble: 477 × 4 ##    current_id      original_id   sample pxl_file                                 ##    <chr>           <chr>          <int> <chr>                                    ##  1 A_RCVCMP0000000 RCVCMP0000000      1 PBMC_data/Sample01_human_pbmcs_unstimul… ##  2 A_RCVCMP0000002 RCVCMP0000002      1 PBMC_data/Sample01_human_pbmcs_unstimul… ##  3 A_RCVCMP0000003 RCVCMP0000003      1 PBMC_data/Sample01_human_pbmcs_unstimul… ##  4 A_RCVCMP0000005 RCVCMP0000005      1 PBMC_data/Sample01_human_pbmcs_unstimul… ##  5 A_RCVCMP0000006 RCVCMP0000006      1 PBMC_data/Sample01_human_pbmcs_unstimul… ##  6 A_RCVCMP0000007 RCVCMP0000007      1 PBMC_data/Sample01_human_pbmcs_unstimul… ##  7 A_RCVCMP0000008 RCVCMP0000008      1 PBMC_data/Sample01_human_pbmcs_unstimul… ##  8 A_RCVCMP0000010 RCVCMP0000010      1 PBMC_data/Sample01_human_pbmcs_unstimul… ##  9 A_RCVCMP0000012 RCVCMP0000012      1 PBMC_data/Sample01_human_pbmcs_unstimul… ## 10 A_RCVCMP0000013 RCVCMP0000013      1 PBMC_data/Sample01_human_pbmcs_unstimul… ## # ℹ 467 more rows seur_obj <- LoadCellGraphs(seur_obj, cells = c(\"RCVCMP0000228\", \"RCVCMP0000231\")) CellGraphs(seur_obj)[c(\"RCVCMP0000228\", \"RCVCMP0000231\")] ## $RCVCMP0000228 ## A CellGraph object containing a bipartite graph with 3914 nodes and 8022 edges ## Number of markers:  78  ##  ## $RCVCMP0000231 ## A CellGraph object containing a bipartite graph with 4300 nodes and 8027 edges ## Number of markers:  75"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ludvig Larsson. Author, maintainer. Max Karlsson. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Larsson L, Karlsson M (2024). pixelatorR: Data Structures, Data Processing Tools Visualization Tools MPX Single Cell Data. R package version 0.5.0, https://pixelgentechnologies.github.io/pixelatorR/.","code":"@Manual{,   title = {pixelatorR: Data Structures, Data Processing Tools and Visualization Tools for MPX Single Cell Data},   author = {Ludvig Larsson and Max Karlsson},   year = {2024},   note = {R package version 0.5.0},   url = {https://pixelgentechnologies.github.io/pixelatorR/}, }"},{"path":"/index.html","id":"pixelatorr","dir":"","previous_headings":"","what":"pixelatorR","title":"pixelatorR","text":"pixelatorR provides infrastructure process, analyze visualize MPX data R users.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"pixelatorR","text":"pixelatorR can installed GitHub running following code R:","code":"install.packages(\"remotes\") remotes::install_github(\"PixelgenTechnologies/pixelatorR\")"},{"path":"/index.html","id":"installation-from-source","dir":"","previous_headings":"Installation","what":"Installation from source","title":"pixelatorR","text":"can also install pixelatorR source cloning repository. , R session, run:","code":"git clone https://github.com/pixelgentechnologies/pixelatorR.git install.packages(\"<path to pixelatorR directory>\", repos = NULL, type = \"source\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"pixelatorR","text":"Visit tutorials step-step guide MPX data analysis pixelatorR. site, also provide additional additional tutorials directed towards users interested details pixelatorR stores handles MPX data R. Function documentation can accessed reference tab . Alternatively, can access documentation R session running ?function_name package installed.","code":""},{"path":"/index.html","id":"notes","dir":"","previous_headings":"","what":"Notes","title":"pixelatorR","text":"pixelatorR designed work classes SeuratObject R package. best analysis experience, recommend installing Seurat v5.","code":""},{"path":"/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"pixelatorR","text":"feature requests bug reports, please use GitHub issues. can also email development team developers@pixelgen.com.","code":""},{"path":"/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"pixelatorR","text":"pixelatorR developed maintained developers Pixelgen Technologies. using pixelator research, please cite following publication: Karlsson, Filip, Tomasz Kallas, Divya Thiagarajan, Max Karlsson, Maud Schweitzer, Jose Fernandez Navarro, Louise Leijonancker, et al. “Molecular Pixelation: Single Cell Spatial Proteomics Sequencing.” bioRxiv, June 8, 2023. https://doi.org/10.1101/2023.06.05.543770. Main developers: Ludvig Larsson (@ludvigla) Max Karlsson (@maxkarlsson) huge thank code contributors!","code":""},{"path":"/pull_request_template.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"NA","text":"Please include summary change issue(s) fixed. Please also include relevant motivation context. List dependencies required change. Fixes: #(issue number)","code":""},{"path":"/pull_request_template.html","id":"type-of-change","dir":"","previous_headings":"","what":"Type of change","title":"NA","text":"Please delete options relevant. Bug fix (non-breaking change fixes issue). New feature (non-breaking change adds functionality). Breaking change (fix feature cause existing functionality work expected). change requires documentation update.","code":""},{"path":"/pull_request_template.html","id":"how-has-this-been-tested","dir":"","previous_headings":"","what":"How Has This Been Tested?","title":"NA","text":"Please describe tests ran verify changes. Provide instructions can reproduce relevant.","code":""},{"path":"/pull_request_template.html","id":"pr-checklist","dir":"","previous_headings":"","what":"PR checklist:","title":"NA","text":"comment contains description changes (reason). performed self-review code. made corresponding changes documentation. changes generate new warnings. added tests prove fix effective feature works. checked code documentation corrected misspellings. run R CMD check package passes without errors warnings (notes can acceptable motivated) documented significant changes code CHANGELOG.md","code":""},{"path":"/reference/CellCountPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot cell counts per group — CellCountPlot","title":"Plot cell counts per group — CellCountPlot","text":"QC plot function used get quick overview called cells MPX data set.","code":""},{"path":"/reference/CellCountPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot cell counts per group — CellCountPlot","text":"","code":"CellCountPlot(object, ...)  # S3 method for data.frame CellCountPlot(   object,   group_by = NULL,   color_by,   show_count = TRUE,   flip_axes = FALSE,   ... )  # S3 method for Seurat CellCountPlot(   object,   group_by = NULL,   color_by,   show_count = TRUE,   flip_axes = FALSE,   ... )"},{"path":"/reference/CellCountPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot cell counts per group — CellCountPlot","text":"object data.frame-like object Seurat object ... yet implemented group_by column object representing 'character' 'factor' group data color_by column object representing 'character' 'factor' color data show_count Place count top bar next bar flip_axes = TRUE flip_axes Flip plot layout","code":""},{"path":"/reference/CellCountPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot cell counts per group — CellCountPlot","text":"ggplot object","code":""},{"path":[]},{"path":"/reference/CellCountPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot cell counts per group — CellCountPlot","text":"","code":"library(pixelatorR)  # Load example data as a Seurat object pxl_file <- system.file(\"extdata/five_cells\",   \"five_cells.pxl\",   package = \"pixelatorR\" ) seur_obj <- ReadMPX_Seurat(pxl_file) #> ✔ Created a 'Seurat' object with 5 cells and 80 targeted surface proteins seur_obj #> An object of class Seurat  #> 80 features across 5 samples within 1 assay  #> Active assay: mpxCells (80 features, 80 variable features) #>  1 layer present: counts  # Add random labels to color by seur_obj$labels <- sample(c(\"A\", \"B\"), size = ncol(seur_obj), replace = TRUE)  # Plot with data.frame and color by labels CellCountPlot(seur_obj[[]], color_by = \"labels\")   # Plot with Seurat object CellCountPlot(seur_obj, color_by = \"labels\")   # Color by sample in merged data seur_obj1 <- seur_obj2 <- seur_obj seur_obj1$sample <- \"1\" seur_obj2$sample <- \"2\" seur_obj_merged <- merge(seur_obj1, seur_obj2, add.cell.ids = c(\"A\", \"B\")) CellCountPlot(seur_obj_merged, group_by = \"labels\", color_by = \"sample\")"},{"path":"/reference/CellGraph-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The CellGraph class — CellGraph-class","title":"The CellGraph class — CellGraph-class","text":"CellGraph class designed hold information needed working mpx single-cell graphs.","code":""},{"path":"/reference/CellGraph-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The CellGraph class — CellGraph-class","text":"cellgraph tbl_graph object corresponding cell graph counts matrix-like object marker counts layout list tbl_df objects coordinates cell layouts","code":""},{"path":"/reference/CellGraphAssay-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The CellGraphAssay class — CellGraphAssay-class","title":"The CellGraphAssay class — CellGraphAssay-class","text":"CellGraphAssay object extended Assay storage analysis MPX single-cell data.","code":""},{"path":"/reference/CellGraphAssay-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The CellGraphAssay class — CellGraphAssay-class","text":"cellgraphs named list CellGraph objects polarization tbl_df polarization scores colocalization tbl_df colocalization scores fs_map tbl_df information source pxl file paths, sample IDs, component IDs","code":""},{"path":"/reference/CellGraphAssay-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"CellGraphAssay Methods — RenameCells.CellGraphAssay","title":"CellGraphAssay Methods — RenameCells.CellGraphAssay","text":"Methods CellGraphAssay objects generics defined packages","code":""},{"path":"/reference/CellGraphAssay-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CellGraphAssay Methods — RenameCells.CellGraphAssay","text":"","code":"# S3 method for CellGraphAssay RenameCells(object, new.names = NULL, ...)  # S4 method for CellGraphAssay show(object)  # S3 method for CellGraphAssay subset(x, features = NULL, cells = NULL, ...)  # S3 method for CellGraphAssay merge(   x = NULL,   y = NULL,   merge.data = TRUE,   add.cell.ids = NULL,   collapse = TRUE,   ... )"},{"path":"/reference/CellGraphAssay-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CellGraphAssay Methods — RenameCells.CellGraphAssay","text":"object CellGraphAssay CellGraphAssay5 object new.names character vector new cell IDs. length vector must equal number cells object names must unique. ... Arguments passed methods x CellGraphAssay object features Feature names cells Cell names y CellGraphAssay object list CellGraphAssay objects merge.data Merge data slots instead just merging counts (requires renormalization); recommended normalization approach applied objects add.cell.ids character vector sample names collapse TRUE, merge layers name together","code":""},{"path":"/reference/CellGraphAssay-methods.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"CellGraphAssay Methods — RenameCells.CellGraphAssay","text":"RenameCells(CellGraphAssay): Rename cell IDs CellGraphAssay object show(CellGraphAssay): Show method CellGraphAssay objects subset(CellGraphAssay): Subset CellGraphAssay object merge(CellGraphAssay): Merge two CellGraphAssay objects together","code":""},{"path":"/reference/CellGraphAssay5-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The CellGraphAssay5 class — CellGraphAssay5-class","title":"The CellGraphAssay5 class — CellGraphAssay5-class","text":"CellGraphAssay5 object extended Assay5 storage analysis MPX single-cell data.","code":""},{"path":"/reference/CellGraphAssay5-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The CellGraphAssay5 class — CellGraphAssay5-class","text":"cellgraphs named list CellGraph objects polarization tbl_df polarization scores colocalization tbl_df colocalization scores fs_map tbl_df information source pxl file paths, sample IDs, component IDs","code":""},{"path":"/reference/CellGraphAssay5-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"CellGraphAssay5 Methods — RenameCells.CellGraphAssay5","title":"CellGraphAssay5 Methods — RenameCells.CellGraphAssay5","text":"Methods CellGraphAssay5 objects generics defined packages","code":""},{"path":"/reference/CellGraphAssay5-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CellGraphAssay5 Methods — RenameCells.CellGraphAssay5","text":"","code":"# S3 method for CellGraphAssay5 RenameCells(object, new.names = NULL, ...)  # S4 method for CellGraphAssay5 show(object)  # S3 method for CellGraphAssay5 subset(x, features = NULL, cells = NULL, ...)  # S3 method for CellGraphAssay5 merge(   x = NULL,   y = NULL,   merge.data = TRUE,   add.cell.ids = NULL,   collapse = TRUE,   ... )"},{"path":"/reference/CellGraphAssay5-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CellGraphAssay5 Methods — RenameCells.CellGraphAssay5","text":"object CellGraphAssay CellGraphAssay5 object new.names character vector new cell IDs. length vector must equal number cells object names must unique. ... Arguments passed methods x CellGraphAssay5 object features Feature names cells Cell names y CellGraphAssay5 object list CellGraphAssay5 objects merge.data Merge data slots instead just merging counts (requires renormalization); recommended normalization approach applied objects add.cell.ids character vector sample names collapse TRUE, merge layers name together","code":""},{"path":"/reference/CellGraphAssay5-methods.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"CellGraphAssay5 Methods — RenameCells.CellGraphAssay5","text":"RenameCells(CellGraphAssay5): Rename cell IDs CellGraphAssay5 object show(CellGraphAssay5): Show method CellGraphAssay5 objects subset(CellGraphAssay5): Subset CellGraphAssay5 object merge(CellGraphAssay5): Merge two CellGraphAssay5 objects together","code":""},{"path":"/reference/CellGraphData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set CellGraph object data — CellGraphData","title":"Get and set CellGraph object data — CellGraphData","text":"Get set CellGraph object data","code":""},{"path":"/reference/CellGraphData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set CellGraph object data — CellGraphData","text":"","code":"CellGraphData(object, slot = \"cellgraph\")  CellGraphData(object, slot = \"cellgraph\") <- value"},{"path":"/reference/CellGraphData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set CellGraph object data — CellGraphData","text":"object CellGraph object slot Information pull object (cellgraph, meta_data, layout) value new variable place slot","code":""},{"path":"/reference/CellGraphData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and set CellGraph object data — CellGraphData","text":"GetCellGraphData: CellGraph object slot CellGraphData<-: CellGraph updated data","code":""},{"path":"/reference/CellGraphData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and set CellGraph object data — CellGraphData","text":"","code":"library(pixelatorR) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(tidygraph) #>  #> Attaching package: ‘tidygraph’ #> The following object is masked from ‘package:stats’: #>  #>     filter  edge_list <-   ReadMPX_item(     system.file(\"extdata/five_cells\",                 \"five_cells.pxl\",                 package = \"pixelatorR\"),     items = \"edgelist\"   ) #> ℹ Loading item(s) from: /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl #> →   Loading edgelist data #> ✔ Returning a 'tbl_df' object bipart_graph <-   edge_list %>%   select(upia, upib, marker) %>%   distinct() %>%   as_tbl_graph(directed = FALSE) %>%   mutate(node_type = case_when(name %in% edge_list$upia ~ \"A\", TRUE ~ \"B\")) attr(bipart_graph, \"type\") <- \"bipartite\"  cg <- CreateCellGraphObject(cellgraph = bipart_graph)  # Get slot data CellGraphData(cg, slot = \"cellgraph\") #> # A tbl_graph: 16800 nodes and 68255 edges #> # #> # An undirected multigraph with 5 components #> # #> # Node Data: 16,800 × 2 (active) #>    name                      node_type #>    <chr>                     <chr>     #>  1 GGTATATATTTTAAGTAGTTTAGTA A         #>  2 ATTATGTTGTTGTATGTTTATTATT A         #>  3 TCCGTGGTTTGATACTCGGGAATTT A         #>  4 AGTGTAAGAGGTTGTTTCTTAGAAA A         #>  5 GAGCAGACAATGGCGCTTAGCTAAA A         #>  6 CAATTTTGACCTAGTTGTGGCCAAG A         #>  7 ATGTCAGAGTGAATAGTTGTGATTG A         #>  8 ATAAAGTGACCAGTTGAATGGGCCC A         #>  9 TGCCTCTTGAGCTGTTGATCGCCTG A         #> 10 ATTAGATGTAGAGCGCGAAAATTGG A         #> # ℹ 16,790 more rows #> # #> # Edge Data: 68,255 × 3 #>    from    to marker #>   <int> <int> <chr>  #> 1     1 11034 CD27   #> 2     2 11035 CD27   #> 3     3 11036 CD27   #> # ℹ 68,252 more rows  # Set slot data CellGraphData(cg, slot = \"cellgraph\") <- CellGraphData(cg, slot = \"cellgraph\")"},{"path":"/reference/CellGraphs.html","id":null,"dir":"Reference","previous_headings":"","what":"CellGraphs — CellGraphs","title":"CellGraphs — CellGraphs","text":"Get set CellGraph lists different objects.","code":""},{"path":"/reference/CellGraphs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CellGraphs — CellGraphs","text":"","code":"CellGraphs(object, ...)  CellGraphs(object, ...) <- value  # S3 method for MPXAssay CellGraphs(object, ...)  # S3 method for MPXAssay CellGraphs(object, ...) <- value  # S3 method for Seurat CellGraphs(object, ...)  # S3 method for Seurat CellGraphs(object, ...) <- value"},{"path":"/reference/CellGraphs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CellGraphs — CellGraphs","text":"object Seurat, CellGraphAssay CellGraphAssay object ... Arguments passed methods value list CellGraph objects","code":""},{"path":"/reference/CellGraphs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CellGraphs — CellGraphs","text":"Returns list CellGraph objects. CellGraph objects present, returns empty named list.","code":""},{"path":[]},{"path":"/reference/CellGraphs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CellGraphs — CellGraphs","text":"","code":"library(pixelatorR) library(dplyr) library(tidygraph)  pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\") counts <- ReadMPX_counts(pxl_file) #> ℹ Loading count data from /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl edgelist <- ReadMPX_item(pxl_file, items = \"edgelist\") #> ℹ Loading item(s) from: /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl #> →   Loading edgelist data #> ✔ Returning a 'tbl_df' object components <- colnames(counts) edgelist_split <-   edgelist %>%   select(upia, upib, component) %>%   distinct() %>%   group_by(component) %>%   group_split() %>%   setNames(nm = components)  # Convert data into a list of CellGraph objects bipartite_graphs <- lapply(edgelist_split, function(x) {   x <- x %>% as_tbl_graph(directed = FALSE)   x <- x %>% mutate(node_type = case_when(name %in% edgelist$upia ~ \"A\", TRUE ~ \"B\"))   attr(x, \"type\") <- \"bipartite\"   CreateCellGraphObject(cellgraph = x) })  # CellGraphs getter CellGraphAssay # ---------------------------------  # Create CellGraphAssay cg_assay <- CreateCellGraphAssay(counts = counts, cellgraphs = bipartite_graphs) cg_assay #> CellGraphAssay data with 80 features for 5 cells #> First 10 features: #>  CD274, CD44, CD25, CD279, CD41, HLA-ABC, CD54, CD26, CD27, CD38  #> Loaded CellGraph objects: #>  5  # Get cellgraphs from a CellGraphAssay object CellGraphs(cg_assay) #> $RCVCMP0000217 #> A CellGraph object containing a bipartite graph with 3507 nodes and 7580 edges #>  #> $RCVCMP0000118 #> A CellGraph object containing a bipartite graph with 2470 nodes and 5138 edges #>  #> $RCVCMP0000487 #> A CellGraph object containing a bipartite graph with 4225 nodes and 8150 edges #>  #> $RCVCMP0000655 #> A CellGraph object containing a bipartite graph with 4340 nodes and 9918 edges #>  #> $RCVCMP0000263 #> A CellGraph object containing a bipartite graph with 2258 nodes and 4303 edges #>    # CellGraphs setter CellGraphAssay # ---------------------------------  # Set cellgraphs in a CellGraphAssay object CellGraphs(cg_assay) <- cg_assay@cellgraphs   # CellGraphs getter Seurat # --------------------------------- se <- ReadMPX_Seurat(pxl_file) #> ✔ Created a 'Seurat' object with 5 cells and 80 targeted surface proteins  # Get cellgraphs from a Seurat object CellGraphs(se) #> $RCVCMP0000217 #> NULL #>  #> $RCVCMP0000118 #> NULL #>  #> $RCVCMP0000487 #> NULL #>  #> $RCVCMP0000655 #> NULL #>  #> $RCVCMP0000263 #> NULL #>    # CellGraphs setter Seurat # ---------------------------------  # Set cellgraphs in a Seurat object CellGraphs(se) <- cg_assay@cellgraphs"},{"path":"/reference/ColocalizationHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot DCA results — ColocalizationHeatmap","title":"Plot DCA results — ColocalizationHeatmap","text":"Draws heatmap estimates obtained differential analysis test computed RunDCA.","code":""},{"path":"/reference/ColocalizationHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot DCA results — ColocalizationHeatmap","text":"","code":"ColocalizationHeatmap(   data,   colors = c(\"#053061\", \"#2166AC\", \"#4393C3\", \"#92C5DE\", \"#D1E5F0\", \"#F7F7F7\", \"#FDDBC7\",     \"#F4A582\", \"#D6604D\", \"#B2182B\", \"#67001F\"),   return_plot_data = FALSE,   ... )"},{"path":"/reference/ColocalizationHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot DCA results — ColocalizationHeatmap","text":"data tbl_df object generated RunDCA colors character vector colors return_plot_data Return data formatted plotting instead drawing heatmap ... Parameters passed pheatmap","code":""},{"path":"/reference/ColocalizationHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot DCA results — ColocalizationHeatmap","text":"heatmap","code":""},{"path":"/reference/ColocalizationScores.html","id":null,"dir":"Reference","previous_headings":"","what":"ColocalizationScores — ColocalizationScores","title":"ColocalizationScores — ColocalizationScores","text":"Get set colocalization scores CellGraphAssay, CellGraphAssay5 Seurat object","code":""},{"path":"/reference/ColocalizationScores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ColocalizationScores — ColocalizationScores","text":"","code":"ColocalizationScores(object, ...)  ColocalizationScores(object, ...) <- value  # S3 method for MPXAssay ColocalizationScores(object, ...)  # S3 method for MPXAssay ColocalizationScores(object, ...) <- value  # S3 method for Seurat ColocalizationScores(object, assay = NULL, meta_data_columns = NULL, ...)  # S3 method for Seurat ColocalizationScores(object, assay = NULL, ...) <- value"},{"path":"/reference/ColocalizationScores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ColocalizationScores — ColocalizationScores","text":"object object polarization scores ... implemented value tbl_df colocalization scores assay Name CellGraphAssay meta_data_columns character vector meta.data column names. option can useful join meta.data columns polarization score table.","code":""},{"path":"/reference/ColocalizationScores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ColocalizationScores — ColocalizationScores","text":"ColocalizationScores: Colocalization scores ColocalizationScores<-: object colocalization scores updated","code":""},{"path":[]},{"path":"/reference/ColocalizationScoresToAssay.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert colocalization score table to an Assay or Assay5 — ColocalizationScoresToAssay","title":"Convert colocalization score table to an Assay or Assay5 — ColocalizationScoresToAssay","text":"Convert colocalization score table Assay Assay5","code":""},{"path":"/reference/ColocalizationScoresToAssay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert colocalization score table to an Assay or Assay5 — ColocalizationScoresToAssay","text":"","code":"ColocalizationScoresToAssay(object, ...)  # S3 method for data.frame ColocalizationScoresToAssay(   object,   values_from = c(\"pearson_z\", \"pearson\"),   ... )  # S3 method for MPXAssay ColocalizationScoresToAssay(   object,   values_from = c(\"pearson_z\", \"pearson\"),   ... )  # S3 method for CellGraphAssay ColocalizationScoresToAssay(   object,   values_from = c(\"pearson_z\", \"pearson\"),   ... )  # S3 method for CellGraphAssay5 ColocalizationScoresToAssay(   object,   values_from = c(\"pearson_z\", \"pearson\"),   ... )  # S3 method for Seurat ColocalizationScoresToAssay(   object,   assay = NULL,   new_assay = NULL,   values_from = c(\"pearson_z\", \"pearson\"),   ... )"},{"path":"/reference/ColocalizationScoresToAssay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert colocalization score table to an Assay or Assay5 — ColocalizationScoresToAssay","text":"object object colocalization scores ... yet implemented values_from column pick colocalization scores . One \"pearson\" \"pearson_z\" assay Name CellGraphAssay pull polarization scores new_assay Name Assay store polarization scores ","code":""},{"path":"/reference/ColocalizationScoresToAssay.html","id":"behavior","dir":"Reference","previous_headings":"","what":"Behavior","title":"Convert colocalization score table to an Assay or Assay5 — ColocalizationScoresToAssay","text":"Takes object colocalization scores long format returns object colocalization scores wide format. colocalization score table includes various colocalization scores along p-values pair markers component. wide format array-like object dimensions (markers_1 * marker_2) x components, cell filled polarization score. Scores missing colocalization score table replaced 0's. Different outputs returned depending input object type: tibble/data.frame: returns matrix marker pairs rows components columns CelGraphAssay: returns Assay marker pairs rows components columns Seurat object: returns Seurat object new Assay marker pairs rows components columns many functions provided Seurat works Assay objects, sometimes convenient make conversion. instance, want compute UMAP colocalization scores RunUMAP, need values formatted Assay. also makes possible use various visualization functions VlnPlot FeaturePlor show distribution colocalization scores.","code":""},{"path":[]},{"path":"/reference/ColocalizationScoresToAssay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert colocalization score table to an Assay or Assay5 — ColocalizationScoresToAssay","text":"","code":"library(pixelatorR) library(SeuratObject) #> Loading required package: sp #> ‘SeuratObject’ was built with package ‘Matrix’ 1.6.3 but the current #> version is 1.6.5; it is recomended that you reinstall ‘SeuratObject’ as #> the ABI for ‘Matrix’ may have changed #>  #> Attaching package: ‘SeuratObject’ #> The following object is masked from ‘package:base’: #>  #>     intersect  # Load example data as a Seurat object pxl_file <- system.file(\"extdata/five_cells\",   \"five_cells.pxl\",   package = \"pixelatorR\" ) col_scores <- ReadMPX_colocalization(pxl_file) #> ℹ Loading item(s) from: /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl #> →   Loading colocalization data #> ✔ Returning a 'tbl_df' object  # ColocalizationScoresToAssay returns a matrix for a tbl_df col_scores_mat <- ColocalizationScoresToAssay(col_scores) col_scores_mat[1:4, 1:5] #>            RCVCMP0000217 RCVCMP0000118 RCVCMP0000487 RCVCMP0000655 #> ACTB-B2M      -0.9401321      0.000000     -2.879992     4.5740882 #> ACTB-CD102     1.9241318      0.000000      3.157566    -0.4834448 #> B2M-CD102      4.7268224      2.190192     -3.101690     2.3802011 #> ACTB-CD11a     2.1011979      0.000000     -1.804651     8.0947966 #>            RCVCMP0000263 #> ACTB-B2M       1.9368818 #> ACTB-CD102     0.5934362 #> B2M-CD102     -5.2602955 #> ACTB-CD11a     5.4727656  # Create a Seurat object seur <- ReadMPX_Seurat(pxl_file) #> ✔ Created a 'Seurat' object with 5 cells and 80 targeted surface proteins  # Fetch CellGraphAssay and create new polarization # scores Assay cg_assay <- seur[[\"mpxCells\"]] class(cg_assay) #> [1] \"CellGraphAssay5\" #> attr(,\"package\") #> [1] \"pixelatorR\" col_assay <- ColocalizationScoresToAssay(cg_assay) class(col_assay) #> [1] \"Assay5\" #> attr(,\"package\") #> [1] \"SeuratObject\"  # Convert colocalization scores within a Seurat object seur <- ColocalizationScoresToAssay(seur)  # After conversion, we now have a new assay called \"colocalization\" seur[[\"colocalization\"]] #> Assay (v5) data with 3160 features for 5 cells #> First 10 features: #>  ACTB-B2M, ACTB-CD102, B2M-CD102, ACTB-CD11a, B2M-CD11a, CD102-CD11a, #> ACTB-CD11b, B2M-CD11b, CD102-CD11b, CD11a-CD11b  #> Layers: #>  data   # Switch default assay to polarization DefaultAssay(seur) <- \"colocalization\"  # Visualize colocalization scores with Seurat # VlnPlot(seur, features = \"CD19\") + #   ggplot2::labs(y = \"Colocalization score\")"},{"path":"/reference/ComputeLayout.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a graph layout — ComputeLayout","title":"Compute a graph layout — ComputeLayout","text":"Calculates graph layout component's edgelist, outputs list bipartite graph, layout, antibody counts per pixel.","code":""},{"path":"/reference/ComputeLayout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a graph layout — ComputeLayout","text":"","code":"ComputeLayout(object, ...)  # S3 method for tbl_graph ComputeLayout(   object,   layout_method = c(\"pmds\", \"fr\", \"kk\", \"drl\"),   dim = 2,   normalize_layout = FALSE,   project_on_unit_sphere = FALSE,   k = 0,   pivots = 100,   seed = 123,   custom_layout_function = NULL,   custom_layout_function_args = NULL,   ... )  # S3 method for CellGraph ComputeLayout(   object,   layout_method = c(\"pmds\", \"fr\", \"kk\", \"drl\"),   layout_name = NULL,   dim = 2,   normalize_layout = FALSE,   project_on_unit_sphere = FALSE,   k = 0,   pivots = 100,   seed = 123,   custom_layout_function = NULL,   custom_layout_function_args = NULL,   ... )  # S3 method for MPXAssay ComputeLayout(   object,   layout_method = c(\"pmds\", \"fr\", \"kk\", \"drl\"),   layout_name = NULL,   dim = 2,   normalize_layout = FALSE,   project_on_unit_sphere = FALSE,   k = 0,   pivots = 100,   seed = 123,   verbose = TRUE,   custom_layout_function = NULL,   custom_layout_function_args = NULL,   cl = NULL,   ... )  # S3 method for CellGraphAssay ComputeLayout(   object,   layout_method = c(\"pmds\", \"fr\", \"kk\", \"drl\"),   layout_name = NULL,   dim = 2,   normalize_layout = FALSE,   project_on_unit_sphere = FALSE,   k = 0,   pivots = 100,   seed = 123,   verbose = TRUE,   custom_layout_function = NULL,   custom_layout_function_args = NULL,   cl = NULL,   ... )  # S3 method for CellGraphAssay5 ComputeLayout(   object,   layout_method = c(\"pmds\", \"fr\", \"kk\", \"drl\"),   layout_name = NULL,   dim = 2,   normalize_layout = FALSE,   project_on_unit_sphere = FALSE,   k = 0,   pivots = 100,   seed = 123,   verbose = TRUE,   custom_layout_function = NULL,   custom_layout_function_args = NULL,   cl = NULL,   ... )  # S3 method for Seurat ComputeLayout(   object,   assay = NULL,   layout_method = c(\"pmds\", \"fr\", \"kk\", \"drl\"),   layout_name = NULL,   dim = 2,   normalize_layout = FALSE,   project_on_unit_sphere = FALSE,   k = 0,   pivots = 100,   seed = 123,   verbose = TRUE,   custom_layout_function = NULL,   custom_layout_function_args = NULL,   ... )"},{"path":"/reference/ComputeLayout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a graph layout — ComputeLayout","text":"object object ... Additional parameters passed methods layout_method method calculating graph layout; PMDS, Fruchterman-Reingold (fr), Kamada-Kawai (kk), drl. dim integer specifying dimensions layout (2 3) normalize_layout Logical specifying whether coordinate system centered origo coordinates scaled median length (euclidean norm) 1. project_on_unit_sphere resulting layout projected onto unit sphere? k size neighborhood pool counts UPIA antibody count table. 0 recommended. pivots used \"pmds\" graph layout. See ?layout_with_pmds details seed Set seed reproducibility custom_layout_function custom function layout computation. function take tbl_graph object dim value input return matrix dimensions NxD, N number nodes D equal dim. Note override layout_method. custom_layout_function_args list arguments passed custom_layout_function. dim automatically passed custom_layout_function included custom_layout_function_args. layout_name name computed layout. name given, layout_method used name. verbose Print messages cl cluster object created makeCluster, integer indicate number child-processes (integer values ignored Windows) parallel evaluations. See Details performance documentation pbapply. default NULL, means parallelization used. assay Name assay compute layouts ","code":""},{"path":"/reference/ComputeLayout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a graph layout — ComputeLayout","text":"object containing graph layout","code":""},{"path":[]},{"path":"/reference/ComputeLayout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a graph layout — ComputeLayout","text":"","code":"library(pixelatorR) library(dplyr)  pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\")  # Load example data seur <- ReadMPX_Seurat(pxl_file) #> ✔ Created a 'Seurat' object with 5 cells and 80 targeted surface proteins  # Load 1 cellgraph seur <- LoadCellGraphs(seur, cells = colnames(seur)[1],                        load_as = \"Anode\", force = TRUE) #> →    Loading CellGraphs for 1 cells from sample 1 #> ✔ Successfully loaded 1 CellGraph object(s).  # Get CellGraph cg <- CellGraphs(seur)[[colnames(seur)[1]]]  # Get tbl_graph object tbl_graph <- slot(cg, name = \"cellgraph\")  # Compute layout for a tbl_graph layout <- ComputeLayout(tbl_graph, layout_method = \"fr\") layout %>% head() #> # A tibble: 6 × 2 #>       x     y #>   <dbl> <dbl> #> 1 -13.9 -3.73 #> 2 -14.3 -1.98 #> 3 -12.6 -3.69 #> 4 -11.5 -3.45 #> 5 -12.9 -4.20 #> 6 -13.5 -2.32   # Compute layout for a CellGraph cg <- ComputeLayout(cg, layout_method = \"fr\")   # Compute layout for a CellGraphAssay cg_assay <- ComputeLayout(seur[[\"mpxCells\"]], layout_method = \"fr\") #> ℹ Computing layouts for 1 graphs   # Compute layout for a Seurat object seur <- ComputeLayout(seur, layout_method = \"fr\") #> ℹ Computing layouts for 1 graphs"},{"path":"/reference/CreateCellGraphAssay.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a CellGraphAssay object — CreateCellGraphAssay","title":"Create a CellGraphAssay object — CreateCellGraphAssay","text":"Create CellGraphAssay object count matrix. expected format input matrix features x cells.","code":""},{"path":"/reference/CreateCellGraphAssay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a CellGraphAssay object — CreateCellGraphAssay","text":"","code":"CreateCellGraphAssay(   counts,   cellgraphs,   polarization = NULL,   colocalization = NULL,   fs_map = NULL,   verbose = FALSE,   ... )"},{"path":"/reference/CreateCellGraphAssay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a CellGraphAssay object — CreateCellGraphAssay","text":"counts Unnormalized data (raw counts) cellgraphs named list CellGraph objects polarization tbl_df polarization scores colocalization tbl_df colocalization scores fs_map tbl_df information source pxl file paths, sample IDs, component IDs verbose Print messages ... Additional arguments passed CreateAssayObject","code":""},{"path":"/reference/CreateCellGraphAssay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a CellGraphAssay object — CreateCellGraphAssay","text":"CellGraphAssay object","code":""},{"path":"/reference/CreateCellGraphAssay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a CellGraphAssay object — CreateCellGraphAssay","text":"","code":"library(pixelatorR) library(dplyr) library(tidygraph)  pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\") counts <- ReadMPX_counts(pxl_file) #> ℹ Loading count data from /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl edgelist <- ReadMPX_item(pxl_file, items = \"edgelist\") #> ℹ Loading item(s) from: /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl #> →   Loading edgelist data #> ✔ Returning a 'tbl_df' object components <- colnames(counts) edgelist_split <-   edgelist %>%   select(upia, upib, component) %>%   distinct() %>%   group_by(component) %>%   group_split() %>%   setNames(nm = components)  # Convert data into a list of CellGraph objects bipartite_graphs <- lapply(edgelist_split, function(x) {   x <- x %>% as_tbl_graph(directed = FALSE)   x <- x %>% mutate(node_type = case_when(name %in% edgelist$upia ~ \"A\", TRUE ~ \"B\"))   attr(x, \"type\") <- \"bipartite\"   CreateCellGraphObject(cellgraph = x) })  # Create CellGraphAssay cg_assay <- CreateCellGraphAssay(counts = counts, cellgraphs = bipartite_graphs) cg_assay #> CellGraphAssay data with 80 features for 5 cells #> First 10 features: #>  CD274, CD44, CD25, CD279, CD41, HLA-ABC, CD54, CD26, CD27, CD38  #> Loaded CellGraph objects: #>  5"},{"path":"/reference/CreateCellGraphAssay5.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a CellGraphAssay5 object — CreateCellGraphAssay5","title":"Create a CellGraphAssay5 object — CreateCellGraphAssay5","text":"Create CellGraphAssay5 object count matrix. expected format input matrix features x cells.","code":""},{"path":"/reference/CreateCellGraphAssay5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a CellGraphAssay5 object — CreateCellGraphAssay5","text":"","code":"CreateCellGraphAssay5(   counts,   cellgraphs,   polarization = NULL,   colocalization = NULL,   fs_map = NULL,   verbose = FALSE,   ... )"},{"path":"/reference/CreateCellGraphAssay5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a CellGraphAssay5 object — CreateCellGraphAssay5","text":"counts Unnormalized data (raw counts) cellgraphs named list CellGraph objects polarization tbl_df polarization scores colocalization tbl_df colocalization scores fs_map tbl_df information source pxl file paths, sample IDs, component IDs verbose Print messages ... Additional arguments passed CreateAssay5Object","code":""},{"path":"/reference/CreateCellGraphAssay5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a CellGraphAssay5 object — CreateCellGraphAssay5","text":"CellGraphAssay5 object","code":""},{"path":"/reference/CreateCellGraphAssay5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a CellGraphAssay5 object — CreateCellGraphAssay5","text":"","code":"library(pixelatorR) library(dplyr) library(tidygraph)  pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\") counts <- ReadMPX_counts(pxl_file) #> ℹ Loading count data from /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl edgelist <- ReadMPX_item(pxl_file, items = \"edgelist\") #> ℹ Loading item(s) from: /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl #> →   Loading edgelist data #> ✔ Returning a 'tbl_df' object components <- colnames(counts) edgelist_split <-   edgelist %>%   select(upia, upib, component) %>%   distinct() %>%   group_by(component) %>%   group_split() %>%   setNames(nm = components)  # Convert data into a list of CellGraph objects bipartite_graphs <- lapply(edgelist_split, function(x) {   x <- x %>% as_tbl_graph(directed = FALSE)   x <- x %>% mutate(node_type = case_when(name %in% edgelist$upia ~ \"A\", TRUE ~ \"B\"))   attr(x, \"type\") <- \"bipartite\"   CreateCellGraphObject(cellgraph = x) })  # Create CellGraphAssay5 cg_assay5 <- CreateCellGraphAssay5(counts = counts, cellgraphs = bipartite_graphs) cg_assay5 #> CellGraphAssay (v5) data with 80 features for 5 cells #> First 10 features: #>  CD274, CD44, CD25, CD279, CD41, HLA-ABC, CD54, CD26, CD27, CD38  #> Layers: #>  counts  #> Loaded CellGraph objects: #>  5"},{"path":"/reference/CreateCellGraphObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a CellGraph object — CreateCellGraphObject","title":"Create a CellGraph object — CreateCellGraphObject","text":"Create CellGraph object","code":""},{"path":"/reference/CreateCellGraphObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a CellGraph object — CreateCellGraphObject","text":"","code":"CreateCellGraphObject(cellgraph, counts = NULL, layout = NULL, verbose = FALSE)"},{"path":"/reference/CreateCellGraphObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a CellGraph object — CreateCellGraphObject","text":"cellgraph tbl_graph object representing mpx single-cell graph counts dgCMatrix marker counts layout tbl_df object cell layout(s) verbose Print messages","code":""},{"path":"/reference/CreateCellGraphObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a CellGraph object — CreateCellGraphObject","text":"CellGraph object","code":""},{"path":"/reference/CreateCellGraphObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a CellGraph object — CreateCellGraphObject","text":"","code":"library(pixelatorR) library(dplyr) library(tidygraph)  edge_list <- ReadMPX_item(   system.file(\"extdata/five_cells\",               \"five_cells.pxl\",               package = \"pixelatorR\"),   items = \"edgelist\" ) #> ℹ Loading item(s) from: /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl #> →   Loading edgelist data #> ✔ Returning a 'tbl_df' object bipart_graph <-   edge_list %>%   select(upia, upib, marker) %>%   distinct() %>%   as_tbl_graph(directed = FALSE) %>%   mutate(node_type = case_when(name %in% edge_list$upia ~ \"A\", TRUE ~ \"B\")) attr(bipart_graph, \"type\") <- \"bipartite\"  cg <- CreateCellGraphObject(cellgraph = bipart_graph) cg #> A CellGraph object containing a bipartite graph with 16800 nodes and 68255 edges"},{"path":"/reference/EdgeRankPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Edge Rank Plot — EdgeRankPlot","title":"Edge Rank Plot — EdgeRankPlot","text":"Plots number edges/molecules per component component rank","code":""},{"path":"/reference/EdgeRankPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edge Rank Plot — EdgeRankPlot","text":"","code":"EdgeRankPlot(object, ...)  # S3 method for data.frame EdgeRankPlot(object, group_by = NULL, ...)  # S3 method for Seurat EdgeRankPlot(object, group_by = NULL, ...)"},{"path":"/reference/EdgeRankPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edge Rank Plot — EdgeRankPlot","text":"object data.frame-like object Seurat object ... Parameters passed methods group_by character specifying column group ","code":""},{"path":"/reference/EdgeRankPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edge Rank Plot — EdgeRankPlot","text":"ggplot object","code":""},{"path":"/reference/EdgeRankPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Edge Rank Plot — EdgeRankPlot","text":"","code":"library(pixelatorR)  # Load example data as a Seurat object pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\") seur_obj <- ReadMPX_Seurat(pxl_file) #> ✔ Created a 'Seurat' object with 5 cells and 80 targeted surface proteins seur_obj #> An object of class Seurat  #> 80 features across 5 samples within 1 assay  #> Active assay: mpxCells (80 features, 80 variable features) #>  1 layer present: counts  # Plot edge ranks with data.frame EdgeRankPlot(seur_obj[[]])   library(pixelatorR)  # Plot edge ranks with Seurat object EdgeRankPlot(seur_obj)"},{"path":"/reference/FSMap.html","id":null,"dir":"Reference","previous_headings":"","what":"FS map — FSMap","title":"FS map — FSMap","text":"Get set fs_map tibble CellGraphAssay, CellGraphAssay5 Seurat object","code":""},{"path":"/reference/FSMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FS map — FSMap","text":"","code":"FSMap(object, ...)  FSMap(object, ...) <- value  # S3 method for MPXAssay FSMap(object, ...)  # S3 method for MPXAssay FSMap(object, ...) <- value"},{"path":"/reference/FSMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FS map — FSMap","text":"object object containing arrow data ... implemented value tbl_df","code":""},{"path":"/reference/FSMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FS map — FSMap","text":"FSMap: fs_map tibble FSMap<-: object updated fs_map tibble","code":""},{"path":[]},{"path":"/reference/KeepLargestComponent.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep largest component — KeepLargestComponent","title":"Keep largest component — KeepLargestComponent","text":"Finds connected components graph returns largest component","code":""},{"path":"/reference/KeepLargestComponent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep largest component — KeepLargestComponent","text":"","code":"KeepLargestComponent(object, ...)  # S3 method for tbl_graph KeepLargestComponent(object, verbose = TRUE, ...)  # S3 method for CellGraph KeepLargestComponent(object, verbose = TRUE, ...)  # S3 method for MPXAssay KeepLargestComponent(object, verbose = TRUE, ...)  # S3 method for Seurat KeepLargestComponent(object, assay = NULL, verbose = TRUE, ...)"},{"path":"/reference/KeepLargestComponent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep largest component — KeepLargestComponent","text":"object object ... Parameters passed methods verbose Print messages assay Name CellGraphAssay CellGraphAssay5 assay stored Seurat object","code":""},{"path":"/reference/KeepLargestComponent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep largest component — KeepLargestComponent","text":"","code":"library(pixelatorR) library(tidygraph)  pxl_file <- system.file(\"extdata/five_cells\",                        \"five_cells.pxl\",                        package = \"pixelatorR\")  # Read edgelist edgelist <- ReadMPX_arrow_edgelist(pxl_file) #> ℹ Extracting edgelist.parquet file to /var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/RtmpYOju9G/edgelist.parquet #> ✔ Returning FileSystemDataset  # Load graph from edge list and store in a CellGraph object cg <- LoadCellGraphs(edgelist, cells = \"RCVCMP0000217\")[[1]] #> →   Loading 1 edgelist(s) as bipartite graph(s) cg #> A CellGraph object containing a bipartite graph with 2470 nodes and 5138 edges #> Number of markers:  79   # Fetch tbl_graph from CellGraph object g <- CellGraphData(cg, slot = \"cellgraph\") g #> # A tbl_graph: 2470 nodes and 5138 edges #> # #> # An undirected simple graph with 1 component #> # #> # Node Data: 2,470 × 2 (active) #>    name                        node_type #>    <chr>                       <chr>     #>  1 GGTATATATTTTAAGTAGTTTAGTA-A A         #>  2 ATTATGTTGTTGTATGTTTATTATT-A A         #>  3 TCCGTGGTTTGATACTCGGGAATTT-A A         #>  4 AGTGTAAGAGGTTGTTTCTTAGAAA-A A         #>  5 GAGCAGACAATGGCGCTTAGCTAAA-A A         #>  6 CAATTTTGACCTAGTTGTGGCCAAG-A A         #>  7 ATGTCAGAGTGAATAGTTGTGATTG-A A         #>  8 ATAAAGTGACCAGTTGAATGGGCCC-A A         #>  9 TGCCTCTTGAGCTGTTGATCGCCTG-A A         #> 10 ATTAGATGTAGAGCGCGAAAATTGG-A A         #> # ℹ 2,460 more rows #> # #> # Edge Data: 5,138 × 2 #>    from    to #>   <int> <int> #> 1     1  1396 #> 2     1  1599 #> 3     1  1734 #> # ℹ 5,135 more rows  # Break graph by removing random edges set.seed(132) g <- g %E>%  filter(from %in% sample(from, n() - 500))  # Fetch largest component from a tbl_graph g_largest <- KeepLargestComponent(g) #> ℹ Removed 35 out of 2470 nodes g_largest #> # A tbl_graph: 2435 nodes and 5103 edges #> # #> # An undirected simple graph with 1 component #> # #> # Node Data: 2,435 × 2 (active) #>    name                        node_type #>    <chr>                       <chr>     #>  1 GGTATATATTTTAAGTAGTTTAGTA-A A         #>  2 ATTATGTTGTTGTATGTTTATTATT-A A         #>  3 TCCGTGGTTTGATACTCGGGAATTT-A A         #>  4 AGTGTAAGAGGTTGTTTCTTAGAAA-A A         #>  5 GAGCAGACAATGGCGCTTAGCTAAA-A A         #>  6 CAATTTTGACCTAGTTGTGGCCAAG-A A         #>  7 ATGTCAGAGTGAATAGTTGTGATTG-A A         #>  8 ATAAAGTGACCAGTTGAATGGGCCC-A A         #>  9 TGCCTCTTGAGCTGTTGATCGCCTG-A A         #> 10 ATTAGATGTAGAGCGCGAAAATTGG-A A         #> # ℹ 2,425 more rows #> # #> # Edge Data: 5,103 × 2 #>    from    to #>   <int> <int> #> 1     1  1362 #> 2     1  1565 #> 3     1  1700 #> # ℹ 5,100 more rows  # Add new graph to CellGraph object cg@cellgraph <- g_largest  # Fetch largest component from a CellGraph cg_largest <- KeepLargestComponent(cg) #> ℹ Graph is already connected cg_largest #> A CellGraph object containing a bipartite graph with 2435 nodes and 5103 edges #> Number of markers:  79"},{"path":"/reference/LoadCellGraphs.html","id":null,"dir":"Reference","previous_headings":"","what":"Load CellGraphs — LoadCellGraphs","title":"Load CellGraphs — LoadCellGraphs","text":"Loads list CellGraph objects. One can specify cells load names using cells parameter.","code":""},{"path":"/reference/LoadCellGraphs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load CellGraphs — LoadCellGraphs","text":"","code":"LoadCellGraphs(object, ...)  # S3 method for FileSystemDataset LoadCellGraphs(   object,   cells,   load_as = c(\"bipartite\", \"Anode\", \"linegraph\"),   add_marker_counts = TRUE,   chunk_size = 10,   verbose = TRUE,   ... )  # S3 method for tbl_df LoadCellGraphs(   object,   cells,   load_as = c(\"bipartite\", \"Anode\", \"linegraph\"),   add_marker_counts = TRUE,   verbose = TRUE,   ... )  # S3 method for MPXAssay LoadCellGraphs(   object,   cells = colnames(object),   load_as = c(\"bipartite\", \"Anode\", \"linegraph\"),   add_marker_counts = TRUE,   load_precomputed_layouts = FALSE,   force = FALSE,   chunk_size = 10,   cl = NULL,   verbose = TRUE,   ... )  # S3 method for CellGraphAssay LoadCellGraphs(   object,   cells = colnames(object),   load_as = c(\"bipartite\", \"Anode\", \"linegraph\"),   add_marker_counts = TRUE,   load_precomputed_layouts = FALSE,   force = FALSE,   chunk_size = 10,   cl = NULL,   verbose = TRUE,   ... )  # S3 method for CellGraphAssay5 LoadCellGraphs(   object,   cells = colnames(object),   load_as = c(\"bipartite\", \"Anode\", \"linegraph\"),   add_marker_counts = TRUE,   load_precomputed_layouts = FALSE,   force = FALSE,   chunk_size = 10,   cl = NULL,   verbose = TRUE,   ... )  # S3 method for Seurat LoadCellGraphs(   object,   assay = NULL,   cells = colnames(object),   load_as = c(\"bipartite\", \"Anode\", \"linegraph\"),   add_marker_counts = TRUE,   load_precomputed_layouts = FALSE,   force = FALSE,   chunk_size = 10,   cl = NULL,   verbose = TRUE,   ... )"},{"path":"/reference/LoadCellGraphs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load CellGraphs — LoadCellGraphs","text":"object Seurat object CellGraphAssay object ... Parameters passed methods cells character vector cell names load CellGraphs load_as Choose cell graph represented (see details ) add_marker_counts marker counts added CellGraph objects? chunk_size Length chunks used load CellGraphs edge list. verbose Print messages load_precomputed_layouts Loads pre-computed layouts PXL file available. force Force load graph(s) already loaded cl cluster object created makeCluster, integer indicate number child-processes (integer values ignored Windows) parallel evaluations. See Details performance documentation pbapply. default NULL, means parallelization used. assay Assay name","code":""},{"path":"/reference/LoadCellGraphs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load CellGraphs — LoadCellGraphs","text":"object list CellGraph objects","code":""},{"path":"/reference/LoadCellGraphs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load CellGraphs — LoadCellGraphs","text":"Graphs can loaded one 'bipartite', 'Anode' 'linegraph'. See details graph representations sections .","code":""},{"path":"/reference/LoadCellGraphs.html","id":"bi-partite-graph","dir":"Reference","previous_headings":"","what":"Bi-partite graph","title":"Load CellGraphs — LoadCellGraphs","text":"bi-partite graph, edges can go upia upib. bi-partite graph first collapsed multigraph simple graph aggregating marker counts upia/upib combination. visualization marker counts graph, often convenient project values nodes; however, marker counts available nodes bi-partite graph. circumvent issue, node counts calculated aggregating edge counts. means total marker count inflated.","code":""},{"path":"/reference/LoadCellGraphs.html","id":"a-node-projected-graph","dir":"Reference","previous_headings":"","what":"A node projected-graph","title":"Load CellGraphs — LoadCellGraphs","text":"node projected-graph, pairs upias share upib connected edge. (upia) node counts calculated aggregating counts across edges associated nodes. number nodes node projected-graph substantially lower bi-partite graph.","code":""},{"path":"/reference/LoadCellGraphs.html","id":"line-graph","dir":"Reference","previous_headings":"","what":"Line graph","title":"Load CellGraphs — LoadCellGraphs","text":"Starting bi-partite graph, node placed edge. , edge drawn pair adjacent nodes. number nodes linegraph equivalent number edges bi-partite graph. However, number edges substantially larger. One major advantage linegraph node counts represent actual raw data, case bi-partite graph node projected-graph. side, linegraphs much larger tends slow layout computations visualizations.","code":""},{"path":"/reference/MPXAssay-class.html","id":null,"dir":"Reference","previous_headings":"","what":"MPXAssay class — MPXAssay-class","title":"MPXAssay class — MPXAssay-class","text":"MPXAssay class defined union CellGraphAssay CellGraphAssay5 class. words, virtual class defined superclass two classes.","code":""},{"path":"/reference/MPXAssay-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"MPXAssay Methods — RenameCells.MPXAssay","title":"MPXAssay Methods — RenameCells.MPXAssay","text":"Methods MPXAssay objects generics defined packages","code":""},{"path":"/reference/MPXAssay-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MPXAssay Methods — RenameCells.MPXAssay","text":"","code":"# S3 method for MPXAssay RenameCells(object, new.names = NULL, ...)  # S4 method for MPXAssay show(object)  # S3 method for MPXAssay subset(x, features = NULL, cells = NULL, ...)  # S3 method for MPXAssay merge(   x = NULL,   y = NULL,   merge.data = TRUE,   add.cell.ids = NULL,   collapse = TRUE,   ... )"},{"path":"/reference/MPXAssay-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MPXAssay Methods — RenameCells.MPXAssay","text":"object CellGraphAssay CellGraphAssay5 object new.names character vector new cell IDs. length vector must equal number cells object names must unique. ... Arguments passed methods x MPXAssay object features Feature names cells Cell names y MPXAssay object list MPXAssay objects merge.data Merge data slots instead just merging counts (requires renormalization); recommended normalization approach applied objects add.cell.ids character vector sample names collapse TRUE, merge layers name together","code":""},{"path":"/reference/MPXAssay-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MPXAssay Methods — RenameCells.MPXAssay","text":"MPXAssay object","code":""},{"path":"/reference/MPXAssay-methods.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"MPXAssay Methods — RenameCells.MPXAssay","text":"RenameCells(MPXAssay): Rename cell IDs CellGraphAssay CellGraphAssay5 object show(MPXAssay): Show method CellGraphAssay CellGraphAssay5 object subset(MPXAssay): Subset CellGraphAssay CellGraphAssay5 object merge(MPXAssay): Merge two CellGraphAssay CellGraphAssay5 objects together","code":""},{"path":"/reference/MPXAssay-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MPXAssay Methods — RenameCells.MPXAssay","text":"","code":"library(pixelatorR) library(dplyr) library(tidygraph)  pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\") counts <- ReadMPX_counts(pxl_file) #> ℹ Loading count data from /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl edgelist <- ReadMPX_item(pxl_file, items = \"edgelist\") #> ℹ Loading item(s) from: /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl #> →   Loading edgelist data #> ✔ Returning a 'tbl_df' object components <- colnames(counts) edgelist_split <-   edgelist %>%   select(upia, upib, component) %>%   distinct() %>%   group_by(component) %>%   group_split() %>%   setNames(nm = components)  # Convert data into a list of CellGraph objects bipartite_graphs <- lapply(edgelist_split, function(x) {   x <- x %>% as_tbl_graph(directed = FALSE)   x <- x %>% mutate(node_type = case_when(name %in% edgelist$upia ~ \"A\", TRUE ~ \"B\"))   attr(x, \"type\") <- \"bipartite\"   CreateCellGraphObject(cellgraph = x) })  # Create CellGraphAssay cg_assay <- CreateCellGraphAssay(counts = counts, cellgraphs = bipartite_graphs) cg_assay #> CellGraphAssay data with 80 features for 5 cells #> First 10 features: #>  CD274, CD44, CD25, CD279, CD41, HLA-ABC, CD54, CD26, CD27, CD38  #> Loaded CellGraph objects: #>  5  # Show method cg_assay #> CellGraphAssay data with 80 features for 5 cells #> First 10 features: #>  CD274, CD44, CD25, CD279, CD41, HLA-ABC, CD54, CD26, CD27, CD38  #> Loaded CellGraph objects: #>  5  library(pixelatorR) library(dplyr) options(Seurat.object.assay.version = \"v3\")  pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\") seur <- ReadMPX_Seurat(pxl_file) #> ✔ Created a 'Seurat' object with 5 cells and 80 targeted surface proteins seur <- LoadCellGraphs(seur) #> →    Loading CellGraphs for 5 cells from sample 1 #> ✔ Successfully loaded 5 CellGraph object(s). cg_assay <- seur[[\"mpxCells\"]]  # Subset CellGraphAssay(5) # --------------------------------- cg_assay_subset <- subset(cg_assay, cells = colnames(cg_assay)[1:3])  # Subset Seurat object containing a CellGraphAssay(5) # -------------------------------- seur_subset <- subset(seur, cells = colnames(seur)[1:3])  # Merge multiple CellGraphAssay(5) objects # ---------------------------------  # Merge 3 CellGraphAssay(5) objects cg_assay_merged <- merge(cg_assay,                          y = list(cg_assay, cg_assay),                          add.cell.ids = c(\"A\", \"B\", \"C\"))"},{"path":"/reference/Plot2DGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot 2D graph layouts — Plot2DGraph","title":"Plot 2D graph layouts — Plot2DGraph","text":"Plot 2D component graph layouts computed ComputeLayout optionally color nodes certain attributes. Edges can also visualized setting map_edges; however, since component graphs tend large, can take long time draw.","code":""},{"path":"/reference/Plot2DGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot 2D graph layouts — Plot2DGraph","text":"","code":"Plot2DGraph(   object,   cells,   marker = NULL,   assay = NULL,   layout_method = c(\"pmds\", \"wpmds\", \"fr\", \"kk\", \"drl\"),   colors = c(\"lightgrey\", \"mistyrose\", \"red\", \"darkred\"),   map_nodes = TRUE,   map_edges = FALSE,   log_scale = TRUE,   node_size = 0.5,   edge_width = 0.3,   show_Bnodes = FALSE,   collect_scales = FALSE,   return_plot_list = FALSE,   ... )"},{"path":"/reference/Plot2DGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot 2D graph layouts — Plot2DGraph","text":"object Seurat object cells character vector cell IDs marker Name marker colors nodes/edges assay Name assay pull data layout_method Select appropriate layout previously computed ComputeLayout colors character vector colors color marker counts map_nodes, map_edges nodes /edges mapped? log_scale Convert node counts log-scale log1p node_size Size nodes edge_width Set width edges map_edges = TRUE show_Bnodes B nodes included visualization? option applicable bipartite graphs. Note removing B nodes, edges removed graph hence, map_edges effect. collect_scales Collect color scales limits . can used make sure colors comparable across markers. return_plot_list Instead collecting plots grid, return list ggplot objects. ... yet implemented","code":""},{"path":"/reference/Plot2DGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot 2D graph layouts — Plot2DGraph","text":"object class patchwork","code":""},{"path":[]},{"path":"/reference/Plot2DGraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot 2D graph layouts — Plot2DGraph","text":"","code":"library(pixelatorR)  pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\")  seur <- ReadMPX_Seurat(pxl_file) #> ✔ Created a 'Seurat' object with 5 cells and 80 targeted surface proteins seur <- LoadCellGraphs(seur, load_as = \"Anode\") #> →    Loading CellGraphs for 5 cells from sample 1 #> ✔ Successfully loaded 5 CellGraph object(s). seur <- ComputeLayout(seur, layout_method = \"pmds\", dim = 2) #> ℹ Computing layouts for 5 graphs  Plot2DGraph(seur, cells = colnames(seur)[1], marker = \"CD3E\")"},{"path":"/reference/Plot2DGraphM.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot multiple markers on multiple graphs — Plot2DGraphM","title":"Plot multiple markers on multiple graphs — Plot2DGraphM","text":"contrast Plot2DGraph, draw 1 marker time, function makes possible arrange plots grid markers rows components columns. color scales fixed marker limits across components.","code":""},{"path":"/reference/Plot2DGraphM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot multiple markers on multiple graphs — Plot2DGraphM","text":"","code":"Plot2DGraphM(   object,   cells,   markers,   assay = NULL,   layout_method = c(\"pmds\", \"wpmds\", \"fr\", \"kk\", \"drl\"),   colors = c(\"lightgrey\", \"mistyrose\", \"red\", \"darkred\"),   map_nodes = TRUE,   map_edges = FALSE,   log_scale = TRUE,   node_size = 0.5,   edge_width = 0.3,   show_Bnodes = FALSE,   titles = NULL,   titles_theme = NULL,   titles_size = 10,   titles_col = \"black\",   ... )"},{"path":"/reference/Plot2DGraphM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot multiple markers on multiple graphs — Plot2DGraphM","text":"object Seurat object cells character vector cell IDs markers character vector marker names assay Name assay pull data layout_method Select appropriate layout previously computed ComputeLayout colors character vector colors color marker counts map_nodes, map_edges nodes /edges mapped? log_scale Convert node counts log-scale log1p node_size Size nodes edge_width Set width edges map_edges = TRUE show_Bnodes B nodes included visualization? option applicable bipartite graphs. Note removing B nodes, edges removed graph hence, map_edges effect. titles named character vector optional titles. names titles match cells titles_theme theme used style titles titles_size size text plot titles titles_col color plot titles ... Parameters passed Plot2DGraph","code":""},{"path":"/reference/Plot2DGraphM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot multiple markers on multiple graphs — Plot2DGraphM","text":"patchwork object","code":""},{"path":[]},{"path":"/reference/Plot2DGraphM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot multiple markers on multiple graphs — Plot2DGraphM","text":"","code":"library(pixelatorR)  pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\")  seur <- ReadMPX_Seurat(pxl_file) #> ✔ Created a 'Seurat' object with 5 cells and 80 targeted surface proteins seur <- LoadCellGraphs(seur, load_as = \"Anode\") #> →    Loading CellGraphs for 5 cells from sample 1 #> ✔ Successfully loaded 5 CellGraph object(s). seur <- ComputeLayout(seur, layout_method = \"pmds\", dim = 2) #> ℹ Computing layouts for 5 graphs  Plot2DGraphM(seur, cells = colnames(seur)[2:3], markers = c(\"CD20\", \"CD4\")) #> ✖ 'CD20' is missing from node count matrix for component RCVCMP0000487"},{"path":"/reference/Plot3DGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot 3D graph layouts — Plot3DGraph","title":"Plot 3D graph layouts — Plot3DGraph","text":"Plot 3D component graph layout computed ComputeLayout color nodes marker.","code":""},{"path":"/reference/Plot3DGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot 3D graph layouts — Plot3DGraph","text":"","code":"Plot3DGraph(   object,   cell_id,   marker = NULL,   assay = NULL,   layout_method = c(\"pmds\", \"wpmds\", \"fr\", \"kk\", \"drl\"),   project = FALSE,   aspectmode = c(\"data\", \"cube\"),   colors = c(\"lightgrey\", \"mistyrose\", \"red\", \"darkred\"),   showgrid = TRUE,   log_scale = TRUE,   node_size = 2,   show_Bnodes = FALSE,   ... )"},{"path":"/reference/Plot3DGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot 3D graph layouts — Plot3DGraph","text":"object Seurat object cell_id ID component visualize marker Name marker color nodes assay Name assay pull data layout_method Select appropriate layout previously computed ComputeLayout project Project nodes onto sphere. Default FALSE aspectmode Set aspect ratio one \"data\" \"cube\". \"cube\", scene's axes drawn cube, regardless axes' ranges. \"data\", scene's axes drawn proportion axes' ranges. Default \"data\" colors Color nodes expressing marker. Must character vector least two color names. showgrid Show grid lines. Default TRUE log_scale Convert node counts log-scale logp node_size Size nodes show_Bnodes B nodes included visualization? option applicable bipartite graphs. ... Additional parameters","code":""},{"path":"/reference/Plot3DGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot 3D graph layouts — Plot3DGraph","text":"interactive 3D plot component graph layout plotly object","code":""},{"path":"/reference/Plot3DGraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot 3D graph layouts — Plot3DGraph","text":"","code":"library(pixelatorR)  pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\")  seur <- ReadMPX_Seurat(pxl_file) #> ✔ Created a 'Seurat' object with 5 cells and 80 targeted surface proteins seur <- LoadCellGraphs(seur, cells = colnames(seur)[5]) #> →    Loading CellGraphs for 1 cells from sample 1 #> ✔ Successfully loaded 1 CellGraph object(s). seur <- ComputeLayout(seur, layout_method = \"pmds\", dim = 3) #> ℹ Computing layouts for 1 graphs  Plot3DGraph(seur, cell_id = colnames(seur)[5], marker = \"CD50\")  {\"x\":{\"visdat\":{\"ce3b2ba7074\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"ce3b2ba7074\",\"attrs\":{\"ce3b2ba7074\":{\"x\":{},\"y\":{},\"z\":{},\"marker\":{\"size\":2},\"mode\":\"markers\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\",\"color\":{},\"colors\":[\"lightgrey\",\"mistyrose\",\"red\",\"darkred\"],\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"aspectmode\":\"data\",\"xaxis\":{\"visible\":true,\"title\":\"x\"},\"yaxis\":{\"visible\":true,\"title\":\"y\"},\"zaxis\":{\"visible\":true,\"title\":\"z\"}},\"annotations\":[{\"x\":1,\"y\":0.97999999999999998,\"text\":\"CD50\",\"showarrow\":false}],\"hovermode\":\"closest\",\"showlegend\":false,\"legend\":{\"yanchor\":\"top\",\"y\":0.5}},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[-89.982737073412196,-30.343960424700732,74.574494426885082,63.089657841265236,-42.626460353471117,24.353883292768536,18.33066544337926,-52.342618927977242,-140.65758113637361,-36.404801895952779,-90.616119064596717,160.03859426026699,-92.005665469765788,64.32334691701881,88.867647070034764,14.602545206356375,5.2660785427449133,-3.0013942497069008,56.096309133117131,9.5134863026889001,-68.64435902412751,15.337488827893408,14.6001598034086,45.701582043583976,69.713979898225219,-118.60330679797295,30.324605335915003,60.093226873948822,24.196751876983743,16.727094059218256,80.051827202759583,-34.849112032960036,-35.159914780851317,43.771447495193748,-62.028815600114946,-143.39191398160213,-83.876455219761212,41.930914356770892,17.479041629720673,7.5468963513559126,75.861539331404302,-103.15587004460335,-65.57488207097343,-76.349341931638989,-218.45646454215341,-14.279402467620613,103.87292242119656,54.334945284830212,-67.806352264469524,47.14771593030023,-53.276798191575025,156.99586234044602,-28.843221501378569,-113.16127214818579,-88.088350832883691,123.05606630206509,-45.120534938891474,172.22832909041793,48.069854679547944,-6.3938940106273545,62.283808033164128,204.88190707624676,4.7786814191343439,171.41664224784927,-70.543426988066116,100.93307948073387,10.071808104144329,39.145599326484913,88.028104318475144,8.3956987290227829,-58.879343217450426,-93.080896461481601,-84.310218926056436,74.708685274593847,-29.329389635729584,-78.257452634486526,90.850594800048583,-74.120503085560514,-90.572280645662019,9.6765827132560904,46.089902288137466,67.39378507033922,-70.912056082510418,94.541476352466134,123.09080987591669,32.782575019220729,17.180021571915397,-175.89784652055758,38.186716414112155,-20.277998227584614,-143.64740801676527,-54.122862766087202,4.335227451190681,-140.65758113637361,59.930451968365702,5.7923296437383511,14.084783211894075,121.76882895697578,43.782134107974045,38.573280465137159,-147.69992513855263,93.329075715035685,64.755068798162483,3.0826311509277158,-63.29004648081176,191.66493003043107,1.2639327947184065,-48.530855684063681,-39.223813990641936,15.902593042161875,1.1908853934180081,73.664336137050427,45.692050028950597,-102.57477447019019,6.3588246095498899,36.67338772663755,-43.467663935318967,24.547322104342268,-11.982210645506928,-80.605999805938154,-34.828679169155343,69.222971003562108,57.1720132710863,57.396646211523802,-13.17614712426648,3.0409714578768745,2.9320015963771264,-13.17614712426648,44.705719565308563,32.61471033137704,-1.7839978928743483,121.347507807241,-19.962562148383338,-7.2745065384323553,67.288104812747889,35.660779570799654,-97.685824583186843,124.63615962593919,5.3616908001390735,3.9235277490788838,4.5940297252554698,-62.044456989183082,-14.279402467620613,78.902864597345271,-22.254807487969664,28.985255435398084,-13.73735525674501,2.5362768885255758,76.757145513548977,70.444862590869917,30.707659298552429,-105.62067817552953,110.44581644534661,-99.341812036151396,47.960384031179103,59.869633417815621,195.40700834318133,7.5966195722480165,72.469920924446342,-19.404717987156733,-56.612297598076999,52.41153765510056,10.500428108304886,35.856752647007596,119.75026395129474,-59.709624528468431,-55.066872069868694,93.032271388045217,-53.37866016391915,-89.316917157374704,-72.329982783663183,-56.595918303870889,-35.919369147655956,-45.481208064181729,216.70048933334695,5.4793729656460757,14.771032964318996,-68.571242168847178,143.36332214754665,-35.223300155827239,175.1598664952046,-16.919352200599803,160.03859426026699,42.722773593542939,27.636839494767955,4.8155964360629326,-70.872737639978936,-29.205575925781801,101.42022310889087,23.637657426207433,70.794197003029865,-18.452934469917817,94.451151411972674,27.070430825146662,102.79861023991435,49.957950690715229,55.595093971940692,-87.40132539810709,11.170434191671195,-46.190268488052894,126.63156433669964,109.83650743494768,-0.28332670420841422,-7.7300086387238442,122.30716946922405,49.57014972921538,-47.134375191922729,177.45787659523859,154.2154649887014,53.288760117629792,-11.126731203614229,12.577935826428623,67.865399466197744,45.16156384491638,-1.0556254794210276,-34.749801880093763,68.832687500919846,71.498646352304149,19.672950470276685,-88.165989603116941,-67.031615053396976,-56.595918303870889,-17.977055152604002,-68.487589968192353,7.1104740184427566,67.357149617794462,-44.453238536306593,48.919005458563063,103.67704446861615,18.117828010337153,9.6453563302682053,51.117651445605624,-56.741933905399385,-94.179935677117513,-68.633735206008467,93.9984044413047,-59.925934797602366,-45.938590823094195,-80.60218248607336,-21.27908961908993,125.40883062957063,62.598219006625115,68.22892285889742,-117.60160760730507,-91.416229173010024,102.12338108982165,23.275133948508437,-26.994687255340192,19.004239789327499,66.745746471400182,-98.584938781884517,20.863841312068228,55.284144113322938,32.887944870388722,6.1780152710796781,-67.331233554038079,6.8841317754629339,107.25319433326004,92.534206707446543,-17.977055152604002,26.533197207307573,154.61007117544159,-64.782038839906733,109.49209736444165,40.272157047134989,121.347507807241,7.4022930862421266,-107.59018427727057,11.06067179969593,137.77389489104164,44.673667625904173,-12.322789900494371,70.444862590869917,-112.51785684076977,-26.60879985891172,-65.910887722516776,-21.06722330842786,38.961660410584109,-81.909335131763413,-30.673736414724136,133.93841717505725,53.117435040013596,17.488084037427456,-30.014960009598955,-73.763412917151314,-40.831869094912328,1.3712783692295802,35.692324368219474,73.130055723402251,-73.557357371303652,96.733574140689555,-82.201757517319479,55.203738646037166,-14.684305285159615,83.933763758094202,24.888230426105942,51.536441356100497,17.494040745459163,-46.261056255708077,-39.732163649293277,-92.805152405201156,5.6451752953758074,47.537590264890845,100.04518642610398,-61.361157474260608,100.12086836598344,-47.986523530493827,43.241552272818197,104.21166905076525,-14.951665475496362,26.090549000922078,42.212311203425408,-55.723765185239216,-0.74082320309727634,-20.460632563115677,73.389698667936074,-0.33776741708660374,36.564451026491668,13.71600107733811,-55.793509217378315,60.511111920005703,75.613938830638062,38.423605632333157,-100.03412773590659,23.540926801394534,51.042439408332939,-4.7281875358518537,67.083530659256056,79.304967926175593,82.048482594461973,115.95262452961958,64.267739355045592,-76.349341931638989,-25.582981822753705,90.331702626993021,4.379157049579069,103.87292242119656,19.004239789327499,-8.5110822307873448,91.086720320027737,67.257842959099548,-47.706754209099522,-25.897385807743479,0.92822389802650607,-73.567898961988675,5.6164872346165833,44.741276449648595,-17.448061230038164,-72.434594596147875,127.22120340996379,92.743660730590292,-95.502623266015803,50.065485782412892,145.58096282042288,-97.286576620095389,-94.832600346779174,-23.7905928857977,-7.5178715573787125,-84.890851336186856,-94.568342418108102,18.678577330157761,-72.03804892736035,51.768604716645527,39.448873823149398,31.644768475610427,91.868157376903298,22.933832564514915,-110.01679813635529,-38.935502210804877,-37.093915441987448,-112.09136503368947,5.7105805162028584,-79.098943786671853,26.490930062584034,-3.0013942497069008,-82.906486881210981,56.906264772827278,-31.721682652325864,166.72753268571148,207.50006846351954,-60.247440332467079,58.048057077341262,-83.470022349066895,91.700394341270723,139.29051931968681,-25.308896586460175,-7.8381660063634442,-45.787011182639581,-0.74082320309727634,-13.300093619005425,47.511139917814504,-41.623040114462398,-81.520299006393984,-66.430749839168996,-30.789437285170273,-55.312903879058219,61.631233373293739,-163.9498721219266,-141.48697362518348,8.1934148579507013,-166.79453675797862,-48.537896316621364,9.8639643799889818,119.55966543056597,-63.78529125139994,35.262815655294318,-19.654396715742315,-124.02114660320548,-21.186186130820722,122.30716946922405,150.08815938331392,-106.44962914913221,54.76627534820738,-116.00753704634826,-90.616119064596717,93.119282406434465,-116.00753704634826,19.004239789327499,101.04486710247083,213.77571407915858,-56.139832274900606,11.381269345201494,35.659660671044129,90.730745857455659,46.845240842130046,-16.769150154174714,49.380414597254585,30.010999131343848,-48.109533573562345,-2.7849394856790695,28.803332738053296,-66.062585429441341,-13.436416736508725,-2.8369557447051812,29.858481954034801,155.15269858562257,-127.54978669461991,-90.572280645662019,44.216208858047416,-11.982210645506928,69.222971003562108,-20.602906795693244,-117.35862544482865,100.78371454279015,-69.174287988131681,-143.64740801676527,64.390901449601657,-51.644041022352098,133.27040917085569,109.31794292624684,35.493100039464849,9.4122965840525215,43.782134107974045,43.782134107974045,-22.254807487969664,65.675661712042768,62.882589173743405,-73.763412917151314,-47.076266118503924,20.645668127397776,4.2792557442083652,-12.033935092079433,-61.339204228719538,131.93268270039877,79.30388644730391,40.272157047134989,111.61998692997214,47.893067849500177,-73.906212701625961,55.161267003455272,13.015822641889748,53.444438667251902,7.5350397722365896,7.4008433200281161,-18.298891895802416,-72.47818856607455,138.34876935740886,-19.604694901822928,20.342832622229235,-79.880971057776875,-90.206138006423075,45.16156384491638,-106.32145463793893,-4.5231071788710846,2.7439811046853597,-80.60218248607336,-54.869484264353332,33.875253790052156,-56.863897008531545,-12.530622649380724,11.920725683198031,-70.872737639978936,75.251015311600483,3.9391107967093171,-70.211345979118491,48.066174088347523,-73.116005141718318,-30.014960009598955,3.5330481426694496,-83.231682330075799,29.828521377096841,56.096309133117131,110.03468418582176,50.412140587962277,179.11341607208865,-60.236870543319483,68.439296019524079,-41.399076069094832,65.030585464070342,92.134582022387548,-10.760202903313433,-52.257889373899701,22.020109933324839,-92.399393734398714,42.784646019732669,37.996711258083366,5.7869449217744897,75.327226561764419,-154.74749703222787,-68.529436507822822,111.55348290071075,-85.481635975791974,63.25882744441698,-33.616224871330999,54.114695057861816,98.932274568705182,48.559443475354584,48.922218031201957,-39.381488609172621,-100.06848775392433,160.75083405920429,27.196246965724313,-66.062585429441341,56.096309133117131,-49.153086147573077,9.0310058504680129,-111.09843922026323,9.4173470466508302,-94.51791161874047,-26.802883884422524,-99.361723232709892,37.822923543139261,-7.8024740897822076,1.7091274702743608,-13.095361350428311,99.261024037775627,-103.19541910963852,-19.962562148383338,-86.400829045386985,14.34759956809234,13.852223596106386,-36.404801895952779,19.383493396483985,-78.9153789458463,-99.604365573915388,6.7606508966231882,12.214734147586006,-2.9234921076138396,28.693884756850505,-84.146574707218932,-126.00674054771351,-55.066872069868694,-55.180813131446918,-81.143769988563662,-12.179714032508091,-25.14689872311974,26.211515521190332,171.15699590936325,-100.04313562028457,66.634778269068164,69.450507944414596,-117.60160760730507,11.771547791057744,41.631506380512135,70.736851109859614,0.40606679887967018,-117.60160760730507,164.64751946093392,107.24543783949555,-7.1842366984190047,15.902593042161875,-33.577266580786457,1.7792623771389524,11.121779403491118,78.902864597345271,-31.699204726318946,-24.560636035100195,63.070997443287752,-104.7222235008142,118.75312912151976,27.896143847281511,-50.587654055421098,68.276776810796051,-109.25817723439037,38.542321753165488,31.26238224898589,-45.642928485393,-53.169323553178089,-57.278592399493768,90.262927462309534,90.77102897964302,-88.732585232724063,-42.426689093628838,-11.872203982051595,-52.257889373899701,58.135583789043196,24.196751876983743,155.15269858562257,56.079839171701927,35.491153595124246,61.518997798015654,77.901784577205262,-21.929423229642438,-24.306674361449726,-35.33160164968244,-80.60218248607336,-167.48243601022733,66.634778269068164,93.555723804529833,56.396738459121195,23.067440416338762,-12.120800959597927,-28.028591592326642,25.953343431763464,59.315988749226968,-101.88848965804149,-11.702808269621315,-89.316917157374704,48.109877609287039,37.04139047467131,-52.342618927977242,-86.215159282475071,9.3690772429371449,-85.999434999288539,179.11341607208865,-110.01679813635529,-110.2690467314533,-15.830012035237672,14.917033526225241,9.1531740390649876,-36.271274165411938,-110.02994602540085,1.7792623771389524,20.939492580943224,50.001289820459313,10.776295535852293,-45.746560067348312,16.117900580888691,-13.436416736508725,-148.79333494844363,-39.381488609172621,-90.998237770706695,-15.648414033195071,-161.3977578599648,57.1720132710863,-57.858736005866625,-121.7085539543535,-98.776805103026874,22.591174125092962,56.468431930297406,68.700192354895023,31.246510555380812,17.683805600531478,-70.198850973805861,-21.186186130820722,-8.3266979083457375,-59.230382889046695,60.537227289639972,31.222834728987291,27.132678758158178,43.822182156803791,37.111694661738824,-14.522332190738958,-5.3368074682084261,58.787762180474473,-34.749801880093763,35.493100039464849,24.196751876983743,-67.331233554038079,-86.6992877155689,-63.38306967392834,58.135583789043196,-43.148255774213951,-61.148205131568375,57.322272778400965,-58.845884890823882,-37.381772302914982,-82.268385422582043,-67.085187549450325,58.135583789043196,156.82828729275377,-2.49423034417722,37.75914484506697,58.46422349631753,23.782921360090025,-70.697808912671974,-92.565708295880583,-121.7085539543535,-6.1325783281934987,11.762031334350262,7.830862004809056,166.08797084041956,126.77340237385496,-136.50249205342971,-0.42232874984610036,-101.19165670927804,-97.11681755366412,38.301489355819974,-15.648603672122134,-111.20118206663649,139.29051931968681,24.606818197586914,32.119307990581028,-14.781890225819511,-40.743105692452161,-47.719966302028602,68.936198796602653,140.74791607088684,-110.23524482090345,-60.782042076921897,7.2699614057377877,-86.6992877155689,96.103576837161953,-41.623040114462398,159.24995640005963,33.111025003723107,-74.075132464139344,-91.388259932115346,0.92822389802650607,126.46946676483601,166.72753268571148,-43.100445627279939,12.818543363630001,161.25741172277895,-101.19165670927804,-52.293523316551742,-70.872737639978936,64.972097769570183,-80.605999805938154,-56.741933905399385,-70.872737639978936,-12.120800959597927,90.87610281885668,2.2400372949398202,-33.089018066537534,172.99802649519614,52.030964538533489,-134.66897518503978,213.77571407915858,-68.310920486587463,1.1908853934180081,-3.7537877889796376,131.70340149599627,55.245698223168382,-68.533145641319805,-18.664071564774289,8.3956987290227829,-52.187748988997129,16.780939601903185,-84.890851336186856,-79.559465522912191,-84.310218926056436,1.1908853934180081,62.623917217728845,21.925238133948962,25.004178397295977,-102.57477447019019,65.714868092361016,38.356411411135873,-1.0650616201319101,-33.089018066537534,-80.60218248607336,131.12187286620858,-83.5359645848159,-56.293865888358376,-43.22430723855576,97.634719990369305,-135.92864029982059,-6.6013472040727921,84.612798464017374,7.1104740184427566,-15.984937967869975,-11.101990917493591,7.7485064454596611,126.83115510467479,-53.573067136860352,24.995314027368924,-10.385956990039668,27.636839494767955,155.15269858562257,-49.898030646118741,123.09080987591669,44.219013362436307,-73.554974909425681,-117.35862544482865,-100.06848775392433,179.11341607208865,96.815402509760929,-66.75028773095498,62.439439818275204,31.950606881249659,-170.25354206059126,32.082341906084508,55.424075325791023,1.8220084785025645,81.120417683485954,58.135583789043196,-84.146574707218932,-55.066872069868694,213.77571407915858,-100.95739502731479,17.879463800068176,24.887856397452428,-79.838771255504611,-86.6992877155689,-61.473752186002066,28.798363004400493,1.0310323924891605,112.741672062248,102.59114023618832,-13.666729400303231,96.393222318784765,149.82588064179305,102.17201876836189,-55.180813131446918,-49.898030646118741,3.0409714578768745,126.46946676483601,89.176576588031153,-37.869047353185991,43.787815680740152,15.994040024850472,-89.178690603263988,-94.179935677117513,24.606818197586914,10.168245286746997,1.9984881581050495,-55.066872069868694,1.4945017312634343,52.030964538533489,104.21166905076525,-98.584938781884517,-56.595918303870889,-29.526391491734913,-0.42232874984610036,161.95313826094801,-65.552572104380459,59.406346137797676,-7.5000550912416584,93.046545920082707,-14.192494816815097,87.085325896623928,-107.01241966911424,-143.90872092605494,-135.10566771363131,-42.286771326679066,-0.9561044814972306,50.754740235983789,-93.710364636803277,29.060761414066612,-66.01864078144007,-15.212203175140862,-145.99197284303415,-130.11889061375848,36.484681383288681,91.868157376903298,133.93841717505725,119.75026395129474,-56.866174149162354,-84.46808024208363,28.484536738737191,11.315921630438426,29.990683602975508,1.1908853934180081,151.64454902436333,9.2760969500457833,160.03859426026699,-22.254807487969664,68.700192354895023,126.46946676483601,151.78670122343908,37.291777146372397,-144.12446244580835,101.37116435675993,-53.780051646058226,34.264477413379339,0.6216843843669092,125.02819012500153,69.222971003562108,54.443570943592896,207.50006846351954,-83.906818178268054,26.233405673403691,-127.88885495321837,24.65422252700624,-34.828679169155343,-11.877499405500242,50.070441027970112,31.437832070708254,-10.760202903313433,-71.033128745667725,-109.25817723439037,69.973818678591016,80.599567404409299,130.26974198872034,-163.29031370050751,-87.647435618474461,11.744479915757283,101.45859447108302,-116.00753704634826,-94.189054221827845,42.871847871496705,122.30716946922405,-69.783084901693329,9.6405244274988799,9.5003928084468612,-6.3157291120957533,121.37302494223705,-81.143769988563662,110.44581644534661,38.11374977690275,-84.310218926056436,-84.310218926056436,91.865111868433885,127.17367826935322,-72.901792224947158,58.135583789043196,-87.689020450095896,-92.399393734398714,-135.23969627377977,-7.659756161462318,-31.399680390563741,2.5362768885255758,-51.909123411194521,13.390125957471181,-39.946078311688645,60.093226873948822,5.4793729656460757,106.33067117791757,168.85376859218439,73.010676227098841,38.392395494869625,-31.308915086020804,-4.9201091724114709,24.581047800081979,104.58306480131358,41.772540151605021,152.47530842591479,-64.316949957370781,-68.142601924285756,14.084783211894075,-88.420910545716197,21.69634314973375,59.841774768776745,-63.16778958980197,-163.9498721219266,-22.698914704801609,-49.947766273331425,-90.401436690106792,96.45781872434037,141.6164899331084,2.6758735305500565,119.75026395129474,-36.363641697284528,90.240210447323705,-14.041322710464531,4.8155964360629326,34.485193365483745,120.36429817070184,-56.741933905399385,-28.256297369662672,-35.186513036553173,-27.606099482722026,-94.832600346779174,13.820243504462702,19.672950470276685,-14.555593611834725,-112.51785684076977,-83.470022349066895,-17.977055152604002,-67.331233554038079,42.338459242390265,-66.33802463122025,-31.062121557101886,87.939416404683442,-112.3833030622903,-127.63523880022207,-64.458783872665194,-6.9936759807833946,-34.304358081852534,33.159955440874853,-97.268356470387999,-104.26705088652439,-58.565810103600548,96.267209904460685,1.7792623771389524,15.396137566477837,133.93841717505725,105.74870154835922,58.570776286941971,74.627097987660619,-76.867666188101651,5.2579047987997152,145.20226370866945,137.77389489104164,48.175600019552896,-55.066872069868694,88.938722569771869,-75.45052552171812,-115.14593452855871,-37.844745232744671,91.252972327773577,-11.19609940671829,-57.955428626827683,-53.780051646058226,-23.910034272244673,-50.38930477231159,123.87111174537387,-36.89866432384953,-86.502083577134556,-46.262399521511625,38.392395494869625,99.395500134504644,48.829480076423749,43.571285592321431,61.592247183264689,12.730401900341832,103.73337194720801,96.723619862085641,-79.559465522912191,-13.17614712426648,0.34493543941351179,-62.966627506135509,-82.321488358853316,7.2699614057377877,11.840279771878359,-30.819400665876557,82.865306493113536,53.812819255423236,26.295096880737876,-103.19541910963852,-97.414051215732215,-87.689020450095896,18.117828010337153,-23.887042260834239,50.754740235983789,-11.191021965577709,18.747627328233126,55.414752587557686,-50.655429847171767,-10.873451499145384,-55.066872069868694,-6.8485421218725024,-100.96447924132372,43.782134107974045,-42.157563804385212,-67.445828550913774,-52.950659157248317,-116.47610006645716,58.135583789043196,156.28052998961195,92.326136646381769,140.74791607088684,-50.857365853038829,-66.459417037412052,65.663112879896033,44.420876674455336,90.87610281885668,18.605760024123288,38.191098488949443,57.396646211523802,41.38682355912534,-111.87977666680429,-124.39889861421665,185.80278557659119,-65.655117035267068,-0.42232874984610036,-15.202079892441729,0.27474441270738986,-11.98825418331613,81.191711023654179,-82.198460018870293,-3.2815313254578276,-11.040428784363778,57.396646211523802,45.651363223193677,-59.976079546504316,31.26238224898589,-51.644041022352098,-95.803390856246821,29.540465948871926,42.203252446698954,216.70048933334695,2.7439811046853597,-94.953030934014521,-87.026477764531464,-83.141760196594603,7.1104740184427566,-52.257889373899701,30.73055769367436,22.169453608804709,-138.5813234823157,140.74791607088684,-167.06869435173414,-104.95191194052786,111.64722791802566,22.475211929324718,54.136788609896776,111.35490829455976,-25.565643821753319,26.753534312155804,-110.11888799794927,67.288104812747889,-27.404806539546616,13.530740748807212,-4.8795482411001192,20.863841312068228,-55.066872069868694,86.053614470495887,-41.997783946546242,70.765548219116241,118.69613987827385,-115.89087806620377,53.536941574033541,-80.375999466017902,58.135583789043196,-34.304358081852534,117.59685339422175,55.572520796674304,-155.76185093829733,-16.319479573501791,88.938722569771869,33.102640141938103,52.260519364254279,112.741672062248,-145.98228389360955,-14.192494816815097,-99.499025196862377,9.9155476943217415,64.972097769570183,-70.862906942045569,135.70640741687731,25.222654553762727,-60.387271421381449,-7.6240162491899017,11.573618591332933,-109.21716144470018,21.833048183609119,-41.623040114462398,37.53975480453142,-11.877499405500242,-84.310218926056436,-155.35144768923308,-130.15058411783275,216.70048933334695,137.95588324865454,15.902593042161875,29.453657739896457,-120.86438931956499,101.21991797876794,71.498646352304149,-170.25354206059126,103.00387015826209,-64.265550709739273,87.386328230842651,-32.86078461823999,15.941283984032069,13.432460336862112,-80.60218248607336,48.829480076423749,-61.339204228719538,54.839620666899812,213.77571407915858,172.22832909041793,-32.511175489610764,-15.212203175140862,-17.869267980200661,28.040884136451069,11.477755473836545,-59.921017838951947,56.924513846626603,70.173458071578338,-79.929248294890954,19.429531151594905,40.272157047134989,25.445697034162091,-15.206349475629212,-62.200180580093686,10.158970875309199,-86.952681044976032,-40.661454634244777,213.77571407915858,-50.655429847171767,-14.920261885990524,20.668922928332222,61.836483624968714,-7.2148646643449572,-95.398188314340956,57.944990105798531,-11.603759343533437,66.992369353094546,71.875076288218537,88.938722569771869,-40.894740174975475,-15.105950622298925,-25.425383030455102,79.38269416244448,0.99355695764644758,19.672950470276685,-62.602600458688009,-45.658695937378617,46.845240842130046,-12.033935092079433,12.98221897961499,69.222971003562108,-68.434601273707045,-83.257478397285141,102.53528001197085,56.572145194467424,-34.828679169155343,-69.832445144940181,-54.176841774468947,71.399071670288919,-63.710853735560086,103.87292242119656,-35.388459895822017,-66.062585429441341,-122.96909572842567,64.972097769570183,81.934817845067528,-59.921017838951947,117.69976066030212,55.905134871761391,89.299696233295563,94.96053970268153,152.47530842591479,62.15383064503164,-19.604694901822928,41.631506380512135,72.691690320923215,37.822923543139261,6.3588246095498899,-11.877499405500242,-55.723765185239216,155.15269858562257,57.076116940345884,-67.409248845980528,-2.258871548384235,43.994876288659491,-110.11888799794927,-154.51886970252733,50.754740235983789,-27.058503495054261,97.764751960316943,-48.37071370459541,33.259534612062154,10.693455587701271,43.782134107974045,-158.8261293731091,72.691690320923215,-107.70369362458113,47.758654345070958,40.272157047134989,24.196751876983743,-13.573582139576191,-9.8406506468457504,-93.365162500595758,-92.699017033081333,57.396646211523802,-131.60310444125963,141.6164899331084,-14.555593611834725,-97.669966030112278,-123.18849521372218,32.602198277247723,-81.102637230512784,-0.74082320309727634,75.699138951837128,-154.51886970252733,-15.830012035237672,1.7792623771389524,-52.091621746924268,9.0310058504680129,90.134746861869246,-94.104547359628711,-91.707804973933733,-113.6785374649041,-36.404801895952779,-100.06848775392433,-90.256011128773338,-43.117501559676583,-164.08564795065774,-17.977055152604002,24.196751876983743,19.529890661449969,-155.76185093829733,41.631506380512135,52.215651282740033,-102.42399307433588,22.361814999222716,-45.523325956375402,-52.257889373899701,-79.838771255504611,-81.501156872148485,149.82588064179305,-81.148330991372418,-84.86888611444806,-80.60218248607336,107.79810081513513,-23.046817899164221,-29.329389635729584,-118.60330679797295,56.096309133117131,-4.3268715356303602,-122.30496848660036,22.169453608804709,-100.38077213883273,-80.60218248607336,164.33310568790645,104.57698286710419,-140.44935994165766,68.700192354895023,159.24995640005963,1.1908853934180081,-90.616119064596717,25.702263897793195,11.920725683198031,-44.135685186572822,128.32764629250147,-108.58142363391516,-11.19609940671829,57.076116940345884,60.537227289639972,-87.689020450095896,-62.200180580093686,78.783219445160171,-71.203847102184127,-39.223813990641936,-99.895621917195143,99.341510761771758,-29.114004061817653,-28.995561583299722,152.47530842591479,-56.293865888358376,155.15269858562257,-86.215159282475071,114.95856139777065,60.093226873948822,-7.7300086387238442,15.926428654405226,99.261024037775627,-14.555593611834725,-125.64846157495177,-12.120800959597927,-119.48206850488175,8.1934148579507013,54.327034821063648,204.88190707624676,-85.386527026452626,78.55995461319813,-215.46071591936558,2.7835227210430675,-43.100445627279939,6.1875968677908944,32.093684924532539,64.972097769570183,53.190165334464574,-1.7839978928743483,60.506998649524007,-9.8163455589887931,19.135820661222823,-170.25354206059126,41.861743195141024,-57.955428626827683,149.47550415986402,-26.60879985891172,71.498646352304149,-35.222496885129765,-15.202079892441729,-12.120800959597927,11.573618591332933,15.723380999713092,72.740572562632991,-10.430713004004341,68.276776810796051,27.753567842994837,64.288627145580946,61.763133603370932,45.964205804175293,71.498646352304149,-60.90837934501868,-32.644745516908948,-17.977055152604002,-23.048131898647821,-48.234134345212567,-81.29263007765357,96.434549200463024,-5.3368074682084261,99.395500134504644,-144.86775273901006,44.420876674455336,119.55966543056597,-138.66936981564697,9.4558750984624709,2.5362768885255758,104.58306480131358,10.631675360338841,-13.920531782959323,-55.066872069868694,30.010999131343848,86.661163326617626,-8.5439455432001683,-110.01679813635529,-36.300488106235967,-23.455252761677237,-65.910887722516776,-127.63523880022207,35.491153595124246,-89.221858721553744,2.5362768885255758,13.530740748807212,159.24995640005963,8.3418585936373724,-0.42232874984610036,-110.01679813635529,-7.1166056135463132,17.683805600531478,10.604954268710733,146.50238560775281,-109.05303961772151,26.848760624993471,60.537227289639972,-145.99197284303415,-29.688764450683344,32.151432599554298,34.189223860617112,-66.815595120578365,135.0606140005157,-13.096057727929647,123.09080987591669,33.111025003723107,15.723380999713092,179.11341607208865,-70.697808912671974,-7.6240162491899017,-53.573067136860352,-13.095361350428311,-120.04402880388912,-82.797141453445448,47.734018874131507,-49.898030646118741,-17.869267980200661,111.62012461606203,-111.38305874966869,-60.90837934501868,-92.565708295880583,50.156570455920729,97.764751960316943,8.9308758871534408,58.048057077341262,-133.17418269462226,-76.011325198964869,42.871847871496705,-109.05303961772151,-39.77057033858101,-72.901792224947158,-116.00753704634826,-35.186513036553173,9.1531740390649876,20.342832622229235,-45.598183861520752,58.135583789043196,-6.8485421218725024,-27.404806539546616,-135.10065004786472,-75.181667210329664,-74.946990572155912,50.224831252873429,72.398498092011664,67.357038516593391,-54.176841774468947,8.1934148579507013,89.841141254219082,-59.317744896786188,-39.946078311688645,24.691314236082967,-109.9126950220123,21.335498278021785,56.770358619825892,-71.033128745667725,93.540089754208694,-152.9963597009621,47.401416124016883,-29.688764450683344,47.109488385961157,36.567665583660919,-150.12662999444564,-69.092637310113119,-43.100445627279939,-97.10796536469924,-141.30603699745512,21.500357113494957,204.88190707624676,40.272157047134989,5.2579047987997152,-73.557357371303652,-76.011325198964869,42.664653620927744,14.785112737562836,4.2393958227582322,-49.463624390382108,14.101299918278821,58.545838948337838,-77.330727591695506,-11.040428784363778,-55.67737212196478,-141.56165664280462,73.906546217505152,-81.937625190657428,99.261024037775627,163.80275743152308,72.398498092011664,45.16016527252723,-3.2815313254578276,-138.51827914904035,-62.286216079684884,131.12187286620858,-48.359238593317322,126.83115510467479,51.263558739338748,155.15269858562257,94.96053970268153,-14.130694821778764,-73.011987431206009,47.511139917814504,8.1934148579507013,-54.798333892932902,-76.349341931638989,-36.314493506527299,144.24187849595106,58.048057077341262,50.156570455920729,-97.95108160417773,-17.289584973729927,-90.616119064596717,1.0310323924891605,-115.89087806620377,39.89894665675714,-59.925934797602366,74.140016899706055,-23.941362134294742,32.044971543919445,-127.63523880022207,-135.10566771363131,-115.14593452855871,-72.548953166541423,-19.962562148383338,99.261024037775627,14.996164699901191,41.862817268038654,5.2579047987997152,-8.9791191288982848,31.921785421757107,-84.691035808185561,31.26238224898589,42.212311203425408,-13.436416736508725,-46.960149747286273,-43.100445627279939,-94.760483102580636,8.5006193781791826,145.20226370866945,36.776447378406949,-7.6622261306429831,-49.470000242697303,99.261024037775627,117.59685339422175,57.744811615625615,-6.5831990042154906,-79.559465522912191,-71.923389989512344,-11.789359979371657,106.33184801961725,29.701999316843953,12.428257030389171,-95.502623266015803,-94.675117702167313,-145.07367272262255,56.888822798437289,31.921785421757107,2.7439811046853597,-55.066872069868694,1.2648549206457786,60.537227289639972,-110.36137828590803,-84.261148660913321,55.905134871761391,-60.944308291021656,74.929444918393429,5.4793729656460757,-46.549814735542412,47.498806954474702,-80.504772775318756,-71.923389989512344,31.921785421757107,4.2393958227582322,-1.8968836093855297,-78.398376493526257,-97.10796536469924,-70.862906942045569,133.93841717505725,-90.572280645662019,-103.19541910963852,96.723144181810611,-170.25354206059126,25.445697034162091,90.984488894747287,-72.901792224947158,57.396646211523802,87.466510923691928,-79.559465522912191,88.938722569771869,-14.499633364009631,87.013693803939972,-67.331233554038079,-138.04949776881645,-25.098790631462858,3.2858708733882498,30.73055769367436,92.326136646381769,-48.359238593317322,-14.758047277047265,38.191098488949443,-134.00923354722184,-47.676390523949877,-93.199218072036572,32.78856619632144,163.45762593777408,37.053337400367909,49.57014972921538,38.1400533648901,67.357038516593391,-138.51827914904035,-163.9498721219266,-60.90837934501868,164.33310568790645,-147.62291505473422,-35.186513036553173,-31.450373206438016,31.26238224898589,-29.329389635729584,-56.866174149162354,83.040247835931353,104.57698286710419,-13.17614712426648,15.458951573654698,-93.378490093433001,52.030964538533489,-53.573067136860352,-94.832600346779174,47.758654345070958,-61.233336488428051,-51.644041022352098,-115.89087806620377,-112.09136503368947,-89.299205039470309,-32.86078461823999,-135.23969627377977,-127.63523880022207,89.650613478608818,7.2290288904392686,15.232888592987862,20.275647683538061,-90.572280645662019,76.24177669634129,119.44635087168487,-68.203428992802898,-125.64846157495177,-143.64740801676527,-13.17614712426648,68.136846051251524,-41.623040114462398,-58.212742476960592,20.863841312068228,50.224831252873429,-105.62067817552953,-17.869267980200661,-21.929423229642438,155.15269858562257,42.338459242390265,-35.466796830799495,-53.227310494965039,-116.00753704634826,-112.72477223399846,2.5362768885255758,-124.473919944572,-147.54161002491875,-11.19609940671829,141.6164899331084,60.537227289639972,-101.93059932899006,-25.231717479284111,-27.404806539546616,-103.08108542720036,-36.017796471298254,102.82819964880053,-163.9498721219266,21.273134390974725,-87.689020450095896,61.763133603370932,9.4122965840525215,-94.519045221571375,-74.200600933908547,-61.339204228719538,51.819859858773484,-68.203428992802898,-4.8617735224967964,-145.07367272262255,-143.64740801676527,10.631675360338841,-110.01679813635529,28.024942517398117,-13.722804536942654,-82.955335307653129,-100.38077213883273,-13.17614712426648,-34.901281769685845,-152.46259409472674,78.902864597345271,-22.698914704801609,41.706150852708639,58.545838948337838,60.537227289639972,22.7936958594663,-148.70894435321654,63.089657841265236,-90.572280645662019,-52.396312326347761,-72.548953166541423,-140.44935994165766,-145.07367272262255,-87.008674452411739,-125.56166920504423,2.7835227210430675,80.775093638580856,-11.877499405500242,68.276776810796051,109.72024033733362,70.444862590869917,-59.39534551914555,55.364723824787745,177.06247727705315,-61.251436890535849,20.342832622229235,-40.315805472630615,146.59539244676498,126.83115510467479,38.968898933223393,-11.92002260062652,-18.743164445430992,-57.858736005866625,5.7008054783088626,52.030964538533489,-111.87977666680429,25.660014018098632,42.871847871496705,12.214734147586006,-34.849112032960036,85.128132508557343,80.346174686224714,81.213001719892887,-53.573067136860352,2.7835227210430675,163.80275743152308,-70.872737639978936,168.85376859218439,47.977827280442568,-76.011325198964869,119.75026395129474,60.869565291349517,-53.227310494965039,32.082341906084508,-94.862030388439848,-29.329389635729584,4.0651155121986209,-163.71091845242421,149.09358477128282,24.329650044753762,-120.5609634039804,35.051678782774218,31.361557137781578,-8.9791191288982848,-22.584367781796271,-0.7374426343380579,57.349158248755572,-8.9791191288982848,155.15269858562257,-21.929423229642438,-12.425916924740303,-27.404806539546616,34.787312410679839,11.920725683198031,49.025099908220994,-67.409248845980528,31.540069393716365,23.903842007867318,-15.984937967869975,-82.955335307653129,64.972097769570183,75.762509796476039,148.36921550787108,-93.365162500595758,-81.346888887573215,-55.723765185239216,80.775093638580856,6.3015042310661409,131.38025395012576,105.74870154835922,49.025099908220994,-7.2148646643449572,-12.120800959597927,1.4395842600908324,71.498646352304149,-36.271274165411938,43.771447495193748,8.1934148579507013,27.636839494767955,-11.040428784363778,-43.100445627279939,47.612017395438492,-95.560788949600422,61.763133603370932,-35.919369147655956,60.537227289639972,109.91977320320812,123.09080987591669,40.406195598634199,-133.65235948816746,6.8009387169261686,-109.00584130450605,137.77389489104164,19.752922826553217,33.259534612062154,30.010999131343848,-24.306674361449726,74.414110182957884,80.346174686224714,-63.16778958980197,3.9093626101247221,-13.17614712426648,-17.869267980200661,-36.404801895952779,150.08815938331392,-55.315162693333008,59.112914128714912,-93.365162500595758,104.58306480131358,-131.60310444125963,52.196975145108503,-17.977055152604002,59.741795760822534,22.138806504129111,-63.16778958980197,163.80275743152308,-76.077036065298586,-57.858736005866625,118.35961008766601,-21.929423229642438,-74.539859350351023,72.398498092011664,119.44635087168487,128.42081406140454,60.537227289639972,-159.15366125929449,152.47530842591479,-49.898030646118741,98.162291823127205,-14.555593611834725,-34.828679169155343,60.537227289639972,-58.392401404724417,-78.86352810824495,-45.53038546209828,-56.866174149162354,53.536941574033541,-109.05303961772151,-62.602600458688009,64.371558175635386,-69.24956843792242,172.99802649519614,39.315774020952077,-11.19609940671829,-11.877499405500242,-81.160339555335128,-9.962594026023412,69.450507944414596,11.315921630438426,68.136846051251524,152.47530842591479,116.33676688916377,71.498646352304149,87.085325896623928,132.83777589182364,-55.723765185239216,161.95313826094801,160.47926239748284,68.03731927142276,155.59336672283834,-7.7300086387238442,72.691690320923215,49.720172411960604,-87.689020450095896,-17.607144701155928,-127.06468001337095,48.551242819955114,-73.007671426149116,-49.470000242697303,68.136846051251524,-79.559465522912191,-62.200180580093686,-117.60160760730507,98.060324957326216,-69.352550159025483,-11.877499405500242,-95.863163765135795,-69.174287988131681,-79.880971057776875,74.627097987660619,46.68424671379065,-57.858736005866625,-0.13501245830840675,96.082152449413144,-72.548953166541423,-87.333757466284425,-21.186186130820722,120.6842576934699,-84.21399722405117,-85.386527026452626,-0.11153812111780306,-9.7299068767580561,97.317862824060626,82.865306493113536,-90.256011128773338,-51.644041022352098,50.609310252586226,17.843907879540343,11.744479915757283,-53.573067136860352,38.513168931561438,-21.60633600379661,43.782134107974045,-27.034765942706997,-57.858736005866625,-105.62067817552953,-13.095361350428311,9.242028548990703,-149.17605099569698,-1.3266311126381864,-66.254938957967852,55.094263568536782,-128.03387447326895,-35.180584186911318,-163.9498721219266,38.968898933223393,56.415647568329383,-106.63104990420702,-17.289584973729927,96.267209904460685,141.6164899331084,186.79195959195195,-6.9936759807833946,146.63792434782715,12.940210968898667,-144.51986857407837,-137.00385509745328,-109.25817723439037,9.1531740390649876,-131.19943205218516,13.746401124105873,96.951895819329707,55.414752587557686,-126.51055147448963,72.740572562632991,88.938722569771869,6.3703768472764688,159.24995640005963,118.69613987827385,-52.257889373899701,-154.9062588808228,-60.90837934501868,155.59336672283834,2.6220438110882225,-94.519045221571375,57.076116940345884,-55.066872069868694,4.5940297252554698,-115.19010067305534,-11.877499405500242,-88.088350832883691,-53.22889031305354,-95.708933403111971,67.012475568462818,-113.6614500778883,-36.271274165411938,-93.365162500595758,-70.872737639978936,88.867647070034764,60.537227289639972,-68.221443739269418,-115.83308531475488,5.5728884653185995,213.77571407915858,83.257686242241661,40.769621486358687,-105.62067817552953,-110.01679813635529,-11.289494496359328,20.342832622229235,-152.9963597009621,16.517357340341032,-45.201387271392186,-27.957553002933906,-67.409248845980528,12.981585320111312,126.46946676483601,-39.732163649293277,-112.09136503368947,3.9093626101247221,-80.334042804472844,-7.2148646643449572,-89.877028515275924,123.09080987591669,-107.01241966911424,68.439296019524079,-103.19541910963852,-55.789288177391498,-125.06087807802254,-154.9062588808228,-68.633735206008467,141.85822732031517,23.782921360090025,116.93924050163523,55.554187421771275,-18.330262885811621,27.636839494767955,-84.310218926056436,-138.51827914904035,-79.098943786671853,68.700192354895023,-21.186186130820722,-119.15974413740604,-83.166164155883465,-22.769302666320733,16.628965945878385,-9.7299068767580561,50.46789091565406,-57.858736005866625,-79.098943786671853,84.116739542433322,-84.310218926056436,26.233405673403691,68.700192354895023,-20.893185114676047,-11.926823816162033,-43.148255774213951,-36.363641697284528,-70.862906942045569,140.74791607088684,89.299696233295563,53.536941574033541,79.38269416244448,123.98248901577344,-44.844859142961582,99.395500134504644,-89.299205039470309,-80.504772775318756,-55.723765185239216,-100.38077213883273,-105.62067817552953,-70.261359146142354,-89.877028515275924,-40.659616231971768,-163.9498721219266,40.277595008842681,49.025099908220994,-145.99197284303415,-83.494410318381185,-80.976876575372287,36.567665583660919,-12.120800959597927,42.338459242390265,-76.678304814919088,20.342832622229235,57.1720132710863,-144.51986857407837,53.536941574033541,160.47926239748284,57.326914710155798,126.46946676483601,-121.7085539543535,38.542321753165488,58.048057077341262,-167.48243601022733,40.466152682020173,47.977827280442568,183.92264982836826,-32.644745516908948,-93.378490093433001,71.498646352304149,63.684322067302013,9.1531740390649876,131.12187286620858,112.77085911422577,8.1934148579507013,41.631506380512135,19.27637301059826,-116.47008396961579,-135.23969627377977,90.262927462309534,-33.738637344066987,4.6949730379254868,-149.15652909149063,-39.381488609172621,96.951895819329707,57.396646211523802,30.402763975442344,94.96053970268153,-143.47577285001157,62.478263012343056,116.93924050163523,24.606818197586914,15.902593042161875,166.08797084041956,-11.19609940671829,152.47530842591479,54.443570943592896,63.089657841265236,136.59390420489592,68.416459570220667,23.782921360090025,23.782921360090025,5.2579047987997152,-34.849112032960036,4.101009492351297,87.085325896623928,-7.9702169236583158,-125.64846157495177,6.4191822887848984,-7.5649861870993558,126.46946676483601,-0.38568373142336376,8.3956987290227829,-85.606942948482114,11.477755473836545,23.782921360090025,-86.893806397408554,-115.14593452855871,-52.257889373899701,46.104141342803736,37.822923543139261,96.267209904460685,-138.51827914904035,-97.802825624659562,-145.07367272262255,216.70048933334695,-0.66969825709405195,71.399071670288919,-70.862906942045569,-17.627252849649739,-93.365162500595758,-142.11523494968867,-6.9936759807833946,-97.30646877213772,48.551242819955114,-28.843221501378569,45.381402670818645,152.55167094033672,-6.4908851933500635,13.530740748807212,-8.837796093600268,155.59336672283834,78.882970723638408,-81.346888887573215,1.7378776521662831,207.50006846351954,9.0310058504680129,54.839620666899812,-44.453238536306593,-85.606942948482114,-32.644745516908948,-143.47577285001157,20.342832622229235,-34.901281769685845,-119.48206850488175,-36.363641697284528,-84.146574707218932,-36.363641697284528,-17.607144701155928,75.659879095505701,-41.623040114462398,17.323469513327112,-12.721288850127092,-9.7299068767580561,68.700192354895023,-67.331233554038079,64.972097769570183,204.88190707624676,-170.98106814812715,24.606818197586914,-11.877499405500242,55.094263568536782,155.59336672283834,2.3413650522346088,15.782417885831366,-148.70894435321654,-126.51055147448963,-75.477658449132292,97.771750130208957,26.533197207307573,-76.011325198964869,70.726521695773073,56.572145194467424,40.272157047134989,-67.661994638174079,-94.681022576492452,-70.862906942045569,-119.59643459477327,61.371513210661313,-100.96447924132372,-123.37237792305879,-51.985042481844978,-75.477658449132292,195.40700834318133,58.048057077341262,-29.067895686937923,44.673667625904173,2.2364950440089957,-49.947766273331425,26.710314971040422,41.930914356770892,-34.849112032960036,-28.843221501378569,-141.90911647416607,69.823821614167372,14.101299918278821,60.093226873948822,1.7792623771389524,99.261024037775627,-46.549814735542412,-145.07367272262255,48.581228382783969,38.716083902517703,-29.067895686937923,140.74791607088684,-109.9126950220123,126.46946676483601,72.740572562632991,-145.99197284303415,-11.877499405500242,-90.987823730029987,160.47926239748284,161.95313826094801,89.299696233295563,-46.549814735542412,-11.789359979371657,103.92969929921983,-42.157563804385212,-34.849112032960036,-146.4523054089766,59.183507230454936,126.83115510467479,-170.25354206059126,27.636839494767955,58.135583789043196,49.109374807198215,59.884999941194145,9.2080172278890196,15.902593042161875,112.741672062248,103.92969929921983,38.191098488949443,-62.200180580093686,55.644819021993442,59.590822421579091,-106.63104990420702,84.116739542433322,-135.23969627377977,-54.798333892932902,-75.01460194382561,-13.77557381740737,57.076116940345884,49.025099908220994,46.845240842130046,-53.227310494965039,159.24995640005963,5.2579047987997152,-11.789359979371657,-36.271274165411938,-110.01679813635529,-90.616119064596717,55.094263568536782,38.433775340531639,-121.7085539543535,23.903842007867318,-19.404717987156733,66.992369353094546,2.7439811046853597,71.498309096564213,-17.977055152604002,-35.186513036553173,11.315921630438426,-70.872737639978936,-21.186186130820722,-90.616119064596717,20.863841312068228,3.942090187740241,-67.466883239707471,62.734079739691794,116.93924050163523,20.863841312068228,-8.837796093600268,-8.9791191288982848,108.90147243078214,-55.066872069868694,-136.25218884675178,-119.48206850488175,4.8155964360629326,44.420876674455336,55.644819021993442,-31.062121557101886,34.787312410679839,40.769621486358687,-13.17614712426648,22.475211929324718,-12.120800959597927,76.690755460700089,-28.022875505433895,67.012475568462818,-59.657134470172913,-46.115927190984145,82.865306493113536,137.77389489104164,-9.4855840086708305,31.921785421757107,66.71599496546726,109.9902599391252,68.700192354895023,32.082341906084508,20.863841312068228,90.262927462309534,-80.605999805938154,4.2393958227582322,-66.062585429441341,68.136846051251524,86.661163326617626,33.408399986200479,-104.26705088652439,-11.808872116218952,-35.488043087081145,-14.758047277047265,11.477755473836545,11.920725683198031,50.224831252873429,55.094263568536782,-80.976876575372287,-167.48243601022733,53.183995379904886,-72.548953166541423,104.92811311599209,-137.00385509745328,-34.742240486924594,30.092563648751554,-109.00584130450605,-12.120800959597927,39.177985811340157,-40.052576857516073,61.518997798015654,-41.837533486963274,-53.472711761367727,-27.404806539546616,124.00117193490914,103.87292242119656,20.863841312068228,-103.15587004460335,-94.179935677117513,126.03012181720709,159.24995640005963,-107.01241966911424,-6.9936759807833946,104.92811311599209,52.196975145108503,22.360666219346903,-83.141760196594603,-159.73541141445514,-35.186513036553173,5.5202251212870737,-125.64846157495177,-90.998237770706695,20.342832622229235,-98.776805103026874,-11.789359979371657,15.902593042161875,58.570776286941971,68.276776810796051,50.156570455920729,-57.030429357556685,-135.23969627377977,-13.77557381740737,-121.7085539543535,24.606818197586914,-32.86078461823999,-13.17614712426648,64.371558175635386,-117.60160760730507,-125.56166920504423,-49.898030646118741,23.782921360090025,-11.040428784363778,14.101299918278821,-21.029163528880709,-69.092637310113119,159.24995640005963,183.92264982836826,126.46946676483601,48.829480076423749,1.1908853934180081,106.33067117791757,87.386328230842651,5.3616908001390735,1.1908853934180081,50.754740235983789,-163.71091845242421,204.88190707624676,-46.391768501016749,12.940210968898667,109.9902599391252,-30.014960009598955,-29.042599994131898,-125.64846157495177,-36.363641697284528,45.252474907907562,-139.63177618996036,-76.349341931638989,22.288406736327776,3.9093626101247221,-144.51986857407837,55.644819021993442,-73.250793871047307,-107.70369362458113,55.414752587557686,23.903842007867318,-27.732571927741883,-56.866174149162354,-135.10566771363131,26.044625682546336,2.7439811046853597,-105.62067817552953,-135.10566771363131,-8.1950715895639128,-144.51986857407837,-13.17614712426648,74.200964225512422,-109.73489428704231,-44.720949536401321,17.683805600531478,-90.572280645662019,9.1531740390649876,-76.011325198964869,-10.430713004004341,-85.109595862831597,37.822923543139261,-86.215159282475071,-22.349999241971425,37.271380889761929,66.992369353094546,116.93924050163523,22.490721751319967,74.627097987660619,-98.584938781884517,104.8088142832034,166.08797084041956,76.690755460700089,56.888822798437289,-31.75610253531865,-90.110986194606014,32.082341906084508,160.47926239748284,107.24543783949555,59.441726891074381,-87.096333733154182,14.101299918278821,-115.83308531475488,-89.636226496659731,155.15269858562257,56.572145194467424,-163.9498721219266,-91.015374967227942,-82.906486881210981,50.754740235983789,-76.349341931638989,-50.655429847171767,-113.29613892247096,-43.344720910548766,55.142026641858742,-145.07367272262255,-94.104547359628711,-17.977055152604002,42.212311203425408,-84.310218926056436,72.740572562632991,61.423978601622551,121.347507807241,-108.55134932559176,53.536941574033541,-77.330727591695506,33.786576750205782,-107.70369362458113,-69.092637310113119,-159.73541141445514,96.267209904460685,-58.212742476960592,-145.99197284303415,-17.607144701155928,-113.29613892247096,17.683805600531478,-107.70369362458113,-136.25218884675178,2.6951683300855649,-98.776805103026874,-16.769150154174714,-14.555593611834725,58.135583789043196,-143.64740801676527,87.386328230842651,44.420876674455336,-123.37237792305879,24.606818197586914,54.693435605213772,-27.957553002933906,-82.906486881210981,155.15269858562257,-83.141760196594603,-17.977055152604002,5.9936595135712301,8.3956987290227829,71.399071670288919,56.888822798437289,-27.732571927741883,-11.057302357722969,30.010999131343848,1.4395842600908324,-38.346924783681089,82.865306493113536,58.545838948337838,20.342832622229235,25.445697034162091,24.196751876983743,-42.157563804385212,55.094263568536782,39.994651122444075,-55.066872069868694,23.782921360090025,-84.310218926056436,89.299696233295563,59.397061988972958,-90.572280645662019,-95.228033415943088,-76.108423351934277,-119.48206850488175,103.92969929921983,36.567665583660919,-90.998237770706695,-119.74224588481466,55.094263568536782,41.631506380512135,146.63792434782715,82.865306493113536,-44.453238536306593,-21.186186130820722,155.59336672283834,83.082952986509866,-17.718490448164026,-13.17614712426648,-170.25354206059126,-110.6517782551615,161.95313826094801,-0.42232874984610036,25.445697034162091,56.572145194467424,59.270258622817785,-145.07367272262255,-10.11165067044724,12.522829917886499,-17.977055152604002,23.782921360090025,-82.727985191352317,126.46946676483601,119.74187677779916,-75.182505615353151,-141.71094382535341,38.191098488949443,8.3418585936373724,57.1720132710863,-69.352550159025483,26.533197207307573,-29.042599994131898,27.636839494767955,-97.802825624659562,2.7439811046853597,-109.05303961772151,-110.01679813635529,44.466013562157173,25.445697034162091,-20.189784109991734,1.4945017312634343,-123.37237792305879,-35.186513036553173,-62.200180580093686,-55.066872069868694,-119.74224588481466,216.70048933334695,-31.000047557201775,-15.202079892441729,72.740572562632991,-127.63523880022207,55.094263568536782,-45.53038546209828,34.829339235612949,127.06514146041341,9.6453563302682053,-15.110221124211414,72.691690320923215,-17.289584973729927,-93.365162500595758,-103.19541910963852,5.2660785427449133,19.998243967191513,-91.015374967227942,5.218740018284632,47.511139917814504,-168.47358740859838,141.30650165613056,58.570776286941971,2.6220438110882225,-137.00385509745328,-52.342618927977242,-35.488043087081145,-14.920261885990524,-72.998367682490496,-13.17614712426648,-94.481221476493573,155.74364480548732,118.69613987827385,-79.098943786671853,126.4051073116578,-21.929423229642438,121.347507807241,22.288406736327776,81.213001719892887,18.75666453521427,103.87292242119656,96.082152449413144,54.116570673679917,-60.90837934501868,-79.559465522912191,-16.349021654416742,-8.5439455432001683,59.741795760822534,59.741795760822534,67.083530659256056,19.828697489029704,-31.000047557201775,-8.1950715895639128,-45.642928485393,-21.186186130820722,213.77571407915858,42.871847871496705,1.1908853934180081,-90.572280645662019,-11.19609940671829,121.347507807241,204.88190707624676,5.2579047987997152,-19.404717987156733,97.634719990369305,71.498646352304149,-90.998237770706695,103.87292242119656,-154.9062588808228,-21.929423229642438,139.88229107121623,-89.204491781774166,97.771750130208957,45.252474907907562,-109.05303961772151,-121.7085539543535,-95.561068356040792,59.741795760822534,2.7439811046853597,97.771750130208957,-9.4220109198124327,-79.559465522912191,141.6164899331084,-80.60218248607336,141.6164899331084,34.787312410679839,42.212311203425408,40.769621486358687,-89.204491781774166,82.343073232222054,58.135583789043196,23.782921360090025,-10.385956990039668,-141.3774772606192,-80.976876575372287,-35.186513036553173,-138.5813234823157,5.2579047987997152,-8.9791191288982848,1.1908853934180081,-107.01241966911424,44.466013562157173,-79.098943786671853,-65.817258381047807,-87.689020450095896,-35.186513036553173,90.262927462309534,116.93924050163523,57.076116940345884,-51.644041022352098,42.664653620927744,31.26238224898589,-55.066872069868694,61.10810451663702,98.060324957326216,71.498646352304149,-12.033935092079433,84.116739542433322,49.025099908220994,-70.872737639978936,34.829339235612949,-117.60160760730507,-121.7085539543535,103.54147030475639,-146.4523054089766,37.822923543139261,-115.83308531475488,-81.160339555335128,72.967903734829292,5.2579047987997152,68.840154019941963,-84.691035808185561,46.845240842130046,-117.60160760730507,49.109374807198215,111.39440441865078,-90.987823730029987,55.779506320912688,42.212311203425408,1.1908853934180081,49.025099908220994,-122.43767313667651,-46.549814735542412,-135.10566771363131,82.865306493113536,58.570776286941971,55.094263568536782,51.172381537229803,-8.837796093600268,50.754740235983789,46.68424671379065,-41.623040114462398,-53.227310494965039,26.838473108055165,40.272157047134989,-83.141760196594603,47.977827280442568,57.076116940345884,30.396976242223566,-65.655117035267068,28.040884136451069,-90.998237770706695,-21.929423229642438,42.338459242390265,1.1908853934180081,38.433775340531639,146.63792434782715,44.466013562157173,26.533197207307573,-25.112693091607319,61.95510300915533,-120.5609634039804,37.822923543139261,139.29051931968681,-30.107788112044076,11.920725683198031,-127.10693328992764,-49.947766273331425,116.63738435244795,-12.120800959597927,207.50006846351954,108.90147243078214,207.50006846351954,88.938722569771869,5.5728884653185995,-72.548953166541423,-139.63177618996036,24.196751876983743,4.6949730379254868,68.136846051251524,33.259534612062154,143.9462395968786,-21.929423229642438,-91.94972665876422,43.251311325026677,-15.206349475629212,68.416459570220667,33.786576750205782,-45.938590823094195,-14.192494816815097,-55.066872069868694,-156.4728313955078,24.606818197586914,24.196751876983743,112.49600907634641,163.80275743152308,168.85376859218439,-90.572280645662019,58.048057077341262,62.634589702744265,-94.104547359628711,-56.293865888358376,-28.022875505433895,-28.843221501378569,80.775093638580856,87.085325896623928,120.11104987849292,41.46849580638105,111.39440441865078,1.4395842600908324,-52.257889373899701,103.92969929921983,26.533197207307573,-22.134795123888377,-133.17418269462226,-72.998367682490496,-57.630556426907177,6.3015042310661409,-112.72477223399846,128.32764629250147,55.779506320912688,-79.559465522912191,-49.947766273331425,21.296741406887815,-49.947766273331425,-113.29613892247096,-70.261359146142354,49.568127035871164,-119.48206850488175,-135.10566771363131,-6.9936759807833946,12.060165409835211,42.338459242390265,-16.349021654416742,22.071503121404774,5.5728884653185995,-3.2815313254578276,66.616694040481434,47.977827280442568,-96.693991945962921,-21.186186130820722,38.968898933223393,-110.02994602540085,-123.37237792305879,141.6164899331084,52.030964538533489,-143.47577285001157,68.700192354895023,11.315921630438426,121.347507807241,26.928803851987059,-19.604694901822928,21.775579754208398,45.252474907907562,67.205121696879459,-122.05467038795156,67.083530659256056,-132.21596012822204,-30.014960009598955,82.865306493113536,-149.17605099569698,28.403258955731225,70.957634293868239,24.196751876983743,47.977827280442568,24.196751876983743,34.805363043818645,59.397061988972958,-70.872737639978936,-112.72477223399846,-78.86352810824495,-43.100445627279939,34.787312410679839,-109.25817723439037,-97.802825624659562,103.87292242119656,-0.40003516162966979,2.6951683300855649,33.786576750205782,-8.1950715895639128,51.053427850453204,41.930914356770892,-20.893185114676047,24.606818197586914,-11.603759343533437,152.47530842591479,30.396976242223566,160.47926239748284],\"y\":[95.000914012651464,-114.08513439798087,30.917123663046869,-89.102754763389328,-40.222582101375451,40.776530222452848,36.776736727485606,-0.86301199890278457,23.183362797561987,-73.857100839595105,99.360068915057937,34.776269925197937,-5.836403821705292,40.262389951507132,-10.653496660886502,-61.017064381355908,-104.42495107820442,-3.0056408558449816,-32.586744645671821,-49.865577805391396,41.555696783704505,-3.6758438854232094,-103.28279073672567,-35.276703385887124,34.410091563426619,-16.162931165260829,-58.115666730928481,40.835904529511247,-27.545125144186109,-105.72328037275332,47.587585890604331,56.251124393582529,-74.755140098663006,-43.776558647759359,69.898195041319568,21.224474886372185,39.084054023133632,-94.843081208809465,-79.073886767521387,-69.664048749544932,30.670508105079591,10.684494693287704,60.051422535306031,-40.561544193295951,92.898188997950072,-50.542559476589382,37.924030376994878,-6.4383863541846127,3.6997978851311046,36.696263899967235,51.965297805854661,69.255464109999323,-53.840781756353884,-17.630695448189801,75.807040477660195,58.1628655195532,49.041761287874138,66.579058865276082,-84.04919473441457,-96.13560323432327,25.019136181424859,83.148434929190373,-44.144804042381097,51.901638710214655,20.902265119714542,26.721321880629748,-31.995351254621216,-39.629572525213476,24.672545676800219,-112.16444772141587,46.085265610248712,71.504633479501265,-16.501012428571755,18.019877503305281,61.056183728920622,49.582581511851245,36.240759157804,33.664114608583695,-47.263006819409348,-30.041337553838961,-41.202655977790947,31.519218280732662,55.542031941366346,-4.3240293859717314,37.998277456082064,-27.242792260720837,-54.21170299500843,83.85206102880025,1.9048270195743753,-5.6339803491132159,20.667707497160336,53.707877086379426,-43.027806205270451,23.183362797561987,26.655859067181694,76.499474665444794,-61.446819871439807,38.772570327623178,5.7931558693857044,-20.792393152596606,60.220746735464964,1.4881114276635086,-64.67900874243567,25.211400899720037,30.315973009604914,40.256090015967452,-37.707632604296499,52.404179958897011,-71.234074542236414,-103.52006211295614,35.858937666756127,43.779416373402611,28.592551489835319,16.520833183881656,-34.308157550917159,14.710374196396197,17.051006494010007,45.207139405788759,19.432864040677952,18.736855597997611,-32.69725111133544,-31.724980361063032,20.073985769689962,-74.828035554717232,-57.079610431116983,46.797479807743379,-4.2168695661309332,-57.079610431116983,57.267114065281326,17.754874213406229,-44.23477319242695,51.524873150386192,-46.832893949692988,-4.9813333373942807,42.988765750001882,25.711446094800756,46.489751122552029,74.435636523275619,34.603974546918153,17.240226559715619,-53.088412562751621,58.185974937826415,-50.542559476589382,-27.904495318012646,-110.66459895381789,-20.090243897052815,50.454407607776126,-37.951549559100641,32.48662577149387,-53.343993917167879,24.068120105113451,10.219909881445611,63.6845279796743,36.105653157242315,74.876457019522348,29.948574097528855,32.464508069143562,41.378682971463469,37.55842741424096,40.272152672688485,57.141567687366077,-47.286805695867997,-79.160179945602707,-52.968583880358501,70.832177685732773,87.278574385586268,-47.693204448770111,28.649858424771729,12.27910369293525,11.230148807987028,-16.774201356411673,60.866204596105781,-29.237636657613557,-53.666539765831487,88.60361134775404,-58.875888418760418,-44.226146273489974,18.954501105312435,40.90949940805487,-79.47381022273882,68.741134167801803,-5.770926076462767,34.776269925197937,-21.379161471049748,-11.014888739908288,-1.6670738146542003,57.243511425060667,-6.0972799594675315,18.823906853623011,-34.898845435255396,-11.2460917227555,36.846088373397706,69.80085911727987,-46.505893738809597,8.1767176962027293,11.581914488235636,-41.367148906338009,60.524470626349412,-120.50488871547584,10.25630496702261,25.591444888916158,56.821604463285212,-17.436587417735581,-95.056168540626103,35.953116502757091,-103.38633436923674,13.048705068460372,70.268754048957362,59.784004004077481,13.163164728452029,22.401430785668481,-50.997987863364372,72.61742292454116,-83.517660111344014,-10.31039192198665,-59.280219455184863,25.729807588408772,32.751167360904098,-23.623043583535395,28.692065848347639,-22.84753518183588,60.866204596105781,55.197756883863505,56.947724256827058,35.980427068277237,-87.288743202039001,-74.192502844842863,-43.970766290404448,33.154286545350537,-97.63635787181839,37.50925762734034,-7.3184331343179316,48.859562080924547,-43.558164267539901,24.809377629024041,72.062477503020673,58.704436349839071,-3.8581530799213586,-65.351956998618164,-41.146281894415104,16.06348865466428,80.636031313124775,14.897472150016581,34.319355452284924,61.396493402626696,25.879333644320731,-40.341607996364374,46.751702983015356,-58.223985114079596,-11.20667781308209,68.847558700960391,-114.24533832430501,6.8378211082060023,-50.389658938211895,-65.122896351424416,60.152068747479255,-28.028997815705775,38.559185890872726,14.363402458445881,55.197756883863505,-87.929497266734288,56.504290703972096,-75.151304274387101,32.05994712736544,-91.544264039524833,51.524873150386192,-43.450234754536098,33.6638183641534,-35.588003629877292,75.287030076960789,-3.0324370699314338,-36.712653318717322,-53.343993917167879,42.482080714387656,-47.174286000154694,-43.736424696139167,29.600991692758118,-48.083881651448522,-60.851872386789275,-44.642642834461569,42.868227012820192,-1.790777421720781,-109.57849383554307,-97.339320207581352,59.431820124175374,45.364049147762145,-42.863400953289755,59.10930599530807,36.296021819728196,46.704144520096534,-22.614861115751758,-6.6998417500442322,38.674057884862002,34.607736822953242,-36.270738393863347,-93.209047776676101,60.36062221722397,-64.255287265819447,26.578124031239096,-40.220223321040571,50.712907007352186,48.906891012588218,-21.964725395152445,30.026345784546077,32.651988782937153,46.328507871796312,-64.855016237684865,33.029848553752544,17.469463665382207,-92.929022302105906,-24.403705146329134,-20.452938203398965,47.798336100328328,-99.094255999250962,-108.65316204450077,20.276480099132542,-52.851628345341901,27.595192623475022,45.796290816981362,-46.591253258834719,31.02556185653614,36.288172662008535,-36.543617640593652,69.393908157151174,-28.786352439220753,40.37703602366313,-19.056193874358048,69.961317404108812,-11.990672797574337,39.932456573106137,31.868469135395902,-64.368218051777774,-40.561544193295951,45.372118574166862,-16.490045627668341,-52.722895225469394,37.924030376994878,-58.223985114079596,66.017745468628192,-16.372624152109051,36.310950427990768,-36.927524985909535,-47.195819212524142,-108.5216175266123,15.417602569597177,-45.5169018992204,0.66342829219111021,-58.49710164334855,12.030521642949077,78.461220227762183,30.494994993127655,90.702539390901691,-55.793046125829008,69.220559710559101,-10.680358411178752,36.396218202523357,-101.27058000802693,-40.878520010832446,39.602072847452888,27.303006382499166,12.161247216045572,-19.772359660866076,-60.855994194954519,-12.96247065589389,-4.9562077973092293,39.782362366330759,23.649920969390109,-33.93455645955833,54.656241133564819,-13.279972992678061,16.85471455909077,-42.794647674689699,-11.8485923699824,-31.049144797804171,-3.0056408558449816,62.727924277530292,-15.917860072574699,70.937943982973948,49.753745499757315,53.648520945330795,58.11864591662453,-51.186873330347531,64.23084797143234,70.534857621865072,43.934728080805307,-68.079515326089123,37.00216075426281,10.027711668700924,-99.094255999250962,96.705401398368238,6.8351606918719572,-38.154042469468699,49.957247498758079,55.826704501014341,10.236595141615719,-20.801223415508328,-10.194993541947658,71.986463441979055,21.918591939210387,10.7940197851271,93.741028287468936,41.207951215831798,-25.918781139510827,25.475779118299609,-17.536782014063032,-33.991797197424688,-106.74594067030851,28.401766292537946,-89.96568306314748,35.953116502757091,41.385726082079209,33.371267345942613,-7.0425860784946916,102.91626187625442,99.360068915057937,20.036461760512712,102.91626187625442,-58.223985114079596,10.003073144731568,87.011837389597346,-45.124570321962707,-35.739991286228602,-37.348843197641067,26.949768674452905,6.5914827148787856,26.597716320095394,-39.668629400002672,-77.808295553105083,14.751433753483187,-17.180556650541327,21.643340771179851,28.749809243596509,-28.431965207493171,-16.834903461659668,-1.0595378531952502,31.172811087655074,-24.956196117296315,-47.263006819409348,9.350541250241255,19.432864040677952,-31.724980361063032,-31.142443739588629,8.1828364861792107,50.477045193531261,-8.4503474723320409,20.667707497160336,45.570988873840676,-40.0937897970717,41.877738054343332,3.5535924159823762,-46.324785816533733,-31.327873331288981,5.7931558693857044,5.7931558693857044,-110.66459895381789,-35.571099132131984,-38.261733994201109,59.431820124175374,14.125810443472643,-72.103183936090502,-38.09820476874512,31.831355504092166,59.078259050469903,62.135184755776578,35.816931556394081,-91.544264039524833,49.403116201110556,9.3828741605354349,-10.444130829083681,30.663207410532291,36.730259580391795,5.6140390880400926,-42.260827196726495,55.995785368552426,-17.666037667959483,-0.16274050123538342,45.989605787468307,58.854057944638576,-104.60901252625405,42.038010072543898,-86.992015222072908,-83.517660111344014,81.463996549538919,5.2224339480532542,53.739160187994173,-65.351956998618164,-17.443304748074716,65.366828152737895,-66.96782871495229,-23.887894605962011,-46.6539741983932,57.243511425060667,36.403587678966815,-96.650505007135123,-70.699226540626398,-46.292306781839244,-7.8488661533843596,-97.339320207581352,63.789278254398241,-94.112008467609044,-37.351245911070286,-32.586744645671821,66.149694522243479,15.276089468188644,83.872064017617532,45.06488641997872,23.386909303696942,-46.089876446747105,15.014975570290122,23.404189056836973,-110.09207306536352,-43.279387780471033,79.674952719448783,-34.883112415918497,20.533195069526336,36.568000157232206,-49.074461658585214,22.405177779108939,43.341458911490584,42.075355508892251,5.1810224480214249,-41.808406445682081,-32.222031312757181,25.304939150943476,22.871637153745993,10.891102410864429,-28.462837879874549,-1.6418462131859068,57.739550751879378,93.787830415005388,34.575217533568384,-95.344947302042286,28.749809243596509,-32.586744645671821,63.428611461945842,-99.942790155012119,9.8229739029973899,2.6624903539427729,93.745881445409012,60.619592924010064,-0.072108210185551413,4.579784995688267,-25.296477484770442,-5.1534462484495425,55.339675316048982,14.297828221943085,31.420804997167874,-46.832893949692988,-1.2908276879275449,-108.66969068451074,5.7658236640405827,-73.857100839595105,-80.430554595059647,-67.930591938874826,35.876715191326923,-54.548834201995994,-60.196979530323162,-3.5395510137751147,-68.368521414550528,45.839609332125413,55.891204813607857,-47.693204448770111,54.107781964869517,93.694573453786262,15.443892149422886,-101.68680436390207,-39.931695752435907,50.144489050734194,107.06174739100074,14.153693135987176,31.317925508294323,34.319355452284924,-24.578328425957363,-5.5807965917811702,22.413999280329559,-15.142339125889192,34.319355452284924,37.325545976801017,64.631327082469127,21.959225372714663,-103.52006211295614,-44.174734963460423,-45.437049924031328,-31.213915417812085,-27.904495318012646,61.829802339473098,1.0123593907294473,-10.946365127500057,41.389568373852654,31.981492578469151,60.257877809225882,-26.986857621982104,48.402517872471812,45.152299811361253,-41.207274279995978,-100.37875802836119,-37.482839961062837,42.029914708420435,59.366611449682892,92.290976738365799,50.388813973804602,-52.041082373862004,-25.215647737536941,109.89717185167576,-43.279387780471033,-50.903090404210261,-27.545125144186109,31.172811087655074,-92.959139969324397,-13.611542222952986,-31.487807489891551,44.634239795263554,-101.70923437157266,-99.759674774165845,49.170767133850823,-65.351956998618164,59.44629056992472,14.153693135987176,26.541148355747332,-26.563339656731294,-48.500847925876023,14.192291250648092,4.9834572413696199,-55.395378702412224,-89.080094119573914,24.298236716001465,2.9007321802584922,11.230148807987028,-72.558428775589107,-88.123821023679966,-0.86301199890278457,-17.195129481409943,-32.12285940401334,47.919048968783905,83.872064017617532,-33.93455645955833,11.087744761348985,-90.834060368168949,-55.305500244056304,-56.560774911258285,-37.21451570393868,6.7083317685934833,-45.437049924031328,-54.161014400540317,37.965454703172107,10.443093272431691,-26.408764470193976,-69.330289440509006,-28.431965207493171,42.977419004691072,57.739550751879378,-48.259296006060588,-38.189566267744475,54.100083456533135,20.073985769689962,-13.641543972249927,48.569282507220287,73.07072842881999,-94.674167680998636,-58.204327802262171,-33.102068494826732,-54.828504515750943,25.701523840721126,50.465283080804703,-89.96568306314748,-45.935145456261125,64.48325529929356,-35.100654330509123,26.863710054131829,46.462291437960566,-93.787062410316196,-84.761053929934562,6.7371046941923929,-65.123971232935034,-2.3138621065187195,-59.280219455184863,-46.324785816533733,-27.545125144186109,60.152068747479255,-7.472799192003257,21.7758176555284,-50.903090404210261,-51.15916535697523,-74.362243516743987,-92.270077370493794,-65.98576840381935,39.618185067370753,19.509663450671002,62.717702183945711,-50.903090404210261,31.38424236393762,-120.64448693370238,-49.517014691115804,-35.167411384244325,-34.922383388139146,-10.69243060776142,42.325362695132149,48.569282507220287,-33.297454887183335,-44.917686306827505,3.2396922840551046,68.313733055249429,51.989664380178716,-28.623549417702389,-59.728252005419506,8.7953904056961569,29.419625912173018,16.474969794352916,13.749428175969483,15.415778981457628,43.934728080805307,-41.322586379589886,47.899338820135064,-87.164745326962617,-63.888263509195312,-27.578650150684336,14.66579178418063,48.016046218970367,8.0566144092156584,17.832270006943762,-46.686607390676976,-7.472799192003257,43.092968496749101,-38.154042469468699,49.878469667806165,-47.087550854105075,14.231977532598821,9.3429227794375809,-108.5216175266123,18.756461058897912,49.753745499757315,42.165626804232403,-35.601244123197873,63.25145757852092,8.7953904056961569,-59.056228014766553,57.243511425060667,-19.154587067485949,18.736855597997611,48.859562080924547,57.243511425060667,14.192291250648092,52.191702240894244,-60.310016969043595,8.3183783050447779,112.62001113615841,-39.000240325265636,29.320126131538299,87.011837389597346,7.6426861398393555,35.858937666756127,-50.527402277075275,100.55822205879021,-67.732284036514059,46.275366876682277,30.200153115145945,-112.16444772141587,68.799064937795279,-105.61502404689308,39.602072847452888,42.623800505758432,-16.501012428571755,35.858937666756127,38.685430059851377,15.483294726146481,-87.448018615402219,16.520833183881656,-23.036540305826705,-103.19768190343913,-40.068490565548885,8.3183783050447779,-65.351956998618164,16.259312611470424,-13.292924507699784,-16.077627821848491,-57.122357465377142,4.6617977774517536,73.321347846393692,-34.311534251358658,16.274138343022852,35.980427068277237,17.67656242547913,107.90449375481269,-67.27214014192225,56.273722950445467,76.904999561200128,34.465376908717708,-112.0598935303351,-11.014888739908288,31.172811087655074,48.552579094359821,37.998277456082064,14.282684797306446,62.124922413680665,8.1828364861792107,93.787830415005388,83.872064017617532,-16.739051051780574,35.139289364853724,-25.586836206793006,-52.188536186976059,75.271416918253834,-75.92106952455562,8.9426935994887966,37.632546184800972,0.41338207637089008,-50.903090404210261,45.839609332125413,-47.693204448770111,87.011837389597346,72.173064169648029,-78.454803617906933,-70.469213422511089,12.777130085276474,-7.472799192003257,-20.728486389490026,-86.551015628864562,32.560559532330821,-7.4414423541042787,48.411081068712818,-90.657659840784504,10.024405861763473,41.455762072254664,3.3156478933620286,54.107781964869517,48.552579094359821,46.797479807743379,18.756461058897912,25.823123028596115,-32.383175065662201,-41.840756707383797,-12.055817130546291,-54.304203953449381,-43.558164267539901,-41.322586379589886,-56.495514843072058,-29.132157547627305,-47.693204448770111,-2.7405412701673204,-39.000240325265636,17.469463665382207,68.847558700960391,60.866204596105781,74.601449436341213,-59.728252005419506,49.898457305843472,82.116911668675115,55.16998556556166,-20.153715046041896,-5.2296751895713065,-86.187179753416046,-7.10397480618425,33.694457228339921,74.619816390654464,16.563026696226363,64.129914696617618,-1.9515864106962342,26.522580173737275,78.983555314362349,-87.603993640396396,-58.367004639995905,52.574357637510246,102.38825189686848,-22.945272769705348,34.592773243990237,39.782362366330759,42.868227012820192,70.832177685732773,49.08382659573725,45.253818898910879,-21.661913116160392,-85.978849527685355,50.083017894851622,35.858937666756127,78.01623456821541,-28.184335597799961,34.776269925197937,-110.66459895381789,-33.102068494826732,18.756461058897912,25.098168710118703,-71.876949203691552,11.436997849853091,40.80579787456773,-64.737409833421864,-20.048922897971927,-41.290360079488444,39.553548485995726,-31.724980361063032,-71.804377866151142,53.648520945330795,28.268622700327196,69.944162697588226,26.16892573255706,-63.232787287755585,-32.69725111133544,-10.43885242927001,-43.496876034650235,73.59104741993518,-110.09207306536352,58.086863052905649,45.152299811361253,11.859283832625339,42.718887049243399,75.434263828332817,61.364999205844263,18.196024825596211,56.967726560179848,12.453850848529427,102.91626187625442,98.081613545266549,4.0880234655050973,35.953116502757091,-66.683729686488689,13.844552494856455,5.290588899600837,31.084259993039861,71.797208751471075,93.694573453786262,63.6845279796743,11.840211316011633,-16.501012428571755,-16.501012428571755,-18.416005652305813,55.644626489497377,-110.43413895596211,-50.903090404210261,20.387820886722913,-34.883112415918497,-16.949163911200568,28.048998467930808,-0.23090531908304479,-37.951549559100641,-41.480829245340487,-97.168579694624867,24.633189183167723,40.835904529511247,-58.875888418760418,68.492450647781197,65.816103430940515,34.726394274146045,89.935398388280177,-4.3392278553565964,29.236986070455785,7.4209745161956882,9.312356027940595,-86.442258508310218,65.626498373534133,26.591945339405395,24.721675399673071,-61.446819871439807,-15.899399311444682,-78.465780960267793,10.161477349706191,117.7201146982535,71.986463441979055,-32.028170397375412,-59.749470083195355,-7.6569306604151199,59.404024958657558,34.695499876480838,-82.012506023624908,70.832177685732773,-27.243153417341706,6.1431841809408141,-18.066309819625488,-1.6670738146542003,-50.759581287100374,47.162700177400616,48.859562080924547,37.309904796847583,-29.112795725614838,54.303043132670552,36.396218202523357,43.403440085212807,-23.623043583535395,34.130210411729209,42.482080714387656,64.23084797143234,55.197756883863505,60.152068747479255,10.608855838123164,56.612778296802041,83.937680792411641,40.532152995780919,42.665283310330466,76.726141354827277,-9.1579366773907669,8.6288030811915348,36.270480533272817,81.564361660122415,27.06668580675321,32.077182100987685,-65.343391873907237,-4.0310693673257267,-45.437049924031328,-42.047506084820171,42.868227012820192,-8.8356988987144671,71.422338895990393,-72.12838719309363,41.927878639121062,-82.048699682520819,37.782267244536321,75.287030076960789,-108.87444100757065,-47.693204448770111,50.636431210980575,-33.307844708441607,13.687909162018578,5.0921488548969549,36.078968391493049,36.128535207566976,-59.096999411820278,-64.737409833421864,47.059280509030508,27.291683107359603,45.593429455923378,-77.327013938946592,-12.751971879247112,53.287172124400357,89.935398388280177,8.2179188296896601,-90.59389999247567,-44.851201601374804,22.875021590440035,49.502853711395232,48.394966457455837,-3.9832311456686984,42.623800505758432,-57.079610431116983,-52.634305824398837,-4.5950432312494129,-17.061345431786542,-46.686607390676976,13.167143535597271,8.314957457066793,-7.8135761870174782,48.867056203142091,-93.464807857677329,31.420804997167874,-99.572701225758763,20.387820886722913,-97.63635787181839,-92.414853533738807,26.522580173737275,34.967977041485675,-67.468676914068908,-37.366026466603905,27.033397912564819,-36.279767351940933,-47.693204448770111,-61.901470889394119,17.71553295847939,5.7931558693857044,41.595660202808361,56.067753373618579,-63.472638975070275,31.755276874456776,-50.903090404210261,67.764348602309937,13.301276214395086,48.016046218970367,-2.2259603713481408,20.368441476777193,-46.364518815054524,62.801167312974385,52.191702240894244,-47.889740128976037,-39.85736997378482,-74.828035554717232,-18.683284178636598,42.236382000461013,50.974895908547495,77.433678662164013,80.788813868767093,-59.728252005419506,-109.03615548020329,-64.761628589076778,-96.676577975733565,-7.8215685904871783,-4.675026471672977,-2.8842113152140096,67.061934678654879,-74.828035554717232,-45.411435288807191,49.41922169055961,-100.37875802836119,-40.0937897970717,12.108405569295082,-104.70858314931712,-34.655641018313844,88.60361134775404,53.739160187994173,31.705931826977363,28.794235086764701,22.394768685841722,35.980427068277237,-43.279387780471033,-103.5941287653164,-80.038185150126395,36.263981776617598,48.016046218970367,63.405025417948309,29.019854550913799,73.470804279764337,-77.692371400106794,-4.9304382642915643,40.765579696833179,-52.877910988175401,-40.165329133024578,23.193605855943513,42.988765750001882,4.8857693684436505,-138.54316698836197,-32.202183394309429,-114.24533832430501,-47.693204448770111,24.192314479985779,36.658790049773536,16.121510634670877,53.658481993457329,-32.6143268561637,30.124594775518688,31.511348241141523,-50.903090404210261,36.270480533272817,59.867015447545043,24.996716683962525,63.481878191283442,-33.381041378320745,50.636431210980575,-13.726071733593617,-39.419439067877725,-7.4414423541042787,129.18606756298817,-86.187179753416046,11.229941251109471,-89.190732177245806,-19.154587067485949,-90.615606284258149,65.594215065150763,12.629258583390873,58.221352158381663,75.232952630348606,57.32934158587021,14.097876314316185,-109.78113492547236,-38.154042469468699,-110.37825929546783,-10.43885242927001,-16.501012428571755,62.311684647866279,68.945505278601289,88.60361134775404,27.12682297898408,-103.52006211295614,53.598940444236135,2.6004572628550409,-3.2184269846531426,32.751167360904098,75.271416918253834,18.440597081759616,-7.7767915345136958,47.848677393146261,-38.077810462933051,-104.27980414275797,-49.876474541934115,-65.351956998618164,-90.59389999247567,59.078259050469903,68.016310125731081,87.011837389597346,66.579058865276082,-30.602881458189685,52.574357637510246,18.737095358068299,-117.29980065059389,-83.616548437950854,27.180927133764357,-6.5999691099208828,30.917848931270616,42.885468068939673,-115.72102391790618,-91.544264039524833,67.799664164309263,42.307482970920631,46.895002598524137,-42.511405934504488,-65.660133549854422,-49.811609806341338,87.011837389597346,27.033397912564819,-26.386646953849482,-31.281317489580783,22.03757171284996,-90.364255082176996,108.1753032619356,7.8146471372724484,16.420242486622076,6.0395558083596876,-28.157603171734216,50.636431210980575,-1.4865501372579695,-33.292569015514395,-104.40424697115337,-67.188874954387074,-38.634627434374089,-23.623043583535395,55.100510997366356,9.3100264189532815,6.5914827148787856,31.831355504092166,48.287216362259315,-31.724980361063032,-63.395252709830118,24.003087536742861,29.279305679328317,-72.624817294920064,-32.69725111133544,16.508504204933971,-49.390567331425963,-23.508196077475663,23.818160938410639,37.924030376994878,-37.243652834345809,28.749809243596509,-34.242872030449952,-19.154587067485949,21.494810631628667,27.180927133764357,67.972956245847726,-84.415222292607609,-17.124193992779503,45.12876279432988,65.626498373534133,8.1851909081637828,58.854057944638576,-5.5807965917811702,40.440107013877331,4.579784995688267,-34.308157550917159,-10.43885242927001,47.798336100328328,31.172811087655074,-89.853184809851285,50.789515685677991,102.59775999503638,-6.8039494165842243,23.193605855943513,60.711460228990752,26.522580173737275,-11.643698873262819,-10.659442747457433,76.283265570911169,-110.63449843800149,-44.867070687233927,5.7931558693857044,64.612865000011666,40.440107013877331,80.880460474548485,-71.208524469377991,-91.544264039524833,-27.545125144186109,-139.8834472831231,-57.842280116107837,-86.499822694445143,-13.820898917784664,-74.828035554717246,39.408871572113028,34.695499876480838,34.130210411729209,-23.309792490550805,98.835868532701411,24.547430650514389,37.225220224262173,-99.094255999250962,57.670076013082095,60.711460228990752,-90.834060368168949,-45.437049924031328,90.430458690631696,-99.942790155012119,20.607904765275148,94.499040573827671,75.13400655668282,36.228493738808787,-73.857100839595105,93.787830415005388,11.326648498005046,-71.896113120883314,58.313298797600069,55.197756883863505,-27.545125144186109,-111.77804880784151,63.481878191283442,-5.5807965917811702,-16.957951509824255,30.09907222260825,58.173676612623964,67.709239337447059,-43.279387780471033,12.777130085276474,13.549937937949867,41.455762072254664,-16.786227791092028,0.61084439583014039,-65.351956998618164,10.289837177247385,-90.487723944002539,61.056183728920622,-16.162931165260829,-32.586744645671821,-8.2341172993191556,3.4085186587785805,-80.038185150126395,42.756513608298739,-65.351956998618164,67.358668680355393,9.7337441744056363,-18.339515844745719,-33.102068494826732,49.878469667806165,35.858937666756127,99.360068915057937,-49.174441952995835,-46.6539741983932,65.438252512523846,12.235024456412514,10.665476222455496,36.128535207566976,-89.853184809851285,-35.100654330509123,20.387820886722913,46.895002598524137,43.703449383328028,-107.38706045453942,-71.234074542236414,96.3837534276539,-3.8779868798866675,55.509431178127507,-8.1226550065838996,65.626498373534133,-16.077627821848491,31.172811087655074,-17.195129481409943,12.972289884425177,40.835904529511247,-95.056168540626103,-78.279482331354757,14.297828221943085,34.130210411729209,87.794417995960472,14.192291250648092,4.7084086934410241,10.7940197851271,-39.460767969946907,83.148434929190373,36.583502667061879,-11.111965738630904,70.629972912016143,-67.814137940241821,42.165626804232403,50.879265265102489,48.686439955584518,-19.154587067485949,-31.355642831761863,-44.23477319242695,34.472996468795657,9.1346434016841407,34.528906831542052,75.271416918253834,-19.332583576290521,-59.096999411820278,38.818237682015621,-47.174286000154694,32.751167360904098,45.707500417436776,-109.03615548020329,14.192291250648092,57.32934158587021,53.140175989881222,-60.763010178240933,32.696965762224799,48.402517872471812,-11.201647832857281,0.94725680289373126,18.805327601398986,26.542856933607997,32.751167360904098,56.776878516975607,6.3238950647729446,55.197756883863505,-106.35380656856019,-42.900859303773629,-65.981032341467994,22.037285441965089,-65.123971232935034,8.2179188296896601,73.804780297774897,62.801167312974385,25.475779118299609,48.686262283890777,-48.429160683381731,-37.951549559100641,9.312356027940595,-34.166950412427269,-89.224103621015303,-47.693204448770111,-77.808295553105083,1.9937734424673266,70.505907288830201,-33.93455645955833,-74.738268507023847,-29.107862133695669,-43.736424696139167,76.726141354827277,-13.611542222952986,83.858130574125155,-37.951549559100641,-138.54316698836197,49.878469667806165,-55.318111474010671,-59.728252005419506,-33.93455645955833,-83.862949332268045,25.701523840721126,57.731831482336418,38.298958714023719,-79.159849880154027,57.713995574791696,-35.100654330509123,102.38825189686848,-86.40369640657363,-64.417138679326357,45.456755185374135,35.417591025535671,65.075791388512911,-87.76193425873744,37.998277456082064,-47.087550854105075,53.140175989881222,83.872064017617532,-10.69243060776142,75.232952630348606,76.904999561200128,55.339675316048982,4.7462572523743223,-27.352390987087329,6.7434112709057032,48.552579094359821,18.737095358068299,6.2241098284595697,40.547006196243728,56.776878516975607,42.325362695132149,-6.3214139626062646,-10.659442747457433,-117.54923412807022,-51.186873330347531,6.0683548910792986,14.475907408009171,4.0880234655050973,-79.159849880154027,-60.986391879918948,-110.43413895596211,102.91626187625442,-29.112795725614838,-56.560774911258285,-104.60901252625405,61.686744958867379,-50.903090404210261,-61.901470889394119,4.8857693684436505,22.099415522592487,45.935467523756088,46.907530825697933,42.092255627565606,17.818661249002652,49.090806142351887,-49.390567331425963,10.7940197851271,53.465754110955146,45.977974891298551,24.633189183167723,-90.877229268580635,40.073633280561083,-66.809242425125021,-92.198998559870873,58.086863052905649,65.756782067412445,16.565762367623613,-25.955167176614417,-86.40369640657363,39.573784455769648,-78.223108166666137,65.296476956258417,-66.054654343638859,42.165626804232403,26.223334178908235,23.341433862295943,-77.942436441833252,83.148434929190373,-91.544264039524833,-82.048699682520819,46.704144520096534,14.475907408009171,-75.927778615910725,-10.596537431112381,-43.014497628226138,67.471668247358792,-21.512682404010139,12.307900286254945,-66.605494441721916,67.061934678654879,35.855626050872402,39.692589374172407,-29.850264264373163,23.596642161187329,14.297828221943085,48.161971541600586,17.818661249002652,-9.0140577196897596,-2.8842113152140096,38.75685948612621,56.665365593468302,16.259312611470424,-44.230901832051572,56.273722950445467,-9.7905773666731601,31.172811087655074,45.12876279432988,-98.700370454252209,41.325598735038263,6.8351606918719572,10.7940197851271,4.5093021973720022,-40.561544193295951,-38.009501776663051,71.812337918448023,-51.186873330347531,-6.3214139626062646,76.120501560732905,4.4155279692295188,99.360068915057937,32.560559532330821,-32.6143268561637,64.238853391454612,58.704436349839071,17.383476003678041,3.3185475339175365,63.171669995330546,76.726141354827277,16.563026696226363,13.687909162018578,-89.943472322335651,-46.832893949692988,14.297828221943085,-53.084768539105092,-29.819006689036044,-82.048699682520819,-116.7932676178592,-64.548415745018687,90.571514797332895,-100.37875802836119,-20.452938203398965,-28.431965207493171,-75.335493769412338,42.165626804232403,12.17765800846302,-87.519312671828217,37.782267244536321,-20.496227158390553,-39.125366194872377,-59.969963470320344,14.297828221943085,59.867015447545043,-87.409626055217259,36.54489072602874,42.623800505758432,38.582697335949177,-62.62174731792701,10.688808549299688,79.590944800981035,-94.41763211965403,90.702539390901691,23.981379535002635,127.59183479672291,32.685379387910032,-64.548415745018687,53.739160187994173,-47.693204448770111,-3.1589630081777136,-35.100654330509123,17.132250497916459,-43.861020789919941,-84.415222292607609,57.457840046874033,-72.77288726180187,-58.875888418760418,-3.9335370588690441,-105.27356039778623,-44.247019549991954,38.582697335949177,-64.548415745018687,-43.014497628226138,36.453171456011837,13.769557200005623,26.223334178908235,-90.615606284258149,42.868227012820192,-47.263006819409348,31.420804997167874,-3.9831500233915236,75.271416918253834,67.799664164309263,-7.8881789823477622,-110.43413895596211,-74.828035554717232,40.363302293254954,42.623800505758432,50.636431210980575,-111.73596409262558,34.748668154578532,60.152068747479255,-16.759921116534127,23.945881642530409,-39.524590432901967,-103.5941287653164,13.301276214395086,-44.230901832051572,-54.315122375868654,-39.85736997378482,-26.412264203684789,9.7636040350935431,6.760502596498311,-93.016191366846115,38.169945334151123,-30.151006841811011,-103.38633436923674,25.914916858205029,49.090806142351887,38.75685948612621,71.986463441979055,56.776878516975607,67.358668680355393,22.422743732061839,-29.112795725614838,0.33801322955321711,-100.37875802836119,61.056183728920622,49.08382659573725,14.856008492936567,9.7337441744056363,-57.079610431116983,-65.118850304435128,26.798458748622974,-39.000240325265636,76.904999561200128,36.396218202523357,-71.208524469377991,11.618292922810793,-40.0937897970717,-32.6143268561637,16.85471455909077,-84.90495326739449,-38.077810462933051,-16.949163911200568,76.726141354827277,-1.6276695620680761,-111.28109322664012,-30.206220159034249,-84.666168563285183,-47.263006819409348,23.973766925150994,71.198639819515734,45.970238373058535,87.794417995960472,20.667707497160336,-57.079610431116983,-51.208094391801652,-38.154042469468699,-54.919155339693134,-114.24533832430501,42.092255627565606,10.219909881445611,18.737095358068299,-101.70923437157266,31.172811087655074,10.608855838123164,-51.126885579634319,57.791626399686862,102.91626187625442,-10.321877942448996,-37.951549559100641,38.847967062938899,43.848804226847165,36.128535207566976,34.695499876480838,-35.100654330509123,27.443389992086967,53.767393221907497,4.8857693684436505,26.722611264380831,24.45106546646883,8.357291653046568,71.986463441979055,-136.33510318444135,20.387820886722913,18.805327601398986,-31.327873331288981,27.091009766833725,-33.331721250436701,59.078259050469903,10.229994818264098,45.970238373058535,48.243730534954999,127.59183479672291,20.667707497160336,-34.166950412427269,-33.93455645955833,-60.827299936178349,-113.40324505596566,16.664283913324105,42.756513608298739,-57.079610431116983,58.183537407802746,67.647220440590559,-27.904495318012646,-32.028170397375412,40.238897303142281,12.307900286254945,-35.100654330509123,-51.00282134282061,49.41852775672254,-89.102754763389328,-47.263006819409348,91.536173140697315,-89.943472322335651,-18.339515844745719,127.59183479672291,26.567863418210543,-19.680459584389027,-67.814137940241821,-91.217503913466274,-10.43885242927001,48.402517872471812,73.660102061500197,-53.343993917167879,-50.10579410970368,17.283145110166942,69.81005928218967,-4.9156369695451438,-104.60901252625405,49.634207489967018,117.15975467550639,56.273722950445467,83.642787219202191,-93.915747594994158,-15.671554427687633,-13.641543972249927,35.319254342570204,-39.000240325265636,42.236382000461013,9.5374595606859263,4.0880234655050973,-60.196979530323162,56.251124393582529,47.666811512724529,-39.47986283097012,9.2870277596437827,76.904999561200128,-67.814137940241821,48.161971541600586,57.243511425060667,65.816103430940515,-108.1559105325194,14.475907408009171,70.832177685732773,-82.151994663281613,57.791626399686862,-75.92106952455562,-4.5285363303903603,61.056183728920622,23.522108809877853,61.378168937667283,50.057401207371576,35.1432502999467,63.176628436755941,-18.666120649614705,-48.135879572177714,-116.7932676178592,-31.550023162453623,-38.758818500852314,19.904746073869489,-116.7932676178592,31.172811087655074,-101.70923437157266,-26.518727583899668,4.8857693684436505,62.304198147863104,-46.6539741983932,19.441175254462596,50.789515685677991,45.651467831601565,41.764917662489033,17.67656242547913,16.664283913324105,-19.154587067485949,-40.169365956709143,77.624158493530501,-86.499822694445143,-34.113820990681575,47.798336100328328,-91.217503913466274,-32.226223716591015,122.8317606386131,-8.8356988987144671,19.441175254462596,-90.364255082176996,14.192291250648092,-34.594620003812722,32.751167360904098,-37.21451570393868,-43.776558647759359,10.7940197851271,-11.014888739908288,67.061934678654879,42.165626804232403,-1.4483321496730475,-97.240777657330014,18.805327601398986,-29.237636657613557,-35.100654330509123,31.618636345838556,37.998277456082064,31.54274413278922,-13.247294170623066,-159.02198746967716,-13.945220091493816,75.287030076960789,-112.47663171060587,-110.63449843800149,-77.808295553105083,-99.759674774165845,25.599911569982861,-39.47986283097012,117.7201146982535,9.5778263744437773,-57.079610431116983,18.737095358068299,-73.857100839595105,41.385726082079209,-19.276125865866405,14.644511340429666,-86.499822694445143,9.312356027940595,39.408871572113028,32.581599875324109,55.197756883863505,-6.8894681799748874,-107.43532117545274,117.7201146982535,48.161971541600586,49.399540377674008,-13.641543972249927,79.028952707189646,-101.70923437157266,60.549450371882159,17.818661249002652,71.198639819515734,53.143033060316455,-35.100654330509123,44.200338854908523,65.626498373534133,48.552579094359821,9.734446298566052,34.130210411729209,-32.69725111133544,-35.100654330509123,-40.504911935473054,-62.239598105691449,84.589315930586807,49.08382659573725,30.124594775518688,-79.159849880154027,55.100510997366356,-1.4826566257548017,73.102297663306757,112.62001113615841,-13.812121957413805,36.128535207566976,-10.43885242927001,-92.224782439059553,28.711136242569708,31.317925508294323,-85.978849527685355,-51.208094391801652,65.626498373534133,-5.2423043295242877,32.751167360904098,-7.10397480618425,40.230650355787915,47.798336100328328,49.898457305843472,45.005168183369619,-1.3703069482058243,41.401709345826767,-95.056168540626103,40.440107013877331,45.81237797367546,20.387820886722913,-82.794197649698717,41.846197998141655,-17.31376940368931,11.090293939337741,-59.969963470320344,-51.208094391801652,42.623800505758432,46.895002598524137,34.319355452284924,49.141665976354851,47.199337118399832,-10.43885242927001,75.027488286994995,-8.4503474723320409,42.038010072543898,-72.12838719309363,-96.491803592700563,-13.641543972249927,6.1012179617823019,-3.2787045465874063,-89.943472322335651,19.036674831591469,-89.96568306314748,-15.262316858008504,35.119792916072427,36.583502667061879,-2.3152772419839942,10.724615547132899,-3.9311901738631847,-7.8135761870174782,11.326648498005046,-40.0937897970717,-26.672210113525843,-31.781654138076536,56.967726560179848,76.904999561200128,-68.437524645917648,-71.333525876426378,5.7931558693857044,10.342698551320392,-13.641543972249927,10.219909881445611,55.339675316048982,-56.959671559312653,5.3805314710561172,-49.258975970085828,-62.772340386045855,-54.532297369266878,40.421924611953749,-40.674130157660557,71.986463441979055,83.642787219202191,12.187161057248112,1.5623843934179344,4.4155279692295188,-4.0310693673257267,34.695499876480838,87.827908315631333,8.6288030811915348,67.306800244680318,-24.064467456643904,65.381833399272054,-63.969219981170916,45.152299811361253,-56.560774911258285,-26.60150699835124,-91.913574795979841,6.3603697851197403,-37.366026466603905,41.588595380583861,-60.763010178240933,50.636431210980575,55.638198076211864,49.878469667806165,53.658481993457329,-43.279387780471033,64.812944602950481,56.776878516975607,41.401709345826767,33.415986944393183,27.091009766833725,-89.853184809851285,-47.693204448770111,-53.088412562751621,20.928345093084374,-10.43885242927001,75.807040477660195,93.136397559572856,45.607119189567847,23.624321760645859,99.812574203907332,-37.21451570393868,-86.499822694445143,57.243511425060667,-10.653496660886502,-35.100654330509123,-38.819764558568167,72.351490291531405,-108.40952757208026,87.011837389597346,-7.9187265679255372,-12.97034585094185,10.219909881445611,-33.93455645955833,-77.088456073812068,-104.60901252625405,16.565762367623613,71.2177966464305,-29.178208527903873,13.788284092362234,50.789515685677991,-65.998074613161918,18.756461058897912,-40.220223321040571,16.85471455909077,9.5778263744437773,31.80106979019429,-90.364255082176996,58.259488389547315,37.998277456082064,33.694457228339921,23.386909303696942,31.420804997167874,97.985632525763947,72.61996119831359,64.812944602950481,24.809377629024041,54.697638772931946,-34.922383388139146,61.618968170091875,-55.726816257880039,29.140082441016418,-11.014888739908288,-16.501012428571755,38.75685948612621,-11.8485923699824,-33.102068494826732,-89.96568306314748,-73.125028014048723,79.484833825441925,-39.24591720224749,7.766348209957366,10.724615547132899,-52.672471065915417,-13.641543972249927,-11.8485923699824,23.015867943169404,-16.501012428571755,69.944162697588226,-33.102068494826732,25.435282315608628,-59.701345220785832,-51.15916535697523,-27.243153417341706,-90.615606284258149,48.016046218970367,-17.124193992779503,30.124594775518688,-67.188874954387074,92.172874198384804,-19.485362165566773,8.2179188296896601,-84.90495326739449,-44.247019549991954,47.798336100328328,42.756513608298739,10.219909881445611,-7.2049794788202552,58.259488389547315,-69.830560966787218,71.986463441979055,-43.872389125042105,19.441175254462596,102.38825189686848,22.528070312005074,-105.9404729480143,-78.223108166666137,14.192291250648092,10.608855838123164,-11.987553990333687,-104.60901252625405,20.073985769689962,65.381833399272054,30.124594775518688,45.005168183369619,-31.297756340662851,18.756461058897912,48.569282507220287,-41.207274279995978,-51.186873330347531,59.44629056992472,71.117478727662885,-108.1559105325194,90.807907443875564,6.3238950647729446,26.798458748622974,32.751167360904098,-54.573862339496657,-56.560774911258285,16.259312611470424,5.4704600449300917,10.7940197851271,-5.5807965917811702,-67.761345775167598,103.67325748456216,-16.949163911200568,92.290976738365799,33.827217410790979,-61.683180541782228,103.33125426545925,57.739550751879378,6.3603697851197403,-74.828035554717232,77.389041016266304,45.12876279432988,0.87872848392703684,19.064181579970207,61.618968170091875,-41.322586379589886,-103.52006211295614,68.313733055249429,36.128535207566976,65.626498373534133,-71.804377866151142,-89.102754763389328,45.034541412574264,39.487728540239303,-34.922383388139146,-34.922383388139146,-82.048699682520819,56.251124393582529,-63.125572360997133,-7.10397480618425,22.406832404801044,87.794417995960472,-34.413301565030395,-60.409676900643795,18.756461058897912,-118.81192173555542,-112.16444772141587,-27.163148192420895,-83.616548437950854,-34.922383388139146,18.901193039739642,13.687909162018578,-43.279387780471033,-82.284009575348875,4.579784995688267,-4.0310693673257267,38.75685948612621,41.576778077849099,127.59183479672291,88.60361134775404,-25.067235145545524,-23.508196077475663,-90.615606284258149,48.256528264636174,-86.499822694445143,-16.025747905789508,8.6288030811915348,90.878904620708866,-17.31376940368931,-53.840781756353884,29.514332880192647,29.68339501322496,17.442096488743999,-138.54316698836197,8.2825994258788178,41.401709345826767,25.225758799301605,-34.113820990681575,30.570665462351595,53.648520945330795,-99.942790155012119,68.016310125731081,-74.192502844842863,-27.163148192420895,6.3238950647729446,0.87872848392703684,-104.60901252625405,58.183537407802746,4.7084086934410241,-27.243153417341706,45.839609332125413,-27.243153417341706,-82.794197649698717,-5.336203687558525,-38.154042469468699,-4.8769925640493046,-67.215554906570247,10.724615547132899,-33.102068494826732,60.152068747479255,-19.154587067485949,83.148434929190373,75.702778666572158,-41.322586379589886,-10.43885242927001,-54.532297369266878,41.401709345826767,-106.87214660774968,-8.0302163540027713,49.41852775672254,41.588595380583861,35.345170995330548,56.71185858320942,-87.929497266734288,14.475907408009171,3.0100206207733708,-72.624817294920064,-91.544264039524833,48.794503672319642,54.661755635263773,-90.615606284258149,24.737045904146118,12.720687308508893,17.71553295847939,31.230704771829775,5.9478934620258501,35.345170995330548,32.464508069143562,-51.186873330347531,-42.738108694577811,-3.0324370699314338,-70.866526022643043,-59.749470083195355,-40.960315205748984,-94.843081208809465,56.251124393582529,-53.840781756353884,126.64883242813207,13.566737051557224,-21.512682404010139,40.835904529511247,-45.437049924031328,14.297828221943085,-3.9335370588690441,127.59183479672291,-32.710330114117909,-17.924304857024097,-42.738108694577811,48.016046218970367,40.073633280561083,18.756461058897912,-60.763010178240933,102.38825189686848,-10.43885242927001,-47.631554355078947,45.005168183369619,49.898457305843472,-17.124193992779503,-3.9335370588690441,-62.62174731792701,35.402382532641802,41.595660202808361,56.251124393582529,64.653656312123005,-33.601552449001119,56.273722950445467,75.271416918253834,-11.014888739908288,-50.903090404210261,18.263774759315929,26.451125824469301,26.819558708342541,-103.52006211295614,-7.4414423541042787,35.402382532641802,-39.85736997378482,46.895002598524137,-73.842525475133499,-89.814500206172966,1.5623843934179344,23.015867943169404,-16.949163911200568,4.5093021973720022,-11.266689672483524,-103.56216602287603,-89.853184809851285,19.441175254462596,6.5914827148787856,57.791626399686862,49.878469667806165,-82.048699682520819,-62.62174731792701,-37.21451570393868,-33.93455645955833,99.360068915057937,-54.532297369266878,4.0476751021020885,48.569282507220287,41.764917662489033,40.272152672688485,6.0395558083596876,53.739160187994173,60.92007003691883,55.197756883863505,-29.112795725614838,-85.978849527685355,57.243511425060667,-89.96568306314748,99.360068915057937,-114.24533832430501,-86.994316791296441,5.723022982841294,-74.411041001635738,61.618968170091875,-114.24533832430501,8.2825994258788178,-116.7932676178592,54.303052072464979,-47.693204448770111,67.823061623320754,4.7084086934410241,-1.6670738146542003,62.801167312974385,-73.842525475133499,83.937680792411641,62.304198147863104,-12.97034585094185,-57.079610431116983,-77.692371400106794,14.192291250648092,-27.760685556755405,-12.169957192267088,23.624321760645859,46.33171688483062,-5.7293863915000234,-7.8135761870174782,75.287030076960789,-105.14554755509555,-64.548415745018687,9.5765989123138073,42.41424550580949,-33.102068494826732,-75.92106952455562,-114.24533832430501,92.290976738365799,18.736855597997611,-43.014497628226138,28.749809243596509,-51.208094391801652,1.9937734424673266,-22.13834735149798,32.077182100987685,55.360285191179436,19.101801571007051,-54.315122375868654,-83.616548437950854,-46.6539741983932,42.092255627565606,-54.532297369266878,-105.9404729480143,59.44629056992472,-92.643147738076706,-89.943472322335651,15.977669676631869,-63.969219981170916,-31.107278965886682,41.139699011053807,-13.945220091493816,14.192291250648092,-67.385773040361855,-42.700123085607501,-31.487807489891551,-38.390372461122389,27.322896982618818,4.8857693684436505,96.156416599250406,37.924030376994878,-114.24533832430501,10.684494693287704,-43.558164267539901,58.22778824202431,49.878469667806165,33.694457228339921,8.6288030811915348,15.977669676631869,32.581599875324109,-93.53455140301395,22.394768685841722,59.623132702765787,-29.112795725614838,-56.23904440278627,87.794417995960472,-48.259296006060588,-104.60901252625405,73.07072842881999,-62.62174731792701,-103.52006211295614,71.422338895990393,48.402517872471812,-6.3214139626062646,44.776927794342512,-16.949163911200568,-103.56216602287603,48.569282507220287,-41.322586379589886,-38.077810462933051,-57.079610431116983,-1.4826566257548017,34.319355452284924,-19.680459584389027,48.552579094359821,-34.922383388139146,67.061934678654879,-21.512682404010139,1.2573434759867086,-66.054654343638859,49.878469667806165,90.807907443875564,18.756461058897912,-90.59389999247567,35.858937666756127,68.492450647781197,47.848677393146261,34.603974546918153,35.858937666756127,26.522580173737275,61.378168937667283,83.148434929190373,88.143844699331609,-24.064467456643904,42.41424550580949,-97.339320207581352,70.307086985880986,87.794417995960472,-27.243153417341706,-75.929550849271038,27.650356113889394,-40.561544193295951,-67.895739423913241,9.5778263744437773,65.381833399272054,-73.842525475133499,13.237995400947726,80.880460474548485,-37.366026466603905,41.764917662489033,17.317098880604867,49.08382659573725,16.563026696226363,-23.866511896127253,53.739160187994173,10.219909881445611,16.563026696226363,-81.105541184485077,65.381833399272054,-57.079610431116983,-49.560542105395477,45.488071915465319,-159.88480773892073,25.701523840721126,-47.263006819409348,-56.560774911258285,14.475907408009171,32.696965762224799,59.771062117544098,4.579784995688267,-17.195129481409943,-52.11234840996444,-57.88368324056853,6.0395558083596876,61.618968170091875,76.275292057163796,-72.12838719309363,68.847558700960391,-16.187773800457993,68.313733055249429,-27.760685556755405,32.685379387910032,-42.687968992342888,7.2103396593439131,-75.92106952455562,45.005168183369619,64.631327082469127,-92.401817492589018,-32.861069996567345,-21.512682404010139,72.351490291531405,13.148932875868317,31.172811087655074,-72.624817294920064,71.986463441979055,65.540038931072175,62.727924277530292,26.522580173737275,-40.561544193295951,27.033397912564819,55.193662629053783,-51.485020548157436,68.411355508379472,127.59183479672291,94.499040573827671,55.197756883863505,-20.452938203398965,-16.501012428571755,-60.763010178240933,-15.573245097718132,51.524873150386192,4.3836603563798562,30.124594775518688,-66.605494441721916,-100.05689243751335,80.880460474548485,-66.054654343638859,59.623132702765787,-4.0310693673257267,-54.919155339693134,102.38825189686848,-82.794197649698717,55.193662629053783,25.701523840721126,80.880460474548485,67.823061623320754,59.895612695057821,73.07072842881999,26.597716320095394,34.130210411729209,-50.903090404210261,20.667707497160336,47.848677393146261,62.801167312974385,31.230704771829775,-41.322586379589886,-72.328724824084901,13.788284092362234,62.727924277530292,31.172811087655074,22.394768685841722,55.197756883863505,11.471428744386316,-112.16444772141587,-23.508196077475663,32.685379387910032,17.317098880604867,-73.385513935842127,-77.808295553105083,-34.594620003812722,23.783152203869875,-7.8135761870174782,12.307900286254945,-104.60901252625405,67.799664164309263,-27.545125144186109,41.595660202808361,-54.532297369266878,-30.200627728270419,-47.693204448770111,-34.922383388139146,-16.501012428571755,-17.124193992779503,-34.684891815460148,-47.263006819409348,36.647746519791902,34.481169872556613,4.7084086934410241,35.402382532641802,-78.223108166666137,-48.259296006060588,-26.303555116736984,-54.532297369266878,-5.5807965917811702,67.306800244680318,-7.8135761870174782,-74.192502844842863,-89.96568306314748,41.401709345826767,40.035843755403818,-3.6724367605248407,-57.079610431116983,75.271416918253834,-34.16592881050439,49.898457305843472,-59.728252005419506,67.799664164309263,-72.624817294920064,12.270657122687263,127.59183479672291,-6.9169771341871771,-83.147241141168749,55.197756883863505,-34.922383388139146,5.4399482885007249,18.756461058897912,45.846511572527618,85.212335177678341,48.022601035461307,-39.85736997378482,-55.318111474010671,20.073985769689962,47.199337118399832,-87.929497266734288,70.307086985880986,-11.014888739908288,41.576778077849099,53.739160187994173,-79.159849880154027,-33.93455645955833,-15.060110789864853,67.799664164309263,106.00233589958005,-2.7405412701673204,31.230704771829775,-29.112795725614838,46.895002598524137,-47.693204448770111,-26.303555116736984,88.60361134775404,-29.420047052159504,-109.03615548020329,-60.763010178240933,76.726141354827277,-54.532297369266878,84.589315930586807,-18.568694900927294,19.006984339121402,37.50925762734034,-84.688104022034651,40.440107013877331,4.4155279692295188,-86.499822694445143,31.420804997167874,-104.42495107820442,-37.143192646052512,65.540038931072175,-142.862133327175,6.8351606918719572,68.804642642792871,63.956080525236054,71.422338895990393,33.415986944393183,-63.969219981170916,-0.86301199890278457,19.101801571007051,-26.386646953849482,36.415582944692666,-57.079610431116983,74.815744422728471,58.863427758801478,53.658481993457329,-11.8485923699824,27.25722448231841,-101.70923437157266,51.524873150386192,-67.895739423913241,9.2870277596437827,-145.70301364956114,37.924030376994878,-3.2787045465874063,-101.31974651538519,56.776878516975607,42.623800505758432,-61.181967445940025,70.505907288830201,-6.8894681799748874,-6.8894681799748874,69.961317404108812,-152.17233902632628,-29.420047052159504,-81.105541184485077,-37.482839961062837,-89.96568306314748,87.011837389597346,4.0880234655050973,35.858937666756127,-47.263006819409348,36.128535207566976,51.524873150386192,83.148434929190373,-82.048699682520819,40.272152672688485,4.6617977774517536,32.751167360904098,-48.259296006060588,37.924030376994878,64.812944602950481,-101.70923437157266,49.323446360277174,75.899724088673224,56.71185858320942,-75.929550849271038,-79.159849880154027,48.569282507220287,28.092543993577909,-6.8894681799748874,53.739160187994173,56.71185858320942,-60.977653419958244,42.623800505758432,34.695499876480838,-65.351956998618164,34.695499876480838,62.304198147863104,-20.452938203398965,-12.97034585094185,75.899724088673224,-94.572500576662932,-50.903090404210261,-34.922383388139146,-112.0598935303351,41.463547437340196,-105.9404729480143,-29.112795725614838,36.263981776617598,-82.048699682520819,-116.7932676178592,35.858937666756127,33.694457228339921,-15.060110789864853,-11.8485923699824,26.832121333674873,20.387820886722913,-29.112795725614838,92.290976738365799,61.618968170091875,-89.853184809851285,-40.0937897970717,-75.927778615910725,-100.37875802836119,-47.693204448770111,-15.42273243448604,49.141665976354851,32.751167360904098,31.831355504092166,23.015867943169404,19.441175254462596,57.243511425060667,-18.568694900927294,34.319355452284924,48.569282507220287,45.096842638734252,64.653656312123005,4.579784995688267,72.351490291531405,-92.224782439059553,-18.699066727604162,-82.048699682520819,-62.662397291504831,90.571514797332895,6.5914827148787856,34.319355452284924,18.263774759315929,6.9584112933844953,-47.631554355078947,36.900127766622084,-20.452938203398965,35.858937666756127,19.441175254462596,-19.14333829457421,-3.9335370588690441,16.563026696226363,-7.8135761870174782,71.422338895990393,-54.532297369266878,15.852279862976692,8.2825994258788178,26.522580173737275,-96.491803592700563,-38.154042469468699,57.791626399686862,15.933093310746271,-91.544264039524833,22.394768685841722,-108.1559105325194,-89.853184809851285,42.134272851591348,80.788813868767093,-117.29980065059389,-48.259296006060588,-101.70923437157266,10.608855838123164,35.858937666756127,4.0476751021020885,67.306800244680318,-15.060110789864853,-87.929497266734288,-50.905989056205712,55.617217514305146,63.176628436755941,4.579784995688267,43.934728080805307,-98.245134409998442,-46.6539741983932,15.655783255426854,-59.749470083195355,64.666435905499,14.192291250648092,53.648520945330795,54.303052072464979,53.648520945330795,50.636431210980575,-108.40952757208026,-89.943472322335651,27.650356113889394,-27.545125144186109,-61.683180541782228,-51.208094391801652,-110.63449843800149,28.049540329520863,-101.70923437157266,41.439286486900272,-77.307834514763556,42.307482970920631,39.487728540239303,-100.05689243751335,-3.8581530799213586,-86.187179753416046,-47.693204448770111,63.830251491899133,-41.322586379589886,-27.545125144186109,45.205791627720068,48.161971541600586,65.816103430940515,-47.263006819409348,-51.186873330347531,7.5421628854267544,94.499040573827671,-16.077627821848491,-12.169957192267088,-53.840781756353884,-91.217503913466274,-7.10397480618425,71.830000491161925,-11.211471322964774,6.9584112933844953,-34.594620003812722,-43.279387780471033,35.402382532641802,-87.929497266734288,-53.982447791434943,6.0683548910792986,36.415582944692666,-62.106307926931471,-32.226223716591015,-10.321877942448996,12.235024456412514,36.900127766622084,42.623800505758432,-59.749470083195355,-121.40863822709925,-59.749470083195355,55.193662629053783,-7.2049794788202552,-66.956893735500969,4.7084086934410241,16.563026696226363,8.6288030811915348,79.704808175823956,10.608855838123164,-61.181967445940025,-13.703751539458747,-108.40952757208026,-2.8842113152140096,-37.128885459350023,-108.1559105325194,-6.9818193051370931,-89.96568306314748,83.642787219202191,6.7083317685934833,31.230704771829775,34.695499876480838,-39.000240325265636,0.87872848392703684,-33.102068494826732,-85.978849527685355,51.524873150386192,-40.186124163134401,58.854057944638576,-46.521869411587062,-75.929550849271038,-47.713657900356438,81.660856171584754,69.961317404108812,39.635068933858662,-97.339320207581352,-7.8135761870174782,5.3805314710561172,-100.17509921103813,-71.39228125124221,-27.545125144186109,-108.1559105325194,-27.545125144186109,8.5521727760592974,-34.684891815460148,57.243511425060667,-10.321877942448996,-62.239598105691449,42.165626804232403,62.304198147863104,45.152299811361253,41.576778077849099,37.924030376994878,-60.272623763457212,59.895612695057821,-100.05689243751335,-81.105541184485077,31.016394755766008,-94.843081208809465,25.435282315608628,-41.322586379589886,16.420242486622076,65.626498373534133,42.134272851591348,45.005168183369619],\"z\":[18.247058582430597,-8.7377297615314689,-9.1186903238551817,22.858333361831018,-3.9920241902242477,-10.78394528588721,-29.288383915606943,-5.1373203229092166,-66.85606274771034,-47.171200533647976,-21.009446073984375,12.385301472972603,-46.111211066513349,25.47074975329161,-30.816733713383446,-28.247578669110748,3.8525665629144497,62.89063824289795,15.209204446066488,22.899300179010197,-38.091527476503323,34.614547766245167,-25.405730883318277,22.087932656119051,8.603567990595641,-64.176798520682212,7.8626923438088223,26.215719569129231,-31.293418445367156,33.281223984745466,-28.267012731059552,33.735325308672401,63.467150589599363,-70.612993673336561,9.8659958275188746,-69.65108356534887,-14.988486232598442,3.4264087057467982,14.175942117930328,-11.389359133033466,15.448237990018857,-69.20268392436796,27.953996145478452,-41.428373811329372,-37.056843695531761,4.6797951705113325,26.168469915045755,32.513503353851803,-37.027990427451165,38.125626031801744,14.182030891225208,-36.760361153043064,-44.570900194850012,-58.874005869039685,82.792453484798926,-13.309795962310918,-16.053389935305955,-23.687889880917236,56.78784797264543,28.07267935092742,2.0863168374046941,-101.10958694450443,-25.697243998642342,-29.904909554690921,30.231626166580305,39.833777556237287,12.391373447138227,-14.23133547891657,0.63924573203625712,9.7148108562666486,25.866436875055484,-19.970687143751285,-74.390751017631231,37.284884306063674,34.824038526391554,7.4647762438719774,-11.532005781088179,26.462558454212502,-98.017124468220416,-4.1591047654687863,29.234362466884882,28.938505706922687,-0.22655298791944087,51.46665425372445,-57.583730208286106,30.728664541404928,-8.5561840515358156,-9.0936106916488644,-28.196550906827113,-23.884786982400588,-13.878878657811727,14.91452505904039,24.159621806900365,-66.85606274771034,1.0407799487961014,30.702333355312629,20.04654626573598,-5.6058325221495675,20.824107375778745,-22.85173635663693,-7.6799645788938067,36.869481318901997,21.490021113705208,73.657282528246327,19.358258943601236,-35.846081435099421,4.9303297620080251,26.277811924974475,-49.89453421661689,32.854454321704701,-56.643292758467425,-31.539206884235522,38.019991319309952,-25.56335399530046,-14.512635807371717,3.9299562578129992,59.627854055871239,67.406017314130011,51.454571232763072,34.963686812490067,10.403919225112967,9.5798489036038781,-2.7084451837028172,19.345035471868162,11.219484116043823,78.83775793943741,-40.731388608567165,11.219484116043823,-48.483650718994625,16.57155273093634,-43.830581352240181,-58.224872248709403,47.830569408627433,97.410465979876477,2.9644471964630119,22.948625350154522,-8.6272923234364942,-33.544857586330295,-23.12872439516325,31.837627614247332,25.611027034312322,16.700838409266044,4.6797951705113325,-8.1225845173523119,5.030457892715992,33.534494432926749,-23.169790495725767,-17.264878128105362,35.215454797123513,6.7525793220134318,-33.235016965334786,-58.198961858720757,-64.17290133358145,-29.774990724161448,-18.464655895862336,1.996758205331485,8.8523697909535652,73.469651083888294,4.2735080044851701,-14.065648350761263,-0.22125039580796235,87.204905028788104,35.587384640438508,30.754731067923913,-31.791758051081793,-48.512010200536523,-8.4437410129495234,-13.075980006523764,34.183027873304972,-1.5347323213442168,8.4814310160493154,51.954056437174522,15.430000838403274,-47.732359670087789,-108.06899769112476,31.543055545876808,8.8573096719694266,21.342769506806246,-10.496336055242351,-34.582412737560489,-24.739749602066343,-64.240772810880273,12.385301472972603,66.404193638242688,42.668518878853178,30.607759525512627,20.03248237603027,-35.268379837451533,-3.5403605382042223,-17.459078008856483,46.912515425731222,71.785177278140253,-1.2097182978210657,42.784178916907742,-17.625914087921654,53.270790689675536,9.1691988268083247,20.239011713066951,-4.0056070679883042,9.7375264015065994,-26.703196917514582,13.153119894639547,-2.9546411881185746,-42.371850728117806,-94.219925398890879,9.5903963449736853,-44.35052537298354,-24.308047198411476,-78.984552425022457,43.229728689465517,51.247544244048321,20.216673904775728,1.4078833721675938,-46.075957791167191,78.804660554117078,-8.3776831434330958,-14.354643578298067,23.421758613286521,-5.8157761016586811,-14.610831734395768,24.588121937803493,51.954056437174522,-13.929428043581122,24.583999074537047,-23.945009336158364,20.319853775996176,-30.056823859034406,13.626699348348675,-14.973962541517066,-6.5917042247768602,68.67719381979154,73.16719910572715,16.52991941463646,-89.038979968059891,14.993696597458255,-32.913441829766519,52.561498018673348,15.424438092201427,-63.599551277988745,51.239906034081613,-33.753088324322647,84.262035355130052,22.260326633494262,-17.436321673321558,33.567385400501358,-17.909518249893093,-34.443197644346888,-13.312742705243078,17.334819410433866,65.819888868380758,56.950981463798797,-11.693224496735203,28.347774554696191,9.0480901384038699,29.421157073919897,80.292260361032973,-48.103800616109417,-80.114765440698264,7.1596546697990613,-13.929428043581122,-41.399342186728227,-51.952084242041401,-35.442036251788117,-13.766129951106342,10.235316038838977,-58.224872248709403,-59.308629080122316,10.360509831950138,13.983361397901303,-39.130110668179007,7.4984559228076293,-23.760084046067629,6.7525793220134318,27.529963239024593,87.139559064231364,-35.627470445539579,23.054365666565758,66.006962243503494,-94.542979765260156,28.433865292339767,-46.858557206079674,-11.024003917163302,36.930179314461142,-59.047893851761096,23.571653094991458,-18.491369513027404,-18.720362125604229,1.5249883300097615,7.0433892499813098,4.0288546127460352,42.313902914817248,26.423112429908144,-3.8517566920105581,-8.4974598356099111,25.280343786862442,-38.518503071245448,-14.302077533972074,19.682691868620196,-10.108188857142819,-11.282836795361671,-3.9591383200434085,79.856392767789004,7.0632574050179837,-8.6896360405453823,36.809694389582148,-4.6093765439918464,-57.681689576234412,-15.04187823331643,21.26723379500266,32.735575040245756,46.570171375435073,23.744793697306228,15.981372433069435,32.342494355407005,20.824368110655175,-14.166794179244182,10.068042506668766,-10.594600015807449,-21.081643343072152,-29.656835256036096,17.273396131554776,-14.133140094024085,-33.642355429430083,45.44470161624951,-14.862455440344986,-1.0141591371433489,-6.4893701026450294,-5.7033227140005334,66.250137400216332,-9.916077343013054,5.3550449369497599,33.841439138814032,-41.428373811329372,-3.4398169659531255,27.659933638591703,-19.773748510702227,26.168469915045755,17.334819410433866,-15.704142363315384,28.883938154871835,-35.961090656271622,31.916473242587465,32.371140326277001,-22.956519282040627,74.024521305954423,22.14902972096597,40.398515327394584,-45.78697005311993,19.16840657673692,-35.969823671041922,-56.370046404141043,31.415815298627667,-6.1213870130074959,-31.422456904422987,-86.901860235330503,16.605357224231209,14.364285437144778,2.0834928559239754,63.597347882688268,4.4452840872799113,58.696968139728234,22.318218705249372,-7.2061525892754741,-5.5728838597404904,38.456490847552871,21.775895971007408,24.667373321965275,-70.467212094151364,32.480019036370926,-14.764020292972825,66.042902610231891,-18.298088092271396,-39.308912170637626,32.990895358151853,62.89063824289795,63.832223594846674,73.548170434536729,23.369867330524336,-33.423269837258871,-49.471093713228214,57.787572883481644,-6.3944547971056762,27.609746900234615,-33.345144233421365,-67.148025364878109,-9.8216505673214112,16.430152903330452,69.881271415428159,32.342494355407005,12.459509737590459,52.143456255505669,92.545683871572024,14.563142839870883,19.268386448036043,-40.176388603825735,15.125237924958729,-26.469184540588593,-28.903298805110389,-68.136199744837512,14.662235389575008,-38.967494664913154,36.839842387028582,-3.2649145742075634,11.26834927712745,-1.1270236908669768,10.362849664251558,-50.053410507882347,-65.154285145337724,54.471511736521776,-94.219925398890879,-52.941448246684367,10.674461497524931,36.818347699754852,19.734059705058652,-21.009446073984375,-25.048504134525967,19.734059705058652,17.334819410433866,-14.816673153541721,-103.68518282464237,-37.579891447067972,-20.013322990126767,-53.137738739420975,-1.2999696699374677,20.488463880679465,19.624062180705533,25.926337709543475,-8.0290267830609316,41.705660874022108,-37.965125435007145,33.750422898171195,2.9094296673915583,31.372523962332245,79.73010039079243,9.1371475006329419,14.138401008221114,-40.671158048060228,-98.017124468220416,28.468363454998535,51.454571232763072,9.5798489036038781,-47.35205233674882,-63.531482375668809,6.8094503470319081,-7.0932200715973277,-13.878878657811727,-10.773938902321538,-4.3456833262663084,-61.085569132423878,15.595618386848225,-19.22812476673846,13.898067782238181,20.824107375778745,20.824107375778745,5.030457892715992,57.066234078907144,-15.340381912181014,23.571653094991458,28.249117425958904,28.789627118957402,18.514074782688052,45.663894137626372,11.820800633533652,-8.6803139471554225,-13.84254033666889,10.235316038838977,-61.417990027996964,21.644461655130769,7.7664719295996232,5.9899084360588057,35.79322724878412,44.563566082920879,-54.957515816075478,-22.999997026998891,31.349019728142906,71.413172583681543,-65.742054965939488,9.067938981820225,5.2836373699291297,68.784538766445422,-52.945884414654167,-46.075957791167191,-17.562190070796529,58.660592242368523,46.892400755601052,-63.599551277988745,-54.33486753758671,42.590879397922016,-27.62862978590077,23.499512835841138,-7.4439739694983365,20.03248237603027,-22.701321801824211,46.008063166147572,-48.196321648504515,43.692339497258843,-79.448003284899599,-59.047893851761096,67.58439059145617,-45.622205000495931,-11.394464251968811,15.209204446066488,-61.414168741692613,59.334509749917089,-99.924455398200365,-26.25047263448516,63.066512798255069,-42.471744975726686,54.929997728532705,-35.670530604047066,-32.819313865483529,87.61029164969321,24.217592289047168,-82.77527819181816,29.916511256948386,7.743273240492349,-29.110214301761218,27.146225028066645,-26.581583077342732,-37.018333311775116,44.751557400812146,-54.244439633687207,4.747819596071988,46.884533151288124,0.86990249638315764,-21.798619311317374,33.273625229536663,14.175269618781968,35.089598509255481,-22.727864244233256,26.188813453991926,-39.855932014137835,2.9094296673915583,15.209204446066488,-27.208265594885177,-15.608831211459313,-63.957116166244745,17.821694884678134,26.530874061800169,-23.616127297817371,2.5844599072904848,40.381199418055239,19.515826015842659,84.095695894990158,25.009237776468947,-19.61393617298754,13.75887688375361,47.830569408627433,79.556384721221079,-16.569524418439418,-50.399062733944263,-47.171200533647976,-6.7298739427441721,-59.419635272747946,-0.8703948112826474,-15.027530092163202,-24.515903207649718,62.98800131506971,-25.565351693999137,66.547209478284103,12.927756542011428,-8.4437410129495234,15.472502331359179,10.4805144473297,75.949818048743708,-54.968583541200772,-7.8582497494507511,-29.241354565926823,-18.519469796844426,26.489337692995626,4.8060659332155975,-17.436321673321558,65.065715988867126,24.857757565189889,40.896762256121178,73.791849949093489,-17.436321673321558,8.4430684111326535,-6.9362628568273532,10.682361707536742,32.854454321704701,-34.342998688626281,8.7987392971814504,-6.8358106665046545,-8.1225845173523119,55.885677224111895,-64.461092614839828,47.55516724294062,40.442203589856469,-19.811153983540255,68.592460212563068,-32.223100281721273,2.3765327167420218,37.752449973642698,-50.545135362223888,-3.213507649717438,31.864147010748251,-29.263455902604314,58.677987366594643,7.7879349458534541,-4.473878618034691,-93.27398745832555,33.10679881915231,23.798823887979921,87.61029164969321,58.94074674913368,-31.293418445367156,14.138401008221114,42.381566850801406,43.754197659523605,15.208628369298198,-20.985540913472612,-49.12051406521536,-54.095821468037684,-36.326237775971045,-63.599551277988745,-7.3952404321178875,26.489337692995626,-2.7219160835038774,24.216064844231141,-31.369147578959087,73.127859848516579,-1.5843870109236431,-30.106330197319913,25.120703997094314,12.621525935443303,21.568823598381766,-1.5347323213442168,-29.21683964524707,36.976172512671326,-5.1373203229092166,-75.905634838142589,14.027377691909198,54.166508249344886,-99.924455398200365,-70.467212094151364,-62.676979169117587,30.360026802723638,-6.062217451535302,3.2413171304553616,8.1579361621957851,-80.822168373611035,8.7987392971814504,-32.032891804139787,27.852661083038797,53.967069844795674,10.400703410797092,29.371373803183417,31.372523962332245,-46.340511241458444,35.089598509255481,-44.345385768642679,0.74816674519001547,-3.8968513526595738,-2.7084451837028172,-38.215613480198918,-32.576438590231042,39.354833755307261,-45.324505428656281,82.32470313931249,-2.1689963404500152,16.167637659610453,40.941841515832834,23.737055501293732,54.471511736521776,-42.430273147854926,11.506003833827162,13.044596248868018,20.829311996259026,-6.6787298017821879,-6.4197305809216303,63.002747711202552,-13.748172424655637,13.260375576686997,25.88804203366897,-8.3776831434330958,-19.22812476673846,-31.293418445367156,80.292260361032973,-36.432569858401003,43.957178734223781,58.94074674913368,-30.137580712015708,-31.28865420082213,41.832600159985738,-33.626536208919234,-41.316731450486266,37.574529591494482,-11.212732813706438,58.94074674913368,13.087500800634402,-40.416959651446319,19.339625573151217,6.4196528858695912,76.357530323171119,-11.6582190377427,15.692516865727505,-32.576438590231042,-43.489339541640248,3.2966503362844479,9.612108221428441,-36.315664021920846,-27.677387872169398,-81.894720150301652,-42.669606039548761,-82.700732124736376,3.0894163984889245,22.254761843746245,83.353733858602325,72.154344575182321,-67.148025364878109,2.8760878404371226,23.435739728349436,-25.007200241505821,-47.895394606649127,108.82479893446674,-16.120064600878301,-44.67661787801844,-58.043881139885634,-52.603359642783211,-10.776916688343688,-36.432569858401003,21.913995274269702,92.545683871572024,-17.217821625447709,20.147876985770406,-54.271933241536942,-3.9209065140888253,-22.956519282040627,14.257483577479423,-33.423269837258871,52.029445821236948,25.931209974108508,-46.104147030989616,-82.700732124736376,47.386049866601191,20.03248237603027,-8.7059337703252897,34.963686812490067,16.52991941463646,20.03248237603027,73.127859848516579,-54.051316099830814,-7.6487017483515576,24.54197039941193,-36.073199768494092,84.373255143421304,-73.874173662086037,-103.68518282464237,31.5155176910108,-56.643292758467425,-13.888842305333869,-54.042991578719608,75.274811732504418,24.070640956493108,7.5645836888507727,9.7148108562666486,29.532833221233055,35.230002559226818,63.597347882688268,63.558463901637097,-74.390751017631231,-56.643292758467425,-10.229329136601729,60.206059315526673,-31.506800027783733,-25.56335399530046,-27.932868551905493,49.864737187839047,-37.172989051667038,24.54197039941193,-63.599551277988745,-57.040488063869908,-25.78584663494355,92.023771424924618,-49.235823761986211,-24.518204258985001,-35.689681927849961,-17.57687092002428,-32.375181703454231,-23.945009336158364,-55.779067510992,4.4347330821270461,65.628088201932513,-12.160204737082283,7.7213330850606967,31.386092508146426,-36.933350158753747,42.668518878853178,14.138401008221114,11.806602801991792,-57.583730208286106,7.9034812174233799,22.56238485315086,-63.531482375668809,-22.727864244233256,-99.924455398200365,36.40992469068506,10.156622269977726,4.547010782021772,-8.6813688443640569,-2.5162723517983117,-5.6428525903163331,-44.830306938558699,72.086493332392536,26.403878573488061,58.94074674913368,66.547209478284103,-8.4437410129495234,-103.68518282464237,3.1658196035098585,-19.801785981055197,-28.290395256816222,43.313893561076078,-36.432569858401003,2.3626574673745573,45.529214047761464,55.742283170290705,-24.124218440874287,-8.94151063908879,-25.699808458643524,41.23281337960357,-81.918443234007313,-27.0569364912635,15.472502331359179,11.806602801991792,78.83775793943741,14.257483577479423,31.311406443851386,42.031036333218935,-16.218308044489586,15.370707858381195,-56.848391673209875,-89.038979968059891,2.8760878404371226,-13.511193194196732,25.480732160824871,-8.4437410129495234,80.154537237645684,84.373255143421304,21.26723379500266,56.950981463798797,51.954056437174522,25.40878520481219,-42.669606039548761,-122.22582923913399,-61.748336229315825,-4.4278775644478854,28.53807441427184,51.493671803540735,-24.058147433168955,19.331810407725779,29.062108720010841,-98.246882263197477,-61.622961464025899,11.363463859787215,81.189391867990835,6.9369154816949816,42.497395166852165,-35.875692687977903,-9.1686099300281168,25.016296378319193,-81.937081506441444,-42.318340471035093,7.7483150989568079,21.775895971007408,-46.858557206079674,-31.791758051081793,16.755655297149815,71.773284343092442,14.774740430306736,0.22293024528417593,65.721093857680714,-56.643292758467425,-36.030666583702754,-3.2477574203478397,12.385301472972603,5.030457892715992,-2.1689963404500152,14.257483577479423,5.0860684257444468,34.292732977573337,-72.895898065444527,-23.186156181578426,-49.847600496331324,11.97279802611548,-18.893890927406442,-59.635171127047968,9.5798489036038781,-0.46591376828205466,-49.471093713228214,72.031722683596882,-37.026369394332939,-68.792774454573419,-33.878484187826203,10.403919225112967,-25.060036609164335,82.336810306040803,5.9729498437020885,-32.819313865483529,21.795640787431786,37.752449973642698,-14.500975415657306,-22.784848615659829,-46.533513789318491,-2.1473536966599513,45.316799115763693,20.828496834171677,-19.25397438505464,19.734059705058652,33.530059277866847,15.484111098684684,-94.219925398890879,-46.60356945039009,12.156410010737542,14.996573534156699,-5.6104410195136412,-56.913612207497422,10.4805144473297,-64.17290133358145,62.611772889989737,-74.390751017631231,-74.390751017631231,27.33309374979461,-61.726245603658512,-80.792512721609128,58.94074674913368,-2.9060765168463676,-82.77527819181816,-74.903459880275321,-33.344364824054459,-43.257820725580565,-17.264878128105362,-5.4977600527911639,52.827993914489397,28.9408139353928,26.215719569129231,31.543055545876808,-29.852707954959783,-23.589716840483327,23.416716754822062,32.509523885796355,45.045499255809744,-33.105337286629677,57.795304067082419,-19.017775304552764,51.774638898885939,-31.973665675932086,2.5223931972850187,78.132231526246045,20.04654626573598,-31.234550813192847,-16.334991617908482,-3.6646883131334373,18.945295735202016,-28.903298805110389,-40.833497751914116,8.0944848469756518,-9.4862392068347976,46.404998306626375,-78.139146785132596,11.42169486150738,-31.791758051081793,15.221752798779034,-37.298573010780238,40.592189645716708,30.607759525512627,20.859159757505033,-52.329963773604184,16.52991941463646,-24.419902122016367,9.9370513661466759,74.091086650772795,16.605357224231209,6.1909848577241329,-5.8157761016586811,69.318931670189841,27.529963239024593,27.609746900234615,-13.929428043581122,80.292260361032973,55.938317286238743,29.192580922849039,-29.259015563529765,-37.34928329527844,2.467151119878273,-24.536018175531993,31.142080131946873,47.602624555185663,-38.844931677936906,16.239024686457689,9.4644429865222168,10.910247566275672,-33.335615517864866,39.522232564129133,8.7987392971814504,-34.458682566937462,-46.858557206079674,1.3421197241871559,-13.011780237609823,37.954782279222407,24.188791167395589,-29.088428063048514,-51.188348711435864,-39.130110668179007,46.747556814050547,-8.4437410129495234,-51.999875181068958,-40.445818005913317,-72.695894260071213,40.918894288779569,-28.470434248268177,-12.998225997195878,51.311290420869106,-49.847600496331324,42.220848645045002,75.340508619330237,-34.556921743580091,-24.519543180437811,-28.785280612321234,-23.987059410766463,32.509523885796355,-25.494898106663893,7.9827205361027733,13.185302816865642,29.950399327731503,69.669004268949365,-62.222895510631218,39.803912490150758,63.558463901637097,11.219484116043823,14.6329301833052,25.420659118612964,-72.352677446319532,-10.776916688343688,14.898237811921121,18.561808658524956,49.968397410031443,-18.11739960424935,19.50593850203218,13.75887688375361,-82.111739096463182,-2.9060765168463676,-6.5917042247768602,-54.04472603240518,6.9369154816949816,60.807884469958005,9.1535413581546976,53.112843827249861,-1.5250201255066531,58.250634286593161,-8.4437410129495234,12.708840966782455,68.568577668215227,20.824107375778745,31.610860610448526,23.251629051665549,-48.567463499204145,51.862788648415837,58.94074674913368,-33.487995129296316,-24.912925665599552,-44.67661787801844,6.9967945606601578,95.764820717556887,-8.1192041242106896,27.875375739661187,-54.051316099830814,-10.853612158098796,-49.81578152152526,19.345035471868162,8.516073653032926,2.3891863340883788,-30.288762179579269,-45.430662838909676,33.679206018908758,-42.669606039548761,-18.356993126222424,-31.349393407403255,16.828000702497942,-13.637658823317514,-14.562095615889884,78.5884439860328,-2.1278004853758086,19.345035471868162,30.617447785884554,-11.710182646344519,-3.213507649717438,-4.3456833262663084,-1.0043271523257138,37.918666095222477,56.53296314985505,-108.06899769112476,46.892400755601052,12.617781688785177,76.491541009626616,27.283907692005478,-23.945009336158364,87.61029164969321,1.6905868582782564,-16.619837428480992,-29.80358361938017,-44.67661787801844,-2.5681094032192391,45.217073008984691,-33.021963903138634,-15.689313383806137,22.665363522070205,-81.419670849716482,-27.553228936089848,22.207260153571649,50.712679082021637,2.9644471964630119,17.03744286102129,-30.622920581268023,28.399880316705492,-11.693224496735203,-8.4437410129495234,-5.6428452005268968,-14.495832888219795,-18.216030651694332,-41.506238232199507,-75.854357562426515,5.2227162978954711,-6.0736656613620008,58.94074674913368,-38.844931677936906,-11.013163636766343,-0.31219497763294385,-57.844489138969593,-33.86662357308159,-51.999875181068958,10.059752770617745,85.051814948597894,-24.124218440874287,-71.278971163901701,-24.058147433168955,-47.530317261221974,-1.2316732099876071,-8.7059337703252897,-76.780105757776397,-83.835023263342748,42.555730573785404,-9.8051590030399591,10.389722853855403,-14.697272545750836,-74.486982457795804,3.3495072982087741,92.545683871572024,50.684182277212209,-25.060036609164335,-74.390751017631231,-23.387588410179333,8.0582076068093897,-108.06899769112476,1.5043661937159665,32.854454321704701,8.2215587863308528,-73.875361331111762,-16.975456830427248,23.421758613286521,-2.5162723517983117,-27.141022174376051,22.549774765859095,-45.131720453906333,30.866999128738307,33.116841009670395,-6.8924393595938005,-63.599551277988745,7.9827205361027733,11.820800633533652,-2.6992746349523977,-103.68518282464237,-23.687889880917236,42.001758758202513,25.016296378319193,82.656614450884874,14.49115538015953,-33.605330876350266,-12.094272504640911,15.207610262748723,-24.552159371902601,63.999824040855039,23.405637287707322,10.235316038838977,4.6681141159627435,47.287066177557861,10.371564056589804,8.8547031237640876,-60.991834367364262,14.212099376353873,-103.68518282464237,-1.5250201255066531,47.121487862204212,-14.179202714382269,4.7036742689207145,25.627518610916624,-13.183407162138518,5.6135082072616971,-19.914074063644613,45.599070667166423,41.506769645495829,-51.999875181068958,100.93179743217192,62.211732371468671,-56.48396506373367,16.060586940014876,-11.2092261877266,-5.8157761016586811,65.36989345758586,-34.14180331689105,20.488463880679465,45.663894137626372,-4.4059877286344333,9.5798489036038781,-40.582010196500299,-26.250969318153825,-15.212500598004947,18.918265808827382,10.403919225112967,42.880691829885414,-9.8578365993805495,-35.358814636375449,69.418295012153408,26.168469915045755,-21.4723087657236,2.9094296673915583,-80.4074596774756,-8.7059337703252897,-26.835208654186765,-12.094272504640911,-3.5957142064538923,45.490687407004074,28.699077623745374,19.509285204027798,-31.973665675932086,-10.808658726280573,9.067938981820225,24.857757565189889,-6.2584708386631887,40.381199418055239,-14.512635807371717,-25.060036609164335,15.981372433069435,14.138401008221114,45.317787973743421,60.715225812143835,-24.469236061149566,15.333029866881613,50.712679082021637,-22.191650415432296,6.9369154816949816,7.9222045936975318,47.499086335873294,-18.862096795193729,-45.556471308514496,-3.5651922243827761,20.824107375778745,-60.117309533665463,-6.2584708386631887,39.853679193144373,-28.487485804548434,10.235316038838977,-31.293418445367156,-22.032775093487967,-24.501561096031296,-70.111495776510537,43.725755911395154,19.345035471868158,-55.117730370382908,-78.139146785132596,69.318931670189841,49.339630930241739,25.458597771107193,-53.810812956727446,22.695846236146984,32.342494355407005,7.6322800024070094,-22.191650415432296,30.360026802723638,8.7987392971814504,-39.350275024869262,-15.608831211459313,16.417539087076584,19.811634949903745,108.51644635665845,14.567329077562325,-47.171200533647976,-22.727864244233256,-1.4396094697920074,-14.097452223368514,-32.706171319592727,-13.929428043581122,-31.293418445367156,-24.335396409904625,-57.844489138969593,24.857757565189889,70.004976883528229,52.299995800412233,2.5451710423397031,14.16358753882807,87.61029164969321,43.313893561076078,45.924736340080493,-81.918443234007313,-21.805039266166681,71.930569343291651,-63.599551277988745,-16.3440887133935,-53.171963959242106,34.824038526391554,-64.176798520682212,15.209204446066488,-35.18270510429133,-60.027700178291056,-16.619837428480992,5.7833707770130864,-63.599551277988745,-33.685375102031422,-17.203771325658476,-51.422000552095945,-2.1689963404500152,-17.217821625447709,-56.643292758467425,-21.009446073984375,82.133198848397299,-7.4439739694983365,13.570264555876884,-29.108879193390404,-69.284221021521518,-12.998225997195878,45.317787973743421,13.044596248868018,-2.9060765168463676,10.371564056589804,-36.332876020270781,-86.334283093441115,-49.89453421661689,-50.48017839791644,41.568090561924812,44.844081452241575,-37.498981064806124,-31.973665675932086,92.023771424924618,14.138401008221114,-75.905634838142589,14.982634592275218,26.215719569129231,-42.371850728117806,14.722683086279847,-19.61393617298754,69.318931670189841,57.903514406385646,73.127859848516579,-71.741799669233146,14.662235389575008,-17.843811397008288,-101.10958694450443,0.17110544378679132,-23.108532655513553,-2.2009056475491731,-23.217408716486364,52.029445821236948,-19.733238854680167,3.7812417156934184,-8.7059337703252897,29.153991181852447,-43.830581352240181,20.109222891579432,-51.857169196951169,-12.414509758016607,-2.5162723517983117,13.57154245414544,51.311290420869106,-36.8355790050026,87.139559064231364,23.421758613286521,18.418917587663302,-18.356993126222424,73.127859848516579,-14.697272545750836,86.554264435906504,2.0638066089742408,60.119119726143722,2.3765327167420218,42.991254079080903,-16.017796049538319,89.405065017405704,17.339262686947286,23.421758613286521,20.097199542957817,24.750218439036171,-13.929428043581122,-51.508657660911339,60.057555781689274,-64.394942675570277,13.551657833673566,13.260375576686997,-25.494898106663893,26.09861348382071,27.875375739661187,11.26834927712745,-62.668763930553837,26.03303720936508,-17.264878128105362,-19.017775304552764,-20.186851791928976,-19.39669409344177,-8.4437410129495234,-8.0290267830609316,-15.919342103941657,5.920199981247972,-70.467212094151364,-36.911958752227697,71.24116882170982,-35.627470445539579,-24.536018175531993,43.754197659523605,-21.419791114367307,-17.264878128105362,-30.622920581268023,-17.217821625447709,71.748994080377713,-42.669606039548761,-70.467212094151364,56.988340719509786,40.941841515832834,-14.583902034388723,-79.892246320381105,-100.89702517572677,3.1869332210945562,13.044596248868018,-81.937081506441444,-23.686599580013283,12.600842616225977,3.3893447799743353,76.633659489590499,-83.151209623755506,34.721425088570513,-57.583730208286106,20.147876985770406,86.554264435906504,-99.924455398200365,-11.6582190377427,10.389722853855403,7.7213330850606967,25.009237776468947,-72.364664683949016,-74.674687225884341,52.53147925568112,11.806602801991792,82.656614450884874,-6.0566186060139282,26.381264866969797,20.097199542957817,15.692516865727505,5.4064273519634511,47.499086335873294,18.450700906888915,-6.3944547971056762,-7.0264034340968422,2.1394826672027292,15.484111098684684,-100.89702517572677,-22.850382663102486,-80.792512721609128,19.734059705058652,9.9370513661466759,3.2413171304553616,5.2836373699291297,-24.774027544084152,58.94074674913368,12.708840966782455,17.03744286102129,6.1231686696217018,9.3057605287011551,5.3231802453975687,-11.188837749792521,31.18100746374397,5.1595930121820066,-9.8578365993805495,14.662235389575008,9.6894991207026973,15.040718784965319,28.9408139353928,-41.98997910114899,25.76035208876273,-34.996437677510023,44.387263929068546,21.795640787431786,-28.602007223526471,-98.414150820825171,34.726959769235201,-23.686599580013283,24.300350184082095,26.035523969645293,-13.952069414358325,-45.808178052808564,52.029445821236948,7.7012845751206953,-67.368255717802128,-16.204272498198375,-101.10958694450443,10.235316038838977,-29.088428063048514,4.0288546127460352,2.1394826672027292,54.030325009206713,72.657387910115716,-18.349643704373339,-2.9008577975488712,2.9154885995001729,31.904407370771299,-22.401952879721037,-2.1278004853758086,-6.4079212775068966,-40.118477082385667,30.069485684290978,-24.60587263744366,-19.61393617298754,-29.039454970776514,31.18100746374397,22.253548696351249,78.5884439860328,-17.450690820351848,18.676342372828127,-57.040488063869908,3.313548972350457,-12.160204737082283,64.541428292928515,14.138401008221114,19.509285204027798,35.180735780256555,13.582993986777671,52.143456255505669,14.662235389575008,-27.199184927833741,-41.428373811329372,8.2872460718667966,-46.2426144220723,-6.3944547971056762,5.4064273519634511,97.198172274701946,36.302810312243345,-21.009446073984375,55.742283170290705,-75.854357562426515,-2.0735202574160407,52.561498018673348,8.7520354137871834,63.702487568811058,-5.1925062401571669,-24.536018175531993,-61.622961464025899,-72.695894260071213,8.5651786400027952,47.830569408627433,-19.61393617298754,21.715920714466073,56.400928570332169,-29.088428063048514,-21.211867415632017,-23.385229318832433,8.8364598862514701,-3.213507649717438,23.744793697306228,31.372523962332245,-26.767009949860952,52.029445821236948,-75.414336088432009,-15.325436963530374,-51.188348711435864,43.828182666630617,55.296772864505648,-45.112133087010385,-19.61393617298754,-11.013163636766343,21.195106585617658,-41.520153122840718,63.558463901637097,9.2109936901273812,4.924129651850798,-19.834060245547882,69.398379458584287,-22.345192943665577,31.415815298627667,-25.145096713503495,-69.888211798009777,-31.87550392430844,-23.385229318832433,46.892400755601052,-8.4437410129495234,83.887447855365949,13.044596248868018,-72.149799332895057,-50.45601495635696,45.490687407004074,19.880254716371621,38.065089201203328,31.543055545876808,-15.780427506463329,7.2042221522290859,-50.8365063625658,9.2109936901273812,-23.385229318832433,-18.349643704373339,55.843207459038283,71.19127565861406,7.7012845751206953,-76.780105757776397,-46.858557206079674,-98.017124468220416,13.75887688375361,39.803093825997294,-2.5162723517983117,4.6681141159627435,-30.823792315233693,-80.792512721609128,19.345035471868162,-36.963571696078532,63.558463901637097,-51.999875181068958,-19.815700807619653,58.196693884489243,80.292260361032973,-78.017784953854644,94.638992063018421,-17.091349326303149,1.6905868582782564,-24.912925665599552,3.313548972350457,-55.091127181325859,-49.81578152152526,-76.249840619559819,60.115463732057478,-75.998351835433965,31.157960827563596,-44.44373506673427,-13.572144789104467,9.5903963449736853,3.2205193403937771,5.1595930121820066,-17.450690820351848,-28.903298805110389,20.097199542957817,-33.685375102031422,-14.260966746608879,9.9370513661466759,-41.990076368413945,-3.213507649717438,34.824038526391554,16.755655297149815,5.1921180956204012,-17.203771325658476,11.219484116043823,20.757829037470607,4.5438433127742197,84.373255143421304,7.7213330850606967,16.605357224231209,-28.487485804548434,-38.549285751412064,-4.3456833262663084,-75.854357562426515,66.042902610231891,-74.56609227176537,30.866999128738307,-74.903459880275321,-24.536018175531993,56.771646348068074,8.0695332080332633,38.651023686116609,-31.600126924991997,-98.017124468220416,26.837024919055033,-33.439178602912371,23.879579678937052,57.903514406385646,-13.878878657811727,11.219484116043823,8.0900082649058191,92.545683871572024,-31.32070342133856,-11.693224496735203,-11.188837749792521,-58.198961858720757,82.656614450884874,-49.12051406521536,14.138401008221114,55.938317286238743,-16.366945912436776,39.734995680651238,19.734059705058652,38.164228824466541,-17.264878128105362,108.29181969242127,-17.732884505254891,-12.998225997195878,-78.139146785132596,13.044596248868018,45.483175405111226,-20.578482031686892,17.03744286102129,49.107479462835506,-40.2547722943428,-16.387486384663351,-28.903298805110389,19.286144755358389,-2.9060765168463676,89.405065017405704,13.898067782238181,4.2298916471994268,-1.5447504682942683,11.820800633533652,46.609227009147702,23.879579678937052,15.38798012704471,-69.888211798009777,-13.878878657811727,-20.186851791928976,-70.467212094151364,-4.1142438606772638,-35.398351013761825,-7.1830752477302537,5.7833707770130864,11.219484116043823,6.3528330572598728,-7.2354548846624862,-8.1225845173523119,-40.833497751914116,-7.7920917226241455,31.904407370771299,13.044596248868018,48.260806270744943,-44.655322450164967,22.858333361831018,-98.017124468220416,-39.753091645688457,8.5651786400027952,-51.422000552095945,-69.888211798009777,31.171005994457829,-37.659972441637564,-23.217408716486364,33.204963563424286,-25.060036609164335,2.3765327167420218,-16.746514525615027,6.7525793220134318,10.151963712856228,36.196858365092787,-25.496914328748453,38.090555687453055,5.2836373699291297,-29.335961409056345,-26.422868540617518,-12.160204737082283,-28.535038833610574,28.933568123165905,31.140771688518665,-38.215613480198918,105.50151053853621,84.373255143421304,2.3891863340883788,9.5994572688850237,15.484111098684684,-24.515903207649718,33.735325308672401,-90.868478364516463,20.015705936078724,17.317089158174401,7.7213330850606967,-23.217408716486364,-29.039454970776514,20.03248237603027,-23.589716840483327,46.429159223897905,2.1394826672027292,-31.791758051081793,-24.883860424620156,39.734995680651238,-5.6428525903163331,113.68457775701637,34.824038526391554,49.17477982477152,-0.09520373465609,-0.65656046868130535,-46.529968566044758,10.057918768625312,7.9040500935897082,-34.826857517137761,-21.211867415632017,-40.48920746883752,47.183887301349102,33.94031234590225,-21.211867415632017,14.138401008221114,-49.12051406521536,-47.510349424581769,17.03744286102129,17.551480716021079,-7.4439739694983365,29.624283855408446,60.715225812143835,-13.255567713019163,3.0574981889288493,-55.779067510992,-7.1830752477302537,-8.7059337703252897,38.663274458445464,-39.802166698343342,-70.111495776510537,-65.084598305364111,15.981372433069435,33.204963563424286,86.711713684781031,-27.82028472171239,1.3421197241871559,29.624283855408446,25.627518610916624,73.127859848516579,17.58495215620286,23.421758613286521,8.1579361621957851,-70.612993673336561,14.662235389575008,42.668518878853178,-2.1278004853758086,52.029445821236948,-32.040154889175859,-61.624827838188494,89.405065017405704,15.430000838403274,13.044596248868018,-34.488298741392221,-57.583730208286106,20.399974992692609,-45.018183376400152,53.490338022567826,-49.465873317803258,-39.130110668179007,-24.47391805333217,-45.556471308514496,-8.0290267830609316,-54.095821468037684,37.222529056793952,20.015705936078724,18.945295735202016,-11.185682787287792,11.219484116043823,82.656614450884874,-47.171200533647976,-52.941448246684367,25.394975093783355,14.852187264232406,-70.111495776510537,-19.017775304552764,-55.117730370382908,-3.2453064376074008,-13.929428043581122,14.922241708092109,4.2800313428836354,18.945295735202016,-29.039454970776514,17.331911405511821,-38.215613480198918,-20.06986842681048,-49.12051406521536,-0.59538509166840492,31.18100746374397,-33.439178602912371,-23.133739457125003,13.044596248868018,-55.099034429815028,-31.973665675932086,11.806602801991792,18.977916376913072,69.318931670189841,10.403919225112967,13.044596248868018,2.5424325695318455,-47.223646713116793,-39.275149656820176,16.755655297149815,5.2227162978954711,-100.89702517572677,65.36989345758586,40.09779455379406,108.28091556218573,-36.073199768494092,65.105875842549366,-12.998225997195878,-25.060036609164335,-43.236030807751334,-5.8464434418597673,4.8060659332155975,0.22293024528417593,8.0900082649058191,-31.973665675932086,-46.780143154144859,23.421758613286521,19.331810407725779,-11.826659377726163,15.981372433069435,-122.22582923913399,-27.013258057150328,4.5368774625921571,-25.260158521901822,-42.371850728117806,-6.2584708386631887,-0.67635272185220574,-2.9060765168463676,-13.709901980312356,115.88697969103073,19.619558333658563,21.176479884397914,-45.112133087010385,8.0900082649058191,63.558463901637097,10.371564056589804,-17.436321673321558,6.666309185305157,3.1652205900810699,-25.060036609164335,44.635279988312973,-7.0932200715973277,68.784538766445422,37.954782279222407,8.3275789633345241,-38.215613480198918,-15.631759046935196,-40.328163758299553,8.5651786400027952,-59.325975047362732,54.471511736521776,13.02668616514821,23.320170539862055,0.17110544378679132,52.634241678255023,-52.115789016293213,40.251286534443523,49.968397410031443,-1.4396094697920074,-4.3456833262663084,-50.161483272542469,76.488035034895518,20.828496834171677,7.7213330850606967,-7.9820949696461145,-3.7953272129220643,20.824107375778745,-36.015385540368783,-38.215613480198918,-58.198961858720757,25.009237776468947,3.2829667383802055,-103.43668698985253,8.4760545559056943,-41.5665388245828,81.613420367577874,110.65075474042021,3.1318545489054674,-28.903298805110389,-28.535038833610574,45.64803526375362,-58.673415942087132,36.302810312243345,39.522232564129133,-78.139146785132596,-103.42905527942669,47.602624555185663,-48.72914061503257,72.6093197695116,-5.6263265937472839,-128.95953703290729,37.752449973642698,3.2413171304553616,-73.135515545980482,-17.13046108805478,-14.116386478130096,53.112843827249861,115.01669876469593,2.0638066089742408,-51.999875181068958,-14.795912021997239,-17.217821625447709,-41.506238232199507,87.61029164969321,-26.275991506244846,20.097199542957817,-25.260158521901822,-23.367751932588053,4.2298916471994268,45.317787973743421,-8.4437410129495234,25.611027034312322,26.311357258088343,-25.060036609164335,82.792453484798926,-40.949029640435505,17.914423274218159,7.419716063051947,15.575576750130832,8.1579361621957851,-70.111495776510537,20.03248237603027,-30.816733713383446,13.044596248868018,-60.882100865887807,23.694284463040461,6.635609615799269,-103.68518282464237,50.441286937413217,62.106741674155259,-58.198961858720757,-70.467212094151364,67.26524602142986,5.2836373699291297,-98.414150820825171,-4.3691485986465359,25.595613277614419,54.919088300627998,60.715225812143835,-8.5959250552895412,14.257483577479423,-11.282836795361671,66.042902610231891,-11.185682787287792,49.203765118723283,25.627518610916624,-31.459792532731505,-57.583730208286106,29.062108720010841,63.066512798255069,13.75887688375361,-6.6963127245029312,28.743394268963076,-26.275991506244846,14.993696597458255,-84.556725863311016,76.357530323171119,-44.749654290308058,82.799204620051583,45.881650640156352,42.668518878853178,-74.390751017631231,-17.450690820351848,-39.308912170637626,-2.1689963404500152,54.471511736521776,-72.003073213850897,75.194015998560502,22.826235262674373,-7.0823062237250234,-52.115789016293213,63.626899237116895,-38.215613480198918,-39.308912170637626,20.6574611811198,-74.390751017631231,-37.026369394332939,-2.1689963404500152,26.141547293597938,11.508698785714184,-30.137580712015708,15.221752798779034,-76.780105757776397,-44.67661787801844,28.699077623745374,5.2227162978954711,16.060586940014876,-13.3919234790828,15.529361684934312,-25.494898106663893,-74.56609227176537,-50.8365063625658,15.981372433069435,5.7833707770130864,-58.198961858720757,-35.113657243551025,-31.459792532731505,-51.079183123177145,-28.903298805110389,40.786929635069356,29.624283855408446,-81.937081506441444,27.469900116111752,-10.178541988352132,26.035523969645293,73.127859848516579,55.938317286238743,-64.103525262085668,5.2836373699291297,-2.7084451837028172,-5.6263265937472839,5.2227162978954711,-27.013258057150328,22.257432901307826,14.257483577479423,-32.576438590231042,-50.545135362223888,-6.3944547971056762,-7.3952404321178875,-0.19264148764847255,46.429159223897905,-56.211122651060208,24.750218439036171,4.5438433127742197,23.421758613286521,114.96919332315368,3.2413171304553616,-57.040488063869908,8.8500351796739114,14.662235389575008,24.857757565189889,-11.400139835382264,19.93183403270903,-74.903459880275321,7.7879349458534541,35.251079262846382,-70.3721169971043,-85.58481298704838,35.089598509255481,-14.116386478130096,19.345035471868162,97.924881875710085,19.509285204027798,-74.185178756935414,-23.180551180066598,-44.749654290308058,2.8760878404371226,32.854454321704701,-36.315664021920846,-12.998225997195878,-31.973665675932086,-0.46591376828205466,22.858333361831018,-63.111766046050043,20.902010460515697,76.357530323171119,76.357530323171119,-29.088428063048514,33.735325308672401,-76.321850981797112,19.331810407725779,10.245617445417434,57.903514406385646,-14.236136298390786,13.620886286802548,14.257483577479423,-28.239736654605398,9.7148108562666486,-77.78901229946365,-33.605330876350266,76.357530323171119,-58.777609487126021,-72.695894260071213,87.61029164969321,50.513314214991688,40.381199418055239,39.522232564129133,-17.450690820351848,5.0891461206448492,-69.888211798009777,-108.06899769112476,-56.198457811926879,-35.358814636375449,-76.780105757776397,26.805739220134047,-70.111495776510537,-40.233232937164267,47.602624555185663,-53.173977768466862,19.619558333658563,-44.570900194850012,45.097134179906476,27.912981208393859,34.723761597677985,-30.622920581268023,-22.920564755528293,-25.260158521901822,30.556680308110995,-65.084598305364111,55.641237896943601,-49.471093713228214,-15.608831211459313,-2.6992746349523977,-30.056823859034406,-77.78901229946365,24.750218439036171,-74.185178756935414,5.2836373699291297,6.3528330572598728,-71.741799669233146,15.221752798779034,66.547209478284103,15.221752798779034,-13.709901980312356,50.7837989901128,92.545683871572024,14.37115472971198,-4.5980284692010391,-52.115789016293213,-2.1689963404500152,80.292260361032973,-8.7059337703252897,-101.10958694450443,-2.5948677080485676,2.8760878404371226,-25.060036609164335,81.613420367577874,-25.260158521901822,-13.688292057162393,54.730386582892663,-44.655322450164967,115.01669876469593,109.31492616398593,-18.945194316799149,-41.399342186728227,2.1394826672027292,56.717076169294153,18.918265808827382,10.235316038838977,22.201276441790853,24.990199382443794,-76.780105757776397,22.929650136684941,11.087091196749988,68.568577668215227,-28.559513599818203,16.953161642834655,109.31492616398593,8.8523697909535652,-6.3944547971056762,47.598541363973332,7.4984559228076293,-80.30209030795703,8.0944848469756518,22.336570063242689,3.4264087057467982,33.735325308672401,-44.570900194850012,-66.240480317402813,30.947036129805777,2.9154885995001729,26.215719569129231,8.7987392971814504,-19.61393617298754,-15.780427506463329,-69.888211798009777,18.296709036069444,31.628717500260176,47.598541363973332,-44.67661787801844,25.76035208876273,14.257483577479423,2.0638066089742408,-81.937081506441444,-25.060036609164335,-98.957937723344102,-27.013258057150328,-122.22582923913399,28.699077623745374,-15.780427506463329,4.924129651850798,-78.088568527072113,31.610860610448526,33.735325308672401,-11.306751747266759,37.528825776269166,-12.160204737082283,-2.5162723517983117,42.668518878853178,58.94074674913368,-30.92692048154656,-3.2962933636670551,46.337316518715255,32.854454321704701,-24.124218440874287,-78.088568527072113,-49.81578152152526,10.371564056589804,43.127481101234928,25.262960551441235,-58.673415942087132,20.6574611811198,-74.903459880275321,-27.199184927833741,-9.2775594511512853,-13.511328080991603,45.317787973743421,29.624283855408446,20.488463880679465,39.734995680651238,-17.217821625447709,-29.088428063048514,4.924129651850798,8.1579361621957851,-70.467212094151364,-21.009446073984375,81.613420367577874,47.01264095450523,-32.576438590231042,3.0574981889288493,-14.065648350761263,45.599070667166423,46.892400755601052,-12.205035934574607,-13.929428043581122,9.9370513661466759,0.22293024528417593,20.03248237603027,54.471511736521776,-21.009446073984375,-11.693224496735203,-6.1598025416522013,-2.3171119257690118,-20.903621098460206,-44.749654290308058,-11.693224496735203,-22.920564755528293,-21.211867415632017,-17.357487598636229,-8.4437410129495234,-93.50279024633015,-71.741799669233146,30.607759525512627,27.875375739661187,43.127481101234928,-29.259015563529765,17.551480716021079,62.106741674155259,11.219484116043823,-15.689313383806137,73.127859848516579,25.868517305937825,-82.295586923330106,7.419716063051947,15.223567778820989,-29.272692446304045,49.968397410031443,-39.130110668179007,-10.329379528417405,-23.385229318832433,32.104731170480264,-23.872609416420193,-2.1689963404500152,-5.6428525903163331,-11.693224496735203,7.7879349458534541,34.963686812490067,-18.349643704373339,2.9094296673915583,8.0900082649058191,-15.919342103941657,1.5924694820802714,10.910247566275672,43.966134301056002,34.563229969919902,-55.091127181325859,-33.605330876350266,-7.4439739694983365,-11.188837749792521,81.613420367577874,-10.178541988352132,-7.3952404321178875,39.56862299501605,8.5651786400027952,20.355188474982597,-128.95953703290729,10.145299405770924,13.992126388417129,-49.465873317803258,73.127859848516579,31.607859026269225,17.146191456909698,15.208628369298198,93.267097819310237,-1.2396515708500224,17.03744286102129,-43.445204771042256,26.168469915045755,-11.693224496735203,-69.20268392436796,-89.038979968059891,-29.346461208694606,-17.217821625447709,29.062108720010841,47.602624555185663,20.355188474982597,-3.2453064376074008,-44.042152569995785,27.283907692005478,0.2868843541410655,9.9370513661466759,20.656710671273402,57.903514406385646,-44.345385768642679,5.2836373699291297,39.354833755307261,4.924129651850798,32.854454321704701,-13.011780237609823,2.3765327167420218,5.4064273519634511,23.659636178965791,-74.903459880275321,-13.511328080991603,-32.576438590231042,2.8760878404371226,30.866999128738307,11.219484116043823,40.09779455379406,-17.436321673321558,-37.659972441637564,11.806602801991792,76.357530323171119,-2.1278004853758086,2.9154885995001729,33.838280948881049,-45.808178052808564,-17.217821625447709,-56.211122651060208,14.257483577479423,7.9827205361027733,-56.643292758467425,-29.852707954959783,-45.131720453906333,-23.12872439516325,-56.643292758467425,6.9369154816949816,-0.09520373465609,-101.10958694450443,-17.646261109059697,72.6093197695116,-23.872609416420193,-59.047893851761096,-1.7031556164328499,57.903514406385646,15.221752798779034,15.842717044919947,66.461671351553207,-41.428373811329372,23.265093618314051,-11.185682787287792,-5.6263265937472839,43.127481101234928,-60.170337646116167,39.853679193144373,53.112843827249861,3.0574981889288493,115.6226558016529,16.755655297149815,-61.622961464025899,65.62224333377506,46.892400755601052,-58.198961858720757,-61.622961464025899,64.841978265543673,-5.6263265937472839,11.219484116043823,19.948755386330003,38.103309451399866,-14.813622812221494,40.941841515832834,-98.017124468220416,3.2413171304553616,2.1394826672027292,60.119119726143722,48.342601560270822,40.381199418055239,-75.905634838142589,-7.4633054348111054,54.899093186428992,45.599070667166423,-44.749654290308058,101.43331337306719,37.954782279222407,56.950981463798797,26.583521634571522,-36.315664021920846,25.868517305937825,-31.87550392430844,72.577064466115033,-67.55687400495782,-5.6428525903163331,-27.013258057150328,-6.9362628568273532,43.584618271255373,-74.016073587497004,2.9154885995001729,23.694284463040461,-30.664756725601471,14.138401008221114,18.918265808827382,-28.903298805110389,-10.877749317138617,63.832223594846674,6.9369154816949816,-41.428373811329372,-1.5250201255066531,96.481031818042638,-30.453931648127984,-2.7002830066452979,-69.888211798009777,19.811634949903745,-13.929428043581122,23.744793697306228,-74.390751017631231,2.0638066089742408,58.093999321927967,-58.224872248709403,11.619125663716723,5.2227162978954711,-22.401952879721037,1.7120734266228987,39.853679193144373,-45.808178052808564,0.2868843541410655,39.522232564129133,-31.32070342133856,-81.937081506441444,-13.709901980312356,96.481031818042638,40.941841515832834,39.853679193144373,-93.50279024633015,81.278364871078438,39.354833755307261,19.624062180705533,69.318931670189841,58.94074674913368,-13.878878657811727,-45.131720453906333,27.875375739661187,-28.559513599818203,2.8760878404371226,-0.40807083434797531,54.919088300627998,63.832223594846674,14.138401008221114,27.283907692005478,-13.929428043581122,11.920407588391397,9.7148108562666486,-35.358814636375449,-31.87550392430844,115.6226558016529,-15.142973309604653,-8.0290267830609316,17.58495215620286,-42.508876837472535,49.968397410031443,31.904407370771299,5.2836373699291297,4.6681141159627435,-31.293418445367156,31.610860610448526,81.613420367577874,-19.214220604636782,-8.4437410129495234,76.357530323171119,-74.390751017631231,28.699077623745374,15.33272397987127,-98.017124468220416,16.727957147925853,1.3382056389495851,-71.741799669233146,-78.088568527072113,26.035523969645293,-44.345385768642679,-36.168588931928184,81.613420367577874,24.857757565189889,-48.72914061503257,49.968397410031443,-30.056823859034406,54.471511736521776,-25.260158521901822,-23.295883307669779,-69.49811623382034,11.219484116043823,-2.5162723517983117,-70.972173367655145,-122.22582923913399,-42.669606039548761,4.6681141159627435,18.918265808827382,16.537625232250665,-69.888211798009777,92.389211034674574,-11.610088676298933,-13.929428043581122,76.357530323171119,23.384567730169486,14.257483577479423,-53.812566384845759,-35.367965110911832,-38.022446952458061,-49.81578152152526,71.748994080377713,-2.7084451837028172,3.1652205900810699,-41.399342186728227,-1.7031556164328499,42.668518878853178,5.0891461206448492,46.892400755601052,-100.89702517572677,-70.467212094151364,11.713638085260239,4.6681141159627435,-6.2757023331256647,80.154537237645684,-28.559513599818203,9.9370513661466759,10.371564056589804,-8.4437410129495234,-36.168588931928184,-108.06899769112476,46.764879567700362,-18.356993126222424,2.0638066089742408,-24.536018175531993,81.613420367577874,-39.275149656820176,7.9236733716039467,14.319103754521578,68.67719381979154,-19.193604120369901,-6.2584708386631887,36.302810312243345,-70.111495776510537,13.75887688375361,3.8525665629144497,-5.2322531577755882,-10.877749317138617,74.284413704563761,52.143456255505669,0.34930595957522642,-64.327740739566053,-13.011780237609823,-23.367751932588053,-128.95953703290729,-5.1373203229092166,34.563229969919902,47.121487862204212,123.14597778305406,11.219484116043823,45.031458521810961,-8.272004731102891,-41.506238232199507,-39.308912170637626,-23.651655873733063,-49.12051406521536,-58.224872248709403,23.265093618314051,17.317089158174401,48.247480895696519,26.168469915045755,-40.328163758299553,23.717208707159088,20.097199542957817,63.558463901637097,7.3348961765798739,5.920199981247972,14.922241708092109,14.922241708092109,-5.7033227140005334,53.943921576808904,46.764879567700362,64.841978265543673,31.864147010748251,54.471511736521776,-103.68518282464237,15.484111098684684,-56.643292758467425,-98.017124468220416,-12.998225997195878,-58.224872248709403,-101.10958694450443,-29.088428063048514,-14.065648350761263,-24.518204258985001,23.421758613286521,-44.345385768642679,26.168469915045755,-26.275991506244846,-49.12051406521536,-3.5751029825551943,25.220000130179947,-18.945194316799149,15.842717044919947,-100.89702517572677,-32.576438590231042,4.308057244023475,14.922241708092109,46.892400755601052,-18.945194316799149,8.8066531542625306,63.558463901637097,-78.139146785132596,-63.599551277988745,-78.139146785132596,17.551480716021079,23.744793697306228,62.106741674155259,25.220000130179947,32.780365574019946,58.94074674913368,76.357530323171119,-36.933350158753747,21.274116549825859,-10.178541988352132,9.9370513661466759,-29.80358361938017,-29.088428063048514,-21.211867415632017,-56.643292758467425,29.062108720010841,11.713638085260239,-39.308912170637626,48.232600312089865,-2.9060765168463676,9.9370513661466759,7.7879349458534541,-44.749654290308058,45.317787973743421,-4.3456833262663084,54.030325009206713,-3.213507649717438,-8.4437410129495234,57.67942421240555,6.666309185305157,23.421758613286521,45.663894137626372,20.6574611811198,29.624283855408446,20.03248237603027,7.9236733716039467,-17.436321673321558,-32.576438590231042,-50.653448742673106,-11.306751747266759,40.381199418055239,23.694284463040461,-43.236030807751334,-22.875422925067483,-29.088428063048514,37.057312007045297,8.8364598862514701,20.488463880679465,-17.436321673321558,-30.92692048154656,16.076385378958392,-98.957937723344102,77.338406119531797,23.744793697306228,-56.643292758467425,29.624283855408446,-32.140937424456418,-15.780427506463329,-61.622961464025899,49.968397410031443,-13.011780237609823,81.613420367577874,-13.191448143534862,-22.920564755528293,6.9369154816949816,8.3275789633345241,92.545683871572024,39.734995680651238,43.445773184005674,10.235316038838977,27.283907692005478,46.429159223897905,45.317787973743421,15.856999611699674,33.679206018908758,14.49115538015953,-44.345385768642679,-49.12051406521536,55.938317286238743,-56.643292758467425,47.01264095450523,-48.72914061503257,11.713638085260239,-41.399342186728227,-20.680466269422702,-4.0483263580424014,10.057918768625312,40.381199418055239,-67.148025364878109,-59.553021025938733,-7.4439739694983365,-24.418435151892933,8.0944848469756518,-2.4237256209091136,73.127859848516579,-49.471093713228214,-17.357487598636229,-49.471093713228214,-51.999875181068958,6.635609615799269,8.5651786400027952,66.461671351553207,-31.293418445367156,-70.3721169971043,8.0900082649058191,-45.556471308514496,-38.911329288550192,-49.12051406521536,30.039638696707122,19.781001473560725,47.287066177557861,20.902010460515697,1.7120734266228987,15.424438092201427,-24.058147433168955,-8.4437410129495234,-58.331336749129797,2.8760878404371226,-31.293418445367156,-13.048092209273488,-29.039454970776514,-23.589716840483327,-98.017124468220416,-6.3944547971056762,46.882050671409573,19.811634949903745,92.023771424924618,-82.295586923330106,-44.570900194850012,33.204963563424286,19.331810407725779,-33.844417985637584,12.838638819166801,16.076385378958392,17.58495215620286,87.61029164969321,-78.088568527072113,-41.399342186728227,-29.002025418573037,-7.0264034340968422,123.14597778305406,-31.505786348973814,86.711713684781031,38.164228824466541,-29.108879193390404,77.338406119531797,63.558463901637097,8.0944848469756518,27.37317347599252,8.0944848469756518,96.481031818042638,-35.113657243551025,29.034905097095809,-71.741799669233146,-61.622961464025899,47.602624555185663,-28.722395970625808,55.938317286238743,7.3348961765798739,56.583055026959322,6.635609615799269,78.5884439860328,33.372888639015507,46.429159223897905,28.024136383894756,54.471511736521776,-28.535038833610574,-80.822168373611035,-28.559513599818203,-78.139146785132596,84.373255143421304,-74.185178756935414,-2.1689963404500152,0.22293024528417593,-58.224872248709403,-37.506680782854467,9.067938981820225,44.480077515848933,15.842717044919947,44.80091159791575,-10.045315987932705,-5.7033227140005334,-55.572294449322072,-59.047893851761096,49.968397410031443,-103.43668698985253,-35.519627258552852,-6.2488006821679667,-31.293418445367156,46.429159223897905,-31.293418445367156,56.463031798576644,15.33272397987127,20.03248237603027,38.164228824466541,-47.223646713116793,52.029445821236948,17.551480716021079,37.752449973642698,5.0891461206448492,26.168469915045755,-42.997786561580511,81.278364871078438,1.7120734266228987,64.841978265543673,22.619450433769494,3.4264087057467982,26.141547293597938,2.8760878404371226,-19.914074063644613,-31.973665675932086,15.856999611699674,-27.013258057150328],\"marker\":{\"colorbar\":{\"title\":\"marker\",\"ticklen\":2},\"cmin\":0,\"cmax\":1.6094379124341003,\"colorscale\":[[\"0\",\"rgba(211,211,211,1)\"],[\"0.0416666666666667\",\"rgba(217,213,213,1)\"],[\"0.0833333333333333\",\"rgba(222,215,214,1)\"],[\"0.125\",\"rgba(228,217,216,1)\"],[\"0.166666666666667\",\"rgba(233,220,218,1)\"],[\"0.208333333333333\",\"rgba(239,222,220,1)\"],[\"0.25\",\"rgba(244,224,221,1)\"],[\"0.291666666666667\",\"rgba(250,226,223,1)\"],[\"0.333333333333333\",\"rgba(255,228,225,1)\"],[\"0.375\",\"rgba(255,208,197,1)\"],[\"0.416666666666667\",\"rgba(255,187,169,1)\"],[\"0.458333333333333\",\"rgba(255,166,142,1)\"],[\"0.5\",\"rgba(255,144,116,1)\"],[\"0.541666666666667\",\"rgba(255,121,90,1)\"],[\"0.583333333333333\",\"rgba(255,95,64,1)\"],[\"0.625\",\"rgba(255,65,37,1)\"],[\"0.666666666666667\",\"rgba(255,0,0,1)\"],[\"0.708333333333333\",\"rgba(240,0,1,1)\"],[\"0.75\",\"rgba(225,0,1,1)\"],[\"0.791666666666667\",\"rgba(210,0,2,1)\"],[\"0.833333333333333\",\"rgba(195,0,2,1)\"],[\"0.875\",\"rgba(181,0,2,1)\"],[\"0.916666666666667\",\"rgba(167,0,2,1)\"],[\"0.958333333333333\",\"rgba(153,0,1,1)\"],[\"1\",\"rgba(139,0,0,1)\"]],\"showscale\":false,\"color\":[0,0,0,0,0,0,0,0,0,0,0,1.3862943611198906,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.0986122886681098,0,0,0,1.0986122886681098,0,0.69314718055994529,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0.69314718055994529,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.3862943611198906,0,0,0,0,0,0,0,1.0986122886681098,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0.69314718055994529,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,1.3862943611198906,0,0,0,1.6094379124341003,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0.69314718055994529,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,1.0986122886681098,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.0986122886681098,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,1.6094379124341003,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0.69314718055994529,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,1.0986122886681098,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,1.0986122886681098,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,1.0986122886681098,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,1.0986122886681098,0,0,0.69314718055994529,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0.69314718055994529,0.69314718055994529],\"size\":2,\"line\":{\"colorbar\":{\"title\":\"\",\"ticklen\":2},\"cmin\":0,\"cmax\":1.6094379124341003,\"colorscale\":[[\"0\",\"rgba(211,211,211,1)\"],[\"0.0416666666666667\",\"rgba(217,213,213,1)\"],[\"0.0833333333333333\",\"rgba(222,215,214,1)\"],[\"0.125\",\"rgba(228,217,216,1)\"],[\"0.166666666666667\",\"rgba(233,220,218,1)\"],[\"0.208333333333333\",\"rgba(239,222,220,1)\"],[\"0.25\",\"rgba(244,224,221,1)\"],[\"0.291666666666667\",\"rgba(250,226,223,1)\"],[\"0.333333333333333\",\"rgba(255,228,225,1)\"],[\"0.375\",\"rgba(255,208,197,1)\"],[\"0.416666666666667\",\"rgba(255,187,169,1)\"],[\"0.458333333333333\",\"rgba(255,166,142,1)\"],[\"0.5\",\"rgba(255,144,116,1)\"],[\"0.541666666666667\",\"rgba(255,121,90,1)\"],[\"0.583333333333333\",\"rgba(255,95,64,1)\"],[\"0.625\",\"rgba(255,65,37,1)\"],[\"0.666666666666667\",\"rgba(255,0,0,1)\"],[\"0.708333333333333\",\"rgba(240,0,1,1)\"],[\"0.75\",\"rgba(225,0,1,1)\"],[\"0.791666666666667\",\"rgba(210,0,2,1)\"],[\"0.833333333333333\",\"rgba(195,0,2,1)\"],[\"0.875\",\"rgba(181,0,2,1)\"],[\"0.916666666666667\",\"rgba(167,0,2,1)\"],[\"0.958333333333333\",\"rgba(153,0,1,1)\"],[\"1\",\"rgba(139,0,0,1)\"]],\"showscale\":false,\"color\":[0,0,0,0,0,0,0,0,0,0,0,1.3862943611198906,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.0986122886681098,0,0,0,1.0986122886681098,0,0.69314718055994529,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0.69314718055994529,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.3862943611198906,0,0,0,0,0,0,0,1.0986122886681098,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0.69314718055994529,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,1.3862943611198906,0,0,0,1.6094379124341003,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0.69314718055994529,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,1.0986122886681098,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.0986122886681098,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,1.6094379124341003,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0.69314718055994529,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,1.0986122886681098,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,1.0986122886681098,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,1.0986122886681098,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,1.0986122886681098,0,0,0.69314718055994529,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.69314718055994529,0.69314718055994529,0.69314718055994529]}},\"mode\":\"markers\",\"type\":\"scatter3d\",\"frame\":null},{\"x\":[-218.45646454215341,216.70048933334695],\"y\":[-159.88480773892073,129.18606756298817],\"type\":\"scatter3d\",\"mode\":\"markers\",\"opacity\":0,\"hoverinfo\":\"none\",\"showlegend\":false,\"marker\":{\"colorbar\":{\"title\":\"marker\",\"ticklen\":2,\"len\":0.5,\"lenmode\":\"fraction\",\"y\":1,\"yanchor\":\"top\"},\"cmin\":0,\"cmax\":1.6094379124341003,\"colorscale\":[[\"0\",\"rgba(211,211,211,1)\"],[\"0.0416666666666667\",\"rgba(217,213,213,1)\"],[\"0.0833333333333333\",\"rgba(222,215,214,1)\"],[\"0.125\",\"rgba(228,217,216,1)\"],[\"0.166666666666667\",\"rgba(233,220,218,1)\"],[\"0.208333333333333\",\"rgba(239,222,220,1)\"],[\"0.25\",\"rgba(244,224,221,1)\"],[\"0.291666666666667\",\"rgba(250,226,223,1)\"],[\"0.333333333333333\",\"rgba(255,228,225,1)\"],[\"0.375\",\"rgba(255,208,197,1)\"],[\"0.416666666666667\",\"rgba(255,187,169,1)\"],[\"0.458333333333333\",\"rgba(255,166,142,1)\"],[\"0.5\",\"rgba(255,144,116,1)\"],[\"0.541666666666667\",\"rgba(255,121,90,1)\"],[\"0.583333333333333\",\"rgba(255,95,64,1)\"],[\"0.625\",\"rgba(255,65,37,1)\"],[\"0.666666666666667\",\"rgba(255,0,0,1)\"],[\"0.708333333333333\",\"rgba(240,0,1,1)\"],[\"0.75\",\"rgba(225,0,1,1)\"],[\"0.791666666666667\",\"rgba(210,0,2,1)\"],[\"0.833333333333333\",\"rgba(195,0,2,1)\"],[\"0.875\",\"rgba(181,0,2,1)\"],[\"0.916666666666667\",\"rgba(167,0,2,1)\"],[\"0.958333333333333\",\"rgba(153,0,1,1)\"],[\"1\",\"rgba(139,0,0,1)\"]],\"showscale\":true,\"color\":[0,1.6094379124341003],\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"z\":[-128.95953703290729,123.14597778305406],\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/PolarizationScores.html","id":null,"dir":"Reference","previous_headings":"","what":"PolarizationScores — PolarizationScores","title":"PolarizationScores — PolarizationScores","text":"Get set polarization scores CellGraphAssay, CellGraphAssay5 Seurat object","code":""},{"path":"/reference/PolarizationScores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PolarizationScores — PolarizationScores","text":"","code":"PolarizationScores(object, ...)  PolarizationScores(object, ...) <- value  # S3 method for MPXAssay PolarizationScores(object, ...)  # S3 method for MPXAssay PolarizationScores(object, ...) <- value  # S3 method for Seurat PolarizationScores(object, assay = NULL, meta_data_columns = NULL, ...)  # S3 method for Seurat PolarizationScores(object, assay = NULL, ...) <- value"},{"path":"/reference/PolarizationScores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PolarizationScores — PolarizationScores","text":"object object polarization scores ... implemented value tbl_df polarization scores assay Name CellGraphAssay meta_data_columns character vector meta.data column names. option can useful join meta.data columns polarization score table.","code":""},{"path":"/reference/PolarizationScores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PolarizationScores — PolarizationScores","text":"PolarizationScores: Polarization scores PolarizationScores<-: object polarization scores updated","code":""},{"path":[]},{"path":"/reference/PolarizationScoresToAssay.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert polarization score table to an Assay or Assay5 — PolarizationScoresToAssay","title":"Convert polarization score table to an Assay or Assay5 — PolarizationScoresToAssay","text":"Convert polarization score table Assay Assay5","code":""},{"path":"/reference/PolarizationScoresToAssay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert polarization score table to an Assay or Assay5 — PolarizationScoresToAssay","text":"","code":"PolarizationScoresToAssay(object, ...)  # S3 method for data.frame PolarizationScoresToAssay(object, values_from = c(\"morans_z\", \"morans_i\"), ...)  # S3 method for MPXAssay PolarizationScoresToAssay(object, values_from = c(\"morans_z\", \"morans_i\"), ...)  # S3 method for CellGraphAssay PolarizationScoresToAssay(object, values_from = c(\"morans_z\", \"morans_i\"), ...)  # S3 method for CellGraphAssay5 PolarizationScoresToAssay(object, values_from = c(\"morans_z\", \"morans_i\"), ...)  # S3 method for Seurat PolarizationScoresToAssay(   object,   assay = NULL,   new_assay = NULL,   values_from = c(\"morans_z\", \"morans_i\"),   ... )"},{"path":"/reference/PolarizationScoresToAssay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert polarization score table to an Assay or Assay5 — PolarizationScoresToAssay","text":"object object polarization scores ... yet implemented values_from column pick polarization scores . Either \"morans_i\" \"morans_z\" assay Name CellGraphAssay pull polarization scores new_assay Name Assay store polarization scores ","code":""},{"path":"/reference/PolarizationScoresToAssay.html","id":"behavior","dir":"Reference","previous_headings":"","what":"Behavior","title":"Convert polarization score table to an Assay or Assay5 — PolarizationScoresToAssay","text":"Takes object polarization scores long format returns object polarization scores wide format. polarization score table includes Moran's Z scores along p-values marker component. wide format array-like object dimensions markers x components, cell filled polarization score. Scores missing polarization score table replaced 0's. Different outputs returned depending input object type: tibble/data.frame: returns matrix markers rows components columns CelGraphAssay: returns Assay markers rows components columns Seurat object: returns Seurat object new Assay markers rows components columns many functions provided Seurat works Assay objects, sometimes convenient make conversion. instance, want compute UMAP polarization scores RunUMAP, need values formatted Assay. also makes possible use various visualization functions VlnPlot FeaturePlor show distribution polarization scores.","code":""},{"path":[]},{"path":"/reference/PolarizationScoresToAssay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert polarization score table to an Assay or Assay5 — PolarizationScoresToAssay","text":"","code":"library(pixelatorR) library(SeuratObject)  # Load example data as a Seurat object pxl_file <- system.file(\"extdata/five_cells\",   \"five_cells.pxl\",   package = \"pixelatorR\" ) pol_scores <- ReadMPX_polarization(pxl_file) #> ℹ Loading item(s) from: /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl #> →   Loading polarization data #> ✔ Returning a 'tbl_df' object  # PolarizationScoresToAssay returns a matrix for a tbl_df pol_scores_mat <- PolarizationScoresToAssay(pol_scores) pol_scores_mat[1:4, 1:5] #>       RCVCMP0000217 RCVCMP0000118 RCVCMP0000655 RCVCMP0000487 RCVCMP0000263 #> ACTB     -0.1335030    0.00000000    -0.2925391   -0.17816347    -0.1473378 #> B2M      -0.6759472    4.55113840     1.6401548   -3.14104176    -8.7973738 #> CD102    -0.8262732    0.03074864     0.3773469    0.03870055    -0.4982260 #> CD11a     0.1816744    0.07436839     0.8086415    0.30911581    -1.8365308  # Create a Seurat object seur <- ReadMPX_Seurat(pxl_file) #> ✔ Created a 'Seurat' object with 5 cells and 80 targeted surface proteins  # Fetch CellGraphAssay and create new polarization # scores Assay cg_assay <- seur[[\"mpxCells\"]] class(cg_assay) #> [1] \"CellGraphAssay\" #> attr(,\"package\") #> [1] \"pixelatorR\" pol_assay <- PolarizationScoresToAssay(cg_assay) class(pol_assay) #> [1] \"Assay\" #> attr(,\"package\") #> [1] \"SeuratObject\"  # Convert polarization scores within a Seurat object seur <- PolarizationScoresToAssay(seur)  # After conversion, we now have a new assay called \"polarization\" seur[[\"polarization\"]] #> Assay data with 80 features for 5 cells #> First 10 features: #>  ACTB, B2M, CD102, CD11a, CD11b, CD11c, CD127, CD137, CD14, CD150   # Switch default assay to polarization DefaultAssay(seur) <- \"polarization\"  # Visualize polarization scores with Seurat # VlnPlot(seur, features = \"CD19\") + #   labs(y = \"Polarization score\")"},{"path":"/reference/ReadMPX_Seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Load data from PXL file into a Seurat object — ReadMPX_Seurat","title":"Load data from PXL file into a Seurat object — ReadMPX_Seurat","text":"wrapper function can used load data PXL file, returns Seurat object.","code":""},{"path":"/reference/ReadMPX_Seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load data from PXL file into a Seurat object — ReadMPX_Seurat","text":"","code":"ReadMPX_Seurat(   filename,   assay = \"mpxCells\",   return_cellgraphassay = TRUE,   load_cell_graphs = FALSE,   load_polarity_scores = TRUE,   load_colocalization_scores = TRUE,   add_additional_assays = FALSE,   edgelist_outdir = NULL,   overwrite = FALSE,   verbose = TRUE,   ... )"},{"path":"/reference/ReadMPX_Seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load data from PXL file into a Seurat object — ReadMPX_Seurat","text":"filename Path .pxl file assay Assay name return_cellgraphassay data loaded CellGraphAssay object? load_cell_graphs cellgraphs loaded CellGraphAssay object? load_polarity_scores, load_colocalization_scores Logical specifying polarity colocalization scores loaded. parameters effect return_cellgraphassay = TRUE. add_additional_assays matrix representations stored PXL file, instance CLR-normalized counts denoised, set parameter TRUE load separate Assays. edgelist_outdir directory edgelist stored overwrite edgelist_outdir overwritten? verbose Print messages ... Additional parameters passed CreateSeuratObject","code":""},{"path":"/reference/ReadMPX_Seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load data from PXL file into a Seurat object — ReadMPX_Seurat","text":"object class Seurat","code":""},{"path":"/reference/ReadMPX_Seurat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load data from PXL file into a Seurat object — ReadMPX_Seurat","text":"default, MPX count matrix returned CellGraphAssay object. Graphs loaded directly unless load_cell_graphs = TRUE. Graphs can also loaded later stage LoadCellGraphs. setting global option Seurat.object.assay.version \"v5\", function return CellGraphAssay5 object instead.","code":""},{"path":[]},{"path":"/reference/ReadMPX_Seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load data from PXL file into a Seurat object — ReadMPX_Seurat","text":"","code":"library(pixelatorR)  # Load example data as a Seurat object pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\") seur_obj <- ReadMPX_Seurat(pxl_file) #> ✔ Created a 'Seurat' object with 5 cells and 80 targeted surface proteins seur_obj #> An object of class Seurat  #> 80 features across 5 samples within 1 assay  #> Active assay: mpxCells (80 features, 80 variable features) #>  2 layers present: counts, data"},{"path":"/reference/ReadMPX_arrow_edgelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Read edgelists from .pxl files — ReadMPX_arrow_edgelist","title":"Read edgelists from .pxl files — ReadMPX_arrow_edgelist","text":"function uses arrow read edgelists one several .pxl files. edgelists stored parquet files outdir directory can modified disk.","code":""},{"path":"/reference/ReadMPX_arrow_edgelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read edgelists from .pxl files — ReadMPX_arrow_edgelist","text":"","code":"ReadMPX_arrow_edgelist(pxl_file, edge_list_file = NULL, verbose = TRUE, ...)"},{"path":"/reference/ReadMPX_arrow_edgelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read edgelists from .pxl files — ReadMPX_arrow_edgelist","text":"pxl_file Path .pxl file edge_list_file Path output edgelist.parquet file verbose Print messages ... Parameters passed methods","code":""},{"path":"/reference/ReadMPX_arrow_edgelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read edgelists from .pxl files — ReadMPX_arrow_edgelist","text":"Nothing. edgelist saved parquet file set edge_list_file","code":""},{"path":"/reference/ReadMPX_arrow_edgelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read edgelists from .pxl files — ReadMPX_arrow_edgelist","text":"","code":"library(pixelatorR)  # Load example data pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\") edgelist_arrow <- ReadMPX_arrow_edgelist(pxl_file) #> ℹ Extracting edgelist.parquet file to /var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/RtmpYOju9G/edgelist.parquet #> ✔ Returning FileSystemDataset edgelist_arrow #> FileSystemDataset with 1 Parquet file #> upia: string #> upib: string #> marker: dictionary<values=string, indices=int32> #> count: int8 #> component: dictionary<values=string, indices=int32>"},{"path":"/reference/ReadMPX_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a count matrix from a pxl file — ReadMPX_counts","title":"Read a count matrix from a pxl file — ReadMPX_counts","text":"Read count matrix pxl file","code":""},{"path":"/reference/ReadMPX_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a count matrix from a pxl file — ReadMPX_counts","text":"","code":"ReadMPX_counts(filename, return_list = FALSE, verbose = TRUE)"},{"path":"/reference/ReadMPX_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a count matrix from a pxl file — ReadMPX_counts","text":"filename Path .pxl file return_list TRUE, returns list expression matrix output h5read verbose Print messages","code":""},{"path":"/reference/ReadMPX_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a count matrix from a pxl file — ReadMPX_counts","text":"count matrix list return_list = TRUE","code":""},{"path":"/reference/ReadMPX_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a count matrix from a pxl file — ReadMPX_counts","text":"","code":"library(pixelatorR)  # Load example data pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                          package = \"pixelatorR\") counts <- ReadMPX_counts(pxl_file) #> ℹ Loading count data from /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl counts[1:5, 1:5] #>       RCVCMP0000217 RCVCMP0000118 RCVCMP0000487 RCVCMP0000655 RCVCMP0000263 #> CD274            18             6             9            23            22 #> CD44            117            49           100           338           417 #> CD25             14             5            13             9            34 #> CD279            39             1             7             8             2 #> CD41              2            18            18             9             2"},{"path":"/reference/ReadMPX_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an MPX data item — ReadMPX_item","title":"Read an MPX data item — ReadMPX_item","text":"ReadMPX_item reads number items .pxl file. multiple items specified, output list  tbl_df objects. Otherwise output single tbl_df. ReadMPX_polarization, ReadMPX_colocalization ReadMPX_edgelist wrappers ReadMPX_item read specific items.","code":""},{"path":"/reference/ReadMPX_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an MPX data item — ReadMPX_item","text":"","code":"ReadMPX_item(   filename,   items = c(\"colocalization\", \"polarization\", \"edgelist\"),   verbose = TRUE )  ReadMPX_polarization(filename, verbose = TRUE)  ReadMPX_colocalization(filename, verbose = TRUE)  ReadMPX_edgelist(filename, verbose = TRUE)"},{"path":"/reference/ReadMPX_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an MPX data item — ReadMPX_item","text":"filename Path .pxl file items One several \"colocalization\", \"polarization\", \"edgelist\" verbose Print messages","code":""},{"path":"/reference/ReadMPX_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an MPX data item — ReadMPX_item","text":"Either object class tbl_df list tbl_df objects multiple items selected","code":""},{"path":[]},{"path":"/reference/ReadMPX_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read an MPX data item — ReadMPX_item","text":"","code":"library(pixelatorR)  # Load example data pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\") polarization <- ReadMPX_item(pxl_file, items = \"polarization\") #> ℹ Loading item(s) from: /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl #> →   Loading polarization data #> ✔ Returning a 'tbl_df' object polarization #> # A tibble: 380 × 6 #>    morans_i morans_p_value morans_p_adjusted morans_z marker component     #>       <dbl>          <dbl>             <dbl>    <dbl> <chr>  <chr>         #>  1 -0.00165          0.894             0.999   -0.134 ACTB   RCVCMP0000217 #>  2 -0.00734          0.499             0.999   -0.676 B2M    RCVCMP0000217 #>  3 -0.00850          0.409             0.999   -0.826 CD102  RCVCMP0000217 #>  4  0.00102          0.856             0.999    0.182 CD11a  RCVCMP0000217 #>  5 -0.00381          0.656             0.999   -0.445 CD11b  RCVCMP0000217 #>  6 -0.00493          0.631             0.999   -0.480 CD11c  RCVCMP0000217 #>  7 -0.00497          0.596             0.999   -0.530 CD127  RCVCMP0000217 #>  8 -0.00150          0.910             0.999   -0.113 CD137  RCVCMP0000217 #>  9 -0.00224          0.850             0.999   -0.190 CD14   RCVCMP0000217 #> 10 -0.00246          0.837             0.999   -0.205 CD150  RCVCMP0000217 #> # ℹ 370 more rows  # Alternative 2 polarization <- ReadMPX_polarization(pxl_file) #> ℹ Loading item(s) from: /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl #> →   Loading polarization data #> ✔ Returning a 'tbl_df' object"},{"path":"/reference/ReadMPX_layouts.html","id":null,"dir":"Reference","previous_headings":"","what":"Load pre-computed layouts from an PXL file — ReadMPX_layouts","title":"Load pre-computed layouts from an PXL file — ReadMPX_layouts","text":"Layouts can pre-computed Pixelator data processing pipeline stored hive-styled partitioning PXL file. function reads pre-computed layouts PXL file returns list. Use inspect_pxl_file check contents PXL file.","code":""},{"path":"/reference/ReadMPX_layouts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load pre-computed layouts from an PXL file — ReadMPX_layouts","text":"","code":"ReadMPX_layouts(   filename,   cells = NULL,   graph_projection = c(\"bipartite\", \"Anode\", \"linegraph\"),   verbose = TRUE )"},{"path":"/reference/ReadMPX_layouts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load pre-computed layouts from an PXL file — ReadMPX_layouts","text":"filename Path PXL file cells character vector component IDs. NULL, components loaded. graph_projection graph projection load. Default 'bipartite'. multiple projections present file, selected one loaded. verbose Print messages","code":""},{"path":"/reference/ReadMPX_layouts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load pre-computed layouts from an PXL file — ReadMPX_layouts","text":"list lists pre-computed layouts. top level, list split layout. second level, list split component. components sorted order appear PXL file.","code":""},{"path":"/reference/RemoveCellGraphs.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove CellGraphs — RemoveCellGraphs","title":"Remove CellGraphs — RemoveCellGraphs","text":"Clears CellGraph objects \"cellgraphs\" slot.","code":""},{"path":"/reference/RemoveCellGraphs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove CellGraphs — RemoveCellGraphs","text":"","code":"RemoveCellGraphs(object, ...)  # S3 method for MPXAssay RemoveCellGraphs(object, ...)  # S3 method for Seurat RemoveCellGraphs(object, assay = NULL, ...)"},{"path":"/reference/RemoveCellGraphs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove CellGraphs — RemoveCellGraphs","text":"object Seurat object CellGraphAssay object ... Parameters passed methods assay name target assay","code":""},{"path":"/reference/RemoveCellGraphs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove CellGraphs — RemoveCellGraphs","text":"object without CellGraphs","code":""},{"path":"/reference/RunDCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential analysis (colocalization) — RunDCA","title":"Differential analysis (colocalization) — RunDCA","text":"Runs differential analysis Moran's Z colocalization scores generated Pixelator data processing pipeline.","code":""},{"path":"/reference/RunDCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential analysis (colocalization) — RunDCA","text":"","code":"RunDCA(object, ...)  # S3 method for data.frame RunDCA(   object,   target,   reference,   contrast_column,   group_vars = NULL,   alternative = c(\"two.sided\", \"less\", \"greater\"),   conf_int = TRUE,   p_adjust_method = c(\"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BH\", \"BY\", \"fdr\"),   cl = NULL,   verbose = TRUE,   ... )  # S3 method for Seurat RunDCA(   object,   target,   reference,   contrast_column,   assay = NULL,   group_vars = NULL,   alternative = c(\"two.sided\", \"less\", \"greater\"),   conf_int = TRUE,   p_adjust_method = c(\"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BH\", \"BY\", \"fdr\"),   cl = NULL,   verbose = TRUE,   ... )"},{"path":"/reference/RunDCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential analysis (colocalization) — RunDCA","text":"object object containing colocalization scores ... yet implemented target name target group reference name reference group contrast_column name column group labels stored. column must include target reference. group_vars optional character vector column names group tests . alternative One 'two.sided', 'less' 'greater' (see ?wilcox.test details) conf_int confidence intervals computed? (see ?wilcox.test details) p_adjust_method One \"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BH\", \"\" \"fdr\". (see ?p.adjust details) cl cluster object created makeCluster, integer indicate number child-processes (integer values ignored Windows) parallel evaluations. See Details performance documentation pbapply. default NULL, means parallelization used. verbose Print messages assay Name assay use","code":""},{"path":"/reference/RunDCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential analysis (colocalization) — RunDCA","text":"tbl_df object test results","code":""},{"path":"/reference/RunDCA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential analysis (colocalization) — RunDCA","text":"working Seurat object containing CellGraphAssay, polarization scores accessed directly CellGraphAssay. character vector factor must selected contrast_column input data (@meta.data slot Seurat object) holds groups run test . target reference parameters refer names two groups used comparison names present contrast_column.","code":""},{"path":"/reference/RunDCA.html","id":"additional-groups","dir":"Reference","previous_headings":"","what":"Additional groups","title":"Differential analysis (colocalization) — RunDCA","text":"test always computed target reference, possible add additional grouping variables group_vars. group_vars used, test computed within combination groups. instance, annotated cells cell type populations across two conditions defined target reference, can pass name cell annotation column group_vars run test cell type.","code":""},{"path":[]},{"path":"/reference/RunDCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential analysis (colocalization) — RunDCA","text":"","code":"library(pixelatorR) library(dplyr)  pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\") # Seurat objects seur1 <- seur2 <- ReadMPX_Seurat(pxl_file) #> ✔ Created a 'Seurat' object with 5 cells and 80 targeted surface proteins seur1$sample <- \"Sample1\" seur2$sample <- \"Sample2\" seur_merged <- merge(seur1, seur2, add.cell.ids = c(\"A\", \"B\"))  # Subset data to run test on a few markers seur_merged <- subset(seur_merged,                       features = c(\"CD3\", \"CD4\", \"CD8\", \"CD19\",                                    \"CD20\", \"CD45RA\", \"CD45RO\"))  # Run DCA dca_markers <- RunDCA(seur_merged, contrast_column = \"sample\",                       target = \"Sample1\", reference = \"Sample2\") #> ℹ Splitting data by: marker_1, marker_2 #> ℹ Running 10 tests #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties dca_markers #> # A tibble: 10 × 15 #>      estimate data_type target  reference    n1    n2 statistic     p conf.low #>         <dbl> <chr>     <chr>   <chr>     <int> <int>     <dbl> <dbl>    <dbl> #>  1  0         pearson_z Sample1 Sample2       4     4       8       1   -10.8  #>  2  0         pearson_z Sample1 Sample2       5     5      12.5     1    -4.61 #>  3 -0.0000165 pearson_z Sample1 Sample2       5     5      12.5     1   -14.6  #>  4  0         pearson_z Sample1 Sample2       5     5      12.5     1   -11.2  #>  5  0         pearson_z Sample1 Sample2       4     4       8       1    -9.33 #>  6  0         pearson_z Sample1 Sample2       4     4       8       1   -12.7  #>  7  0         pearson_z Sample1 Sample2       4     4       8       1   -13.0  #>  8  0         pearson_z Sample1 Sample2       5     5      12.5     1   -14.7  #>  9  0         pearson_z Sample1 Sample2       5     5      12.5     1    -6.46 #> 10 -0.0000464 pearson_z Sample1 Sample2       5     5      12.5     1    -8.07 #> # ℹ 6 more variables: conf.high <dbl>, method <chr>, alternative <chr>, #> #   marker_1 <chr>, marker_2 <chr>, p_adj <dbl>"},{"path":"/reference/RunDPA.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential analysis (polarization) — RunDPA","title":"Differential analysis (polarization) — RunDPA","text":"Runs differential analysis Moran's Z polarization scores generated Pixelator data processing pipeline.","code":""},{"path":"/reference/RunDPA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential analysis (polarization) — RunDPA","text":"","code":"RunDPA(object, ...)  # S3 method for data.frame RunDPA(   object,   target,   reference,   contrast_column,   group_vars = NULL,   alternative = c(\"two.sided\", \"less\", \"greater\"),   conf_int = TRUE,   p_adjust_method = c(\"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BH\", \"BY\", \"fdr\"),   verbose = TRUE,   ... )  # S3 method for Seurat RunDPA(   object,   target,   reference,   contrast_column,   assay = NULL,   group_vars = NULL,   alternative = c(\"two.sided\", \"less\", \"greater\"),   conf_int = TRUE,   p_adjust_method = c(\"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BH\", \"BY\", \"fdr\"),   verbose = TRUE,   ... )"},{"path":"/reference/RunDPA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential analysis (polarization) — RunDPA","text":"object object containing polarization scores ... yet implemented target name target group reference name reference group contrast_column name column group labels stored. column must include target reference. group_vars optional character vector column names split tests . alternative One 'two.sided', 'less' 'greater' (see ?wilcox.test details) conf_int confidence intervals computed? (see ?wilcox.test details) p_adjust_method One \"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BH\", \"\" \"fdr\". (see ?p.adjust details) verbose Print messages assay Name assay use","code":""},{"path":"/reference/RunDPA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential analysis (polarization) — RunDPA","text":"tbl_df object test results","code":""},{"path":"/reference/RunDPA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential analysis (polarization) — RunDPA","text":"working Seurat object containing CellGraphAssay, polarization scores accessed directly CellGraphAssay. character vector factor must selected contrast_column input data (@meta.data slot Seurat object) holds groups run test . target reference parameters refer names two groups used comparison names present contrast_column.","code":""},{"path":"/reference/RunDPA.html","id":"additional-groups","dir":"Reference","previous_headings":"","what":"Additional groups","title":"Differential analysis (polarization) — RunDPA","text":"test always computed target reference, possible add additional grouping variables group_vars. group_vars used, test computed within combination groups. instance, annotated cells cell type populations across two conditions defined target reference, can pass name cell annotation column group_vars run test cell type.","code":""},{"path":[]},{"path":"/reference/RunDPA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential analysis (polarization) — RunDPA","text":"","code":"library(pixelatorR) library(dplyr)  pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\")  # Load polarization scores polarization_table1 <- polarization_table2 <- ReadMPX_polarization(pxl_file) #> ℹ Loading item(s) from: /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl #> →   Loading polarization data #> ✔ Returning a 'tbl_df' object polarization_table1$sample <- \"Sample1\" polarization_table2$sample <- \"Sample2\" polarization_table_merged <-  bind_rows(polarization_table1, polarization_table2)  # Run DPA using table as input dpa_markers <- RunDPA(polarization_table_merged, contrast_column = \"sample\",                       target = \"Sample1\", reference = \"Sample2\") #> ℹ Splitting data by: marker #> ℹ Running 80 tests #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties dpa_markers #> # A tibble: 80 × 14 #>      estimate data_type target  reference    n1    n2 statistic     p conf.low #>         <dbl> <chr>     <chr>   <chr>     <int> <int>     <dbl> <dbl>    <dbl> #>  1  0         morans_z  Sample1 Sample2       4     4       8       1   -0.159 #>  2  0         morans_z  Sample1 Sample2       5     5      12.5     1   -8.12  #>  3  0         morans_z  Sample1 Sample2       5     5      12.5     1   -0.865 #>  4 -0.0000610 morans_z  Sample1 Sample2       5     5      12.5     1   -2.02  #>  5  0         morans_z  Sample1 Sample2       4     4       8       1   -5.96  #>  6  0         morans_z  Sample1 Sample2       5     5      12.5     1   -9.02  #>  7  0.0000256 morans_z  Sample1 Sample2       5     5      12.5     1   -0.797 #>  8  0         morans_z  Sample1 Sample2       3     3       4.5     1   -0.677 #>  9  0         morans_z  Sample1 Sample2       5     5      12.5     1   -0.174 #> 10  0.0000178 morans_z  Sample1 Sample2       5     5      12.5     1   -0.820 #> # ℹ 70 more rows #> # ℹ 5 more variables: conf.high <dbl>, method <chr>, alternative <chr>, #> #   marker <chr>, p_adj <dbl>  # Seurat objects seur1 <- seur2 <- ReadMPX_Seurat(pxl_file) #> ✔ Created a 'Seurat' object with 5 cells and 80 targeted surface proteins seur1$sample <- \"Sample1\" seur2$sample <- \"Sample2\" seur_merged <- merge(seur1, seur2, add.cell.ids = c(\"A\", \"B\"))  # Run DPA dpa_markers <- RunDPA(seur_merged, contrast_column = \"sample\",                       target = \"Sample1\", reference = \"Sample2\") #> ℹ Splitting data by: marker #> ℹ Running 80 tests #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact confidence intervals with ties dpa_markers #> # A tibble: 80 × 14 #>      estimate data_type target  reference    n1    n2 statistic     p conf.low #>         <dbl> <chr>     <chr>   <chr>     <int> <int>     <dbl> <dbl>    <dbl> #>  1  0         morans_z  Sample1 Sample2       4     4       8       1   -0.159 #>  2  0         morans_z  Sample1 Sample2       5     5      12.5     1   -8.12  #>  3  0         morans_z  Sample1 Sample2       5     5      12.5     1   -0.865 #>  4 -0.0000610 morans_z  Sample1 Sample2       5     5      12.5     1   -2.02  #>  5  0         morans_z  Sample1 Sample2       4     4       8       1   -5.96  #>  6  0         morans_z  Sample1 Sample2       5     5      12.5     1   -9.02  #>  7  0.0000256 morans_z  Sample1 Sample2       5     5      12.5     1   -0.797 #>  8  0         morans_z  Sample1 Sample2       3     3       4.5     1   -0.677 #>  9  0         morans_z  Sample1 Sample2       5     5      12.5     1   -0.174 #> 10  0.0000178 morans_z  Sample1 Sample2       5     5      12.5     1   -0.820 #> # ℹ 70 more rows #> # ℹ 5 more variables: conf.high <dbl>, method <chr>, alternative <chr>, #> #   marker <chr>, p_adj <dbl>"},{"path":"/reference/TauPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot UMIs per UPIa for quality control — TauPlot","title":"Plot UMIs per UPIa for quality control — TauPlot","text":"Plot UMIs per UPIa quality control","code":""},{"path":"/reference/TauPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot UMIs per UPIa for quality control — TauPlot","text":"","code":"TauPlot(object, ...)  # S3 method for data.frame TauPlot(object, group_by = NULL, ...)  # S3 method for Seurat TauPlot(object, group_by = NULL, ...)"},{"path":"/reference/TauPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot UMIs per UPIa for quality control — TauPlot","text":"object data.frame-like object Seurat object umi_per_upia, tau tau_type values ... yet implemented group_by column object representing 'character' 'factor' group data ","code":""},{"path":"/reference/TauPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot UMIs per UPIa for quality control — TauPlot","text":"ggplot object","code":""},{"path":[]},{"path":"/reference/TauPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot UMIs per UPIa for quality control — TauPlot","text":"","code":"library(pixelatorR)  # Load example data as a Seurat object pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\") seur_obj <- ReadMPX_Seurat(pxl_file) #> ✔ Created a 'Seurat' object with 5 cells and 80 targeted surface proteins seur_obj #> An object of class Seurat  #> 80 features across 5 samples within 1 assay  #> Active assay: mpxCells (80 features, 80 variable features) #>  2 layers present: counts, data  # Plot with data.frame TauPlot(seur_obj[[]])   # Plot with Seurat object TauPlot(seur_obj)   # Group by sample in merged data seur_obj1 <- seur_obj2 <- seur_obj seur_obj1$sample <- \"1\" seur_obj2$sample <- \"2\" seur_obj_merged <- merge(seur_obj1, seur_obj2, add.cell.ids = c(\"A\", \"B\")) TauPlot(seur_obj_merged, group_by = \"sample\")"},{"path":"/reference/WriteMPX_pxl_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Seurat object data to a .pxl file — WriteMPX_pxl_file","title":"Export Seurat object data to a .pxl file — WriteMPX_pxl_file","text":"function exports essential data required create functional .pxl file. See details description data exported.","code":""},{"path":"/reference/WriteMPX_pxl_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Seurat object data to a .pxl file — WriteMPX_pxl_file","text":"","code":"WriteMPX_pxl_file(   object,   file,   assay = NULL,   export_layouts = FALSE,   overwrite = FALSE )"},{"path":"/reference/WriteMPX_pxl_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Seurat object data to a .pxl file — WriteMPX_pxl_file","text":"object Seurat object CellGraphAssay5 assay object created pixelatorR. file character string specifying path .pxl file created. assay character string specifying name CellGraphAssay5. set NULL default assay used. export_layouts logical value specifying whether export layouts Seurat object. set TRUE, component must layout. See LoadCellGraphs ComputeLayout details load graphs compute layouts. overwrite logical value specifying whether overwrite file already exists.","code":""},{"path":"/reference/WriteMPX_pxl_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Seurat object data to a .pxl file — WriteMPX_pxl_file","text":"Nothing. function writes .pxl file specified location.","code":""},{"path":"/reference/WriteMPX_pxl_file.html","id":"exported-data","dir":"Reference","previous_headings":"","what":"Exported data","title":"Export Seurat object data to a .pxl file — WriteMPX_pxl_file","text":"Count data metadata : raw count matrix component metadata Seurat object exported .h5ad file can read anndata Python library. Polarization scores : polarization scores exported .parquet file. Colocalization scores : colocalization scores exported .parquet file. Edgelist data : edgelist data first collected original .pxl file(s), filtered include components currently available Seurat object, component IDs updated. resulting merged edgelist data exported .parquet file. Sample meta data : sample meta data extracted original .pxl file(s), merged exported .json file. structure .pxl file detailed : |-- adata.h5ad |-- polarization.parquet |-- colocalization.parquet |-- metadata.json |-- edgelist.parquet merged files converted zip archive saved target .pxl file. NOTE: Factors currently supported. converted string arrays.","code":""},{"path":"/reference/WriteMPX_pxl_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export Seurat object data to a .pxl file — WriteMPX_pxl_file","text":"","code":"# Use Assay5 as the default assay version options(Seurat.object.assay.version = \"v5\")  # Create Seurat object pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\") se <- ReadMPX_Seurat(pxl_file) #> ✔ Created a 'Seurat' object with 5 cells and 80 targeted surface proteins  se_merged <- merge(se, list(se, se, se)) #> Warning: Some cell names are duplicated across objects provided. Renaming to enforce unique cell names. pxl_file <- fs::path_temp(\"small.pxl\")  # Export data to a new .pxl file WriteMPX_pxl_file(se_merged, pxl_file) #> ── Creating .pxl file ────────────────────────────────────────────────────────── #> → Writing spatial metrics to .parquet files... #> → Writing polarization scores to polarization.parquet #> → Writing colocalization scores to colocalization.parquet #> ✔ Exported spatial metrics #> → Collecting edge lists from 4 files #> → Extracting sample 1 edge list #> → Extracting sample 2 edge list #> → Extracting sample 3 edge list #> → Extracting sample 4 edge list #> →  Merging edge lists #> → Loaded sample 1 edge list #> → Loaded sample 2 edge list #> → Loaded sample 3 edge list #> → Loaded sample 4 edge list #> → Merging edge lists #> → Exporting merged edge list #> ✔ Exported merged edge list #> ✔ Exported merged meta data #> ✔ Exported anndata file #> ℹ Saving .pxl file to /var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/RtmpYOju9G/small.pxl #> ✔ Finished!  # Read the new .pxl file se_merged <- ReadMPX_Seurat(pxl_file) #> ✔ Created a 'Seurat' object with 20 cells and 80 targeted surface proteins  # Reset global option options(Seurat.object.assay.version = \"v3\")"},{"path":"/reference/as.CellGraphAssay.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to a CellGraphAssay — as.CellGraphAssay","title":"Convert objects to a CellGraphAssay — as.CellGraphAssay","text":"Convert objects CellGraphAssay","code":""},{"path":"/reference/as.CellGraphAssay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to a CellGraphAssay — as.CellGraphAssay","text":"","code":"as.CellGraphAssay(x, ...)  # S3 method for Assay as.CellGraphAssay(   x,   cellgraphs = NULL,   polarization = NULL,   colocalization = NULL,   fs_map = NULL,   ... )"},{"path":"/reference/as.CellGraphAssay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to a CellGraphAssay — as.CellGraphAssay","text":"x object convert class CellGraphAssay ... Arguments passed methods cellgraphs list CellGraph objects polarization tbl_df polarization scores colocalization tbl_df colocalization scores fs_map tbl_df information source pxl file paths, sample IDs, component IDs","code":""},{"path":"/reference/as.CellGraphAssay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert objects to a CellGraphAssay — as.CellGraphAssay","text":"CellGraphAssay object","code":""},{"path":"/reference/as.CellGraphAssay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert objects to a CellGraphAssay — as.CellGraphAssay","text":"","code":"library(pixelatorR) library(SeuratObject) library(dplyr) library(tidygraph)  pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\") counts <- ReadMPX_counts(pxl_file) #> ℹ Loading count data from /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl edgelist <- ReadMPX_item(pxl_file, items = \"edgelist\") #> ℹ Loading item(s) from: /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl #> →   Loading edgelist data #> ✔ Returning a 'tbl_df' object components <- colnames(counts) edgelist_split <-   edgelist %>%   select(upia, upib, component) %>%   distinct() %>%   group_by(component) %>%   group_split() %>%   setNames(nm = components)  # Convert data into a list of CellGraph objects bipartite_graphs <- lapply(edgelist_split, function(x) {   x <- x %>% as_tbl_graph(directed = FALSE)   x <- x %>% mutate(node_type = case_when(name %in% edgelist$upia ~ \"A\", TRUE ~ \"B\"))   attr(x, \"type\") <- \"bipartite\"   CreateCellGraphObject(cellgraph = x) })  # Create Assay assay <- CreateAssayObject(counts = counts)  # Convert Assay to CellGraphAssay cg_assay <- as.CellGraphAssay(assay, cellgraphs = bipartite_graphs) cg_assay #> CellGraphAssay data with 80 features for 5 cells #> First 10 features: #>  CD274, CD44, CD25, CD279, CD41, HLA-ABC, CD54, CD26, CD27, CD38  #> Loaded CellGraph objects: #>  5"},{"path":"/reference/as.CellGraphAssay5.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to a CellGraphAssay5 — as.CellGraphAssay5","title":"Convert objects to a CellGraphAssay5 — as.CellGraphAssay5","text":"Convert objects CellGraphAssay5","code":""},{"path":"/reference/as.CellGraphAssay5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to a CellGraphAssay5 — as.CellGraphAssay5","text":"","code":"as.CellGraphAssay5(x, ...)  # S3 method for Assay5 as.CellGraphAssay5(   x,   cellgraphs = NULL,   polarization = NULL,   colocalization = NULL,   fs_map = NULL,   ... )"},{"path":"/reference/as.CellGraphAssay5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to a CellGraphAssay5 — as.CellGraphAssay5","text":"x object convert class CellGraphAssay5 ... Arguments passed methods cellgraphs list CellGraph objects polarization tbl_df polarization scores colocalization tbl_df colocalization scores fs_map tbl_df information source pxl file paths, sample IDs, component IDs","code":""},{"path":"/reference/as.CellGraphAssay5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert objects to a CellGraphAssay5 — as.CellGraphAssay5","text":"CellGraphAssay5 object","code":""},{"path":"/reference/as.CellGraphAssay5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert objects to a CellGraphAssay5 — as.CellGraphAssay5","text":"","code":"library(pixelatorR) library(SeuratObject) library(dplyr) library(tidygraph)  pxl_file <- system.file(\"extdata/five_cells\",                         \"five_cells.pxl\",                         package = \"pixelatorR\") counts <- ReadMPX_counts(pxl_file) #> ℹ Loading count data from /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl edgelist <- ReadMPX_item(pxl_file, items = \"edgelist\") #> ℹ Loading item(s) from: /private/var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/Rtmpsnxf2c/temp_libpathc24924e2f723/pixelatorR/extdata/five_cells/five_cells.pxl #> →   Loading edgelist data #> ✔ Returning a 'tbl_df' object components <- colnames(counts) edgelist_split <-   edgelist %>%   select(upia, upib, component) %>%   distinct() %>%   group_by(component) %>%   group_split() %>%   setNames(nm = components)  # Convert data into a list of CellGraph objects bipartite_graphs <- lapply(edgelist_split, function(x) {   x <- x %>% as_tbl_graph(directed = FALSE)   x <- x %>% mutate(node_type = case_when(name %in% edgelist$upia ~ \"A\", TRUE ~ \"B\"))   attr(x, \"type\") <- \"bipartite\"   CreateCellGraphObject(cellgraph = x) })  # Create Assay5 assay5 <- CreateAssay5Object(counts = counts) #> Warning: Data is of class matrix. Coercing to dgCMatrix.  # Convert Assay5 to CellGraphAssay5 cg_assay <- as.CellGraphAssay5(assay5, cellgraphs = bipartite_graphs) cg_assay #> CellGraphAssay (v5) data with 80 features for 5 cells #> First 10 features: #>  CD274, CD44, CD25, CD279, CD41, HLA-ABC, CD54, CD26, CD27, CD38  #> Layers: #>  counts  #> Loaded CellGraph objects: #>  5"},{"path":"/reference/color_by_marker.html","id":null,"dir":"Reference","previous_headings":"","what":"Add node colors to a CellGraph — color_by_marker","title":"Add node colors to a CellGraph — color_by_marker","text":"Adds node colors based expression single multiple markers. multiple markers provided, values either multiplied summed depending mode.","code":""},{"path":"/reference/color_by_marker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add node colors to a CellGraph — color_by_marker","text":"","code":"color_by_marker(   cg,   markers,   smooth_counts = TRUE,   palette = \"viridis\",   rev_pal = FALSE,   mode = c(\"product\", \"sum\"),   normalize = TRUE,   trim_quantiles = c(0, 1),   nNodes = NULL )"},{"path":"/reference/color_by_marker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add node colors to a CellGraph — color_by_marker","text":"cg CellGraph object markers character vector valid marker IDs smooth_counts Applies neighborhood smoothing marker counts. node marker counts combined sum marker counts neighborhood length 1. palette valid color palette RColorBrewer viridis vector colors. rev_pal palette reversed? mode used 1 marker provided. mode = \"product\", marker counts multiplied mode = \"sum\", marker counts summed. step executed smoothing. normalize Apply normalization marker counts smoothing multiplication/summation step. values first divided node degree followed log-transformation log1p. trim_quantiles numeric vector length 2 specifying quantiles trim. can useful reduce influence outliers. specified quantiles calculated marker counts values prior normalization. (see section details) nNodes Number nodes keep graph","code":""},{"path":"/reference/color_by_marker.html","id":"trim-quantile","dir":"Reference","previous_headings":"","what":"Trim quantile","title":"Add node colors to a CellGraph — color_by_marker","text":"Sometimes, outliers can dominate makes colors difficult interpret. trim_quantiles, can remove outliers. setting upper bound 0.99, calculating 99th quantile marker count values values threshold replaced value 99th quantile. thing applies lower bound way around.","code":""},{"path":"/reference/edgelist_to_simple_bipart_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a simple bipartite graph from an edgelist — edgelist_to_simple_bipart_graph","title":"Create a simple bipartite graph from an edgelist — edgelist_to_simple_bipart_graph","text":"Create simple bipartite graph edgelist","code":""},{"path":"/reference/edgelist_to_simple_bipart_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a simple bipartite graph from an edgelist — edgelist_to_simple_bipart_graph","text":"","code":"edgelist_to_simple_bipart_graph(edgelist)"},{"path":"/reference/edgelist_to_simple_bipart_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a simple bipartite graph from an edgelist — edgelist_to_simple_bipart_graph","text":"edgelist object class tbl_graph","code":""},{"path":"/reference/edgelist_to_simple_bipart_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a simple bipartite graph from an edgelist — edgelist_to_simple_bipart_graph","text":"object class tbl_graph containing bipartite graph","code":""},{"path":"/reference/graph-conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"A-node projection — edgelist_to_simple_Anode_graph","title":"A-node projection — edgelist_to_simple_Anode_graph","text":"function create node projection graph edgelist representing bipartite graph.","code":""},{"path":"/reference/graph-conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A-node projection — edgelist_to_simple_Anode_graph","text":"","code":"edgelist_to_simple_Anode_graph(object, ...)  # S3 method for data.frame edgelist_to_simple_Anode_graph(   object,   components = NULL,   cl = NULL,   verbose = TRUE,   ... )  # S3 method for FileSystemDataset edgelist_to_simple_Anode_graph(object, components = NULL, verbose = TRUE, ...)"},{"path":"/reference/graph-conversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A-node projection — edgelist_to_simple_Anode_graph","text":"object object containing edgelist ... yet implemented components Components compute node projection cl cluster object created makeCluster, integer indicate number child-processes (integer values ignored Windows) parallel evaluations. See Details performance documentation pbapply. default NULL, means parallelization used. verbose Print messages","code":""},{"path":"/reference/graph-conversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A-node projection — edgelist_to_simple_Anode_graph","text":"-node-projected graph","code":""},{"path":"/reference/graph-conversion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A-node projection — edgelist_to_simple_Anode_graph","text":"","code":"library(pixelatorR) library(tibble)  pxl_file <- system.file(\"extdata/five_cells\", \"five_cells.pxl\", package = \"pixelatorR\")  # Load edgelist el <- ReadMPX_arrow_edgelist(pxl_file) #> ℹ Extracting edgelist.parquet file to /var/folders/gw/bdcqhnvs0m9gs_mq8n51jtbc0000gn/T/RtmpYOju9G/edgelist.parquet #> ✔ Returning FileSystemDataset  # Convert to tbl_df el_tbl_df <- as_tibble(el)  # data.frame method -------------------------------- # Create list of A-node projected tbl_graphs anode_proj <- edgelist_to_simple_Anode_graph(el_tbl_df) #> ℹ Simplifying edge list #> ℹ Creating A-node projected graphs #> ✔ Returning an A-node projected graphs  # FileSystemDataset method ------------------------- # Create list of A-node projected tbl_graphs anode_proj <- edgelist_to_simple_Anode_graph(el) #> ℹ Simplifying edge list #> ℹ Creating A-node projected graphs #> ✔ Returning an A-node projected graphs"},{"path":"/reference/inspect_pxl_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect a PXL file — inspect_pxl_file","title":"Inspect a PXL file — inspect_pxl_file","text":"function inspects PXL file returns tibble information files contained PXL file.","code":""},{"path":"/reference/inspect_pxl_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect a PXL file — inspect_pxl_file","text":"","code":"inspect_pxl_file(pxl_file)"},{"path":"/reference/inspect_pxl_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect a PXL file — inspect_pxl_file","text":"pxl_file Path PXL file","code":""},{"path":"/reference/inspect_pxl_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect a PXL file — inspect_pxl_file","text":"tibble information files contained PXL file","code":""},{"path":"/reference/inspect_pxl_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inspect a PXL file — inspect_pxl_file","text":"","code":"pxl_file <- system.file(\"extdata/five_cells\",   \"five_cells.pxl\",   package = \"pixelatorR\" )  inspect_pxl_file(pxl_file) #> # A tibble: 5 × 3 #>   file_type                  n file      #>   <chr>                  <int> <list>    #> 1 adata.h5ad                 1 <chr [1]> #> 2 edgelist.parquet           1 <chr [1]> #> 3 metadata.json              1 <chr [1]> #> 4 polarization.parquet       1 <chr [1]> #> 5 colocalization.parquet     1 <chr [1]>"},{"path":"/reference/layout_coordinates_utils.html","id":null,"dir":"Reference","previous_headings":"","what":"Layout Coordinates Utility Functions — layout coordinates utils","title":"Layout Coordinates Utility Functions — layout coordinates utils","text":"Utility function used manipulate layout coordinates. functions always returns tbl_df object.","code":""},{"path":"/reference/layout_coordinates_utils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layout Coordinates Utility Functions — layout coordinates utils","text":"","code":"center_layout_coordinates(layout)  normalize_layout_coordinates(layout)  project_layout_coordinates_on_unit_sphere(layout)"},{"path":"/reference/layout_coordinates_utils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layout Coordinates Utility Functions — layout coordinates utils","text":"layout matrix-like object layout coordinates","code":""},{"path":"/reference/layout_coordinates_utils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layout Coordinates Utility Functions — layout coordinates utils","text":"tbl_df object adjusted layout coordinates","code":""},{"path":"/reference/layout_coordinates_utils.html","id":"center-layout-coordinates","dir":"Reference","previous_headings":"","what":"Center Layout Coordinates","title":"Layout Coordinates Utility Functions — layout coordinates utils","text":"Centers axis layout coordinates around means.","code":""},{"path":"/reference/layout_coordinates_utils.html","id":"normalize-layout-coordinates","dir":"Reference","previous_headings":"","what":"Normalize Layout Coordinates","title":"Layout Coordinates Utility Functions — layout coordinates utils","text":"Centers axis layout coordinates around mean adjusts point coordinate median length (euclidean norm) 1.","code":""},{"path":"/reference/layout_coordinates_utils.html","id":"project-layout-coordinates-on-a-unit-sphere","dir":"Reference","previous_headings":"","what":"Project Layout Coordinates on a Unit Sphere","title":"Layout Coordinates Utility Functions — layout coordinates utils","text":"Centers axis layout coordinates around mean adjusts coordinate lengths (euclidean norm) 1. function accepts layouts 3 dimensions.","code":""},{"path":"/reference/layout_coordinates_utils.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layout Coordinates Utility Functions — layout coordinates utils","text":"","code":"library(dplyr) library(tibble)  # Generate random points that are offset to (100, 100, 100) xyz <- matrix(rnorm(600, mean = 100, sd = 20), ncol = 3,               dimnames = list(NULL, c(\"x\", \"y\", \"z\"))) %>%   as_tibble()  # Visualize random points plotly::plot_ly(data = xyz, x = ~x, y = ~y, z = ~z,                 type = \"scatter3d\", mode = \"markers\")  {\"x\":{\"visdat\":{\"ce3b57abc857\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"ce3b57abc857\",\"attrs\":{\"ce3b57abc857\":{\"x\":{},\"y\":{},\"z\":{},\"mode\":\"markers\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"x\"},\"yaxis\":{\"title\":\"y\"},\"zaxis\":{\"title\":\"z\"}},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[125.4485864285881,108.29282868912816,69.200999161925807,81.428659305729241,94.1055910641888,99.884656545049268,148.09306777715904,115.27186922280919,84.019815020212633,77.046859815272967,94.21076852623554,94.015697642053681,91.769783344098656,105.04446896312264,82.161577454308627,108.71366598711437,75.249231561400833,95.514642294433813,107.54791291963402,102.66672721629683,116.08379019489816,98.857864512323829,110.07215944467453,121.71538724291374,86.180923206063397,74.30801292255623,100.93452344376703,95.285868871209971,89.142234899794914,91.333793650864351,87.010567064075332,114.53501494770902,123.03823508174401,119.84320730891596,91.409737810162369,124.7660820170676,94.413074362914614,135.15806179621416,111.21492181776112,90.944320548936844,83.359134077643361,76.668589058305855,78.688188392234082,68.7243589785799,123.13073994300359,116.64094257144779,95.453426171504887,105.3227472334421,92.465945628327432,148.8272925778918,84.09321765489257,98.90245052576843,105.00282645708306,112.36486587132494,96.54752994708285,55.521994519801254,74.727712300588337,107.17457791942704,99.779090430686722,81.187016747627837,97.68349355686091,83.700625822601651,104.84526961719372,71.498032105350006,107.31882246098439,104.96825297745193,101.30576363343242,100.38312783320548,105.14676754311067,87.019798445822047,97.616624751639236,113.28271399788221,122.01938204388173,102.87542961516139,97.64492803668098,81.758632661033246,71.248275183400423,84.0582094985607,125.08166212899943,115.44284371609061,95.609687464931213,91.503794332454262,91.620398011560823,119.93973721818212,94.484439418239461,125.120376346122,112.93348780990689,125.98624605126862,82.534757765111294,100.16741919992067,82.382565534949109,111.92518033221319,102.39435282579073,94.356522453550966,129.11976802132685,104.58039181389384,119.93087857088253,115.63718369200517,84.464467564708073,87.680201845841637,100.93160605609994,77.392284447986157,111.53437563792973,74.38501136423352,132.50894606929887,89.986068079945909,133.56594415632586,91.749602250352041,80.554263289888809,100.50765735175611,100.54950671693611,66.396345552081343,121.07501726057234,77.608017908556405,106.7123441993763,109.89591534226317,102.76105417423473,97.62415948442343,103.9536852469159,78.626145774904273,83.935735652705191,77.724697273609365,131.60183367407672,129.95637522076828,105.25290917325525,75.341976008574704,99.925529324156386,130.23344565621784,90.486034311409327,115.95832875062159,80.519948777749462,113.78745395530947,80.883217934464042,75.365858831718072,80.862162373487621,82.604342526270131,81.786386350134222,114.82552610520416,101.37023066554289,93.524984908240768,78.269939060126049,79.68142106290216,84.64419630538282,77.60559877746033,91.036515267932089,109.4347274890646,76.390186342314465,129.40513994165971,73.771588167502358,98.069501544740362,147.39439815902688,117.81252952874843,94.956336772181061,82.684724903114756,111.65171999772886,99.749413060085672,92.502904757722106,106.35771470184946,90.22388730326756,153.17316053996933,133.60556409379097,115.59168018151706,114.26481040225642,89.142361257761365,117.71556747801864,93.028106309784931,79.838908436609231,137.66365084765192,81.420578415976493,94.116070927861742,87.700994584072902,81.058484165179621,111.97950299620626,69.527702352448927,95.876219957654286,88.514091713971879,72.196679267298421,98.591652349856901,91.382409407918317,88.155492540768236,119.62232319813231,110.64818713341012,98.190877515180105,103.1298098339218,85.253766183200611,95.97317588255639,122.04353190147387,99.665034876962508,103.23577267114484,140.49522780155471,85.926114922025249,119.21584767901054,135.80970107075632,78.716696733331474,100.35273092849204,92.201827413882995,90.183344952668961,79.085646964265152,82.075774720788417,125.38774327214084],\"y\":[111.87681897195006,115.51268637767008,131.14740752689943,92.691964062322199,116.33112897496251,98.787304437588944,89.972433644098217,118.5212545066604,100.73875381684336,78.675996529739649,95.230872934418755,129.90446887686454,123.44317093978944,70.84585579755236,101.90112453977287,116.95329927192051,67.512709404788225,128.17126713667926,89.164792757977736,105.5732944821271,96.120545106594065,131.52316362437469,70.489047294789543,97.107835853789183,80.935937096352177,108.13085463889853,144.58524403281822,69.710059834993359,98.765851559759241,97.054584199220685,130.83186137653914,80.362886623922591,109.93156345323399,133.93895761446169,94.785273828637543,85.881428286646752,96.776429876553081,110.02643655447454,79.72920659010417,132.29504470936257,100.11283969704991,41.902018793088551,77.856703620625012,130.95133865236542,80.463392993065625,97.969931047365492,100.85300499593396,68.065639714056061,109.81934745194118,108.43206730769506,137.47807797190603,120.69028647888669,101.63620620708028,98.349524759656717,112.12146861724202,82.251597093658049,102.1084278038753,107.05748946636953,111.00786716910105,77.313380629663115,129.24703077492853,114.04233421335147,150.14222296966736,62.199457127519523,88.203744196176572,65.709954063083501,91.580042043666069,106.20282753009374,134.05141172028991,91.132303912721468,76.028058333638285,93.852381715490026,112.42108405476363,103.63804382808549,126.36801862384939,94.021813731386757,67.035565156823424,119.02996939251005,77.737540937971815,112.33932951378165,110.2698743297084,107.38918207462051,134.47788261211861,95.877108667215808,73.716097201999929,101.26948192551733,95.360450976667664,112.70120655182896,132.69288570967453,63.833448412901951,95.722280970073768,101.40732282570295,110.99415339172502,86.063529079713277,107.81131884740418,107.62822518198965,99.75254460432518,97.51130027158888,129.33489186374493,113.47857352875145,139.12850526491678,94.619179753949894,75.108969632947037,92.085941549913926,101.94793309178843,95.232260998804648,91.763440869002096,68.455639022103526,84.054477975355425,78.075264343868753,106.1661749733827,106.89590247326043,130.79296175037592,93.409716152236427,118.96778701484143,90.414888264372067,69.702264099968048,108.69073311739322,89.609266659689212,83.308819339618765,84.867047812933222,121.79006990404605,131.4486583495829,120.14728731299095,94.536840138486838,73.806409166004258,104.45147661719787,122.26866367600033,116.74788794733772,106.29033536641953,104.44436144283655,83.12769220158215,108.87610651275797,101.11594221858888,101.3594477904393,95.960765152894098,76.839694919151498,88.145134589048411,115.32130768008008,100.77856233304252,100.29293624950357,96.273660638969375,128.01181654571991,100.36971140227713,104.98392023300936,102.98441471348278,80.735336390925355,98.670664518449826,125.73844082264861,109.16250518809332,70.959434197076945,101.54684553844663,111.19790545954851,98.501068600814307,115.65395395527283,96.546628721075962,78.974124432047063,114.58902557586666,105.25330485381532,110.87315718306992,120.82120596601359,103.95012307404436,67.40843425364011,102.42080464762297,67.25156095696326,89.379137879969207,119.07359583943652,65.586986758456277,102.12641239718265,87.826630068376502,93.976060347606605,119.5240504935484,109.12017338744155,125.8881613483143,77.335955877197648,82.610792984111043,84.900594162795514,97.407292994581738,79.963973290464537,83.602634414574098,80.508950625711407,112.08618817422968,110.97575176356666,118.32865313675539,153.23132733306488,96.39485869115326,113.70029532216439,165.32829037750875,111.21200919201095,98.619654050036615,80.551141280492729,89.068268285096849,66.226153440197479,68.552546019007593,91.900256830312586,106.38572835910176,100.80855363286175,92.199808745394392,63.615555398364513,113.18361420439052],\"z\":[109.19243345346239,132.33252673659001,62.876190104999338,94.263522336645551,135.00643777337567,102.3282722541895,127.68506316505217,111.48441825280743,102.72981624057306,118.2843197793626,63.983473640933688,93.202387217368965,112.12529144387887,126.82260621185777,115.34574575679872,103.87451333886554,122.8113338107626,100.2772960894392,77.893881796995004,99.496747218416786,96.726533247243438,107.40119495762634,92.38350927785352,113.05904738616307,141.2268361214708,64.067101261694972,111.6815424896172,85.544937521152576,87.416706700645989,63.675878905150739,94.814218032766405,106.69264546954498,71.456647746690322,138.77256466285561,84.80939573600044,54.424477168860328,97.718984670620969,147.03713331272323,131.92641606526146,125.54891022071392,115.77941716265597,109.22930764556077,91.238617323499852,69.843859814462746,55.541077373304439,76.426551151789752,64.344795525671088,80.241617214847025,114.56977376751004,82.306301709227682,69.231171656829503,79.112491857168749,65.637276193530269,116.07515078428523,69.964256600706591,97.090018577382978,111.58917224613965,124.03051152262209,137.87821573094467,64.795473130077468,118.49093605382089,88.869156640104904,96.388317236120287,128.94880570619875,87.857370943309476,113.58724860566083,98.128847192226672,90.198274165023776,128.2131876659129,95.508524204985306,95.750090209373752,113.92756947498543,118.30365010431581,81.532513683066128,122.93746525812372,87.282699137042158,82.271133830454545,53.337266305931237,97.090183906480306,106.3392804761598,85.850600243876812,124.84311116129338,112.40304390449359,101.9980613517924,136.15406975349896,69.951400422996386,105.71280930422475,116.91413928752985,80.093147248015541,94.862917508966945,98.882879134030873,91.099895202657223,101.39390206035596,96.906565879663674,83.374730811819987,115.23088704689823,88.469861349397462,87.472635436215285,109.62670651118148,133.90542167885241,64.7754741217461,103.96026030211097,107.9469819760162,100.58450989962152,151.20546777441865,125.14255423169104,89.309246287691209,87.495451428499265,118.27697373699242,120.14399069355653,114.38583646543636,87.90576678291427,110.7810881287306,98.463382289390992,136.99839120652473,82.901848973072219,100.65274589786725,79.498810384929101,80.355018488695265,100.08203913913627,95.33145644175508,90.022235617927748,130.99425925768077,101.74993833009728,126.37402261130097,80.375517618611042,95.087548247106184,71.921323261619705,128.81786294619806,80.372800181255016,129.48489807851846,80.176055094558563,98.110053108489225,42.497166323516886,95.062677983258041,100.29488970649717,61.618245934063054,94.24372512599804,93.067251091902193,63.208228307062313,117.97177881846579,75.742899780438563,95.620715365504793,111.28536321302339,89.491312486008638,114.88748449908064,102.5796350639295,129.76548513709378,86.746360977005267,76.786899970599137,107.17548468994737,96.103072316143383,94.094359839716731,109.93280847439884,109.69825576332397,100.37569001059502,112.69549129353835,115.0888817521014,116.67178069716098,119.31522592435304,125.87759935821916,97.268979583051674,91.197226237301223,75.454321710801963,95.246938633093521,81.4628368659138,108.22470711601804,96.022708463637954,88.851007212790108,80.456857551476133,101.21470497457773,88.0554104081899,74.82102605049981,71.799055968611682,122.02608158844316,86.455159474387244,84.756529848986105,94.165027959510297,88.496229412565356,91.121162636260848,93.74859112074968,87.939911472102921,78.121305599416388,114.29412382643653,97.823754735386203,71.124041293294255,116.12246527184426,65.203298433934577,91.973593810000693,94.248350224973478,81.231851998972758,105.753342775907,69.891977513439812,130.38594026625151,107.34818711901691,133.99724817619352,112.88393954553835,66.243979427266055,112.95291988738084,108.97588453562796],\"mode\":\"markers\",\"type\":\"scatter3d\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} # Center points at (0, 0, 0) xyz_centered <- center_layout_coordinates(xyz) apply(xyz_centered, 2, mean) #>             x             y             z  #>  4.477148e-15 -3.944505e-15 -4.049113e-15  plotly::plot_ly(data = xyz_centered, x = ~x, y = ~y,                 z = ~z, type = \"scatter3d\", mode = \"markers\")  {\"x\":{\"visdat\":{\"ce3b4eedf4b8\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"ce3b4eedf4b8\",\"attrs\":{\"ce3b4eedf4b8\":{\"x\":{},\"y\":{},\"z\":{},\"mode\":\"markers\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"x\"},\"yaxis\":{\"title\":\"y\"},\"zaxis\":{\"title\":\"z\"}},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[25.97132370931773,8.8155659698577864,-30.276263557344564,-18.04860341354113,-5.3716716550815704,0.40739382577889671,48.615805057888664,15.794606503538816,-15.457447699057738,-22.430402903997404,-5.2664941930348306,-5.4615650772166902,-7.7074793751717152,5.5672062438522687,-17.315685264961743,9.2364032678439969,-24.228031157869538,-3.9626204248365582,8.0706502003636444,3.1894644970264636,16.606527475627786,-0.61939820694654202,10.594896725404155,22.238124523643364,-13.296339513206973,-25.169249796714141,1.4572607244966633,-4.1913938480604003,-10.335027819475457,-8.14346906840602,-12.466695655195039,15.057752228438645,23.560972362473635,20.365944589645594,-8.0675249091080019,25.288819297797232,-5.064188356355757,35.680799076943785,11.737659098490752,-8.5329421703335271,-16.11812864162701,-22.808673660964516,-20.789074327036289,-30.752903740690471,23.653477223733219,17.163679852177424,-4.0238365477654838,5.84548451417173,-7.0113170909429385,49.350029858621426,-15.384045064377801,-0.57481219350194124,5.5255637378126892,12.887603152054567,-2.9297327721875206,-43.955268199469117,-24.749550418682034,7.697315200156666,0.30182771141635101,-18.290245971642534,-1.7937691624094612,-15.77663689666872,5.3680068979233511,-27.979230613920365,7.8415597417140219,5.4909902581815544,1.8285009141620492,0.90586511393510705,5.669504823840299,-12.457464273448323,-1.8606379676311349,13.805451278611841,22.542119324611363,3.3981668958910234,-1.8323346825893907,-17.718630058237125,-28.228987535869948,-15.419053220709671,25.604399409729055,15.965580996820236,-3.8675752543391582,-7.9734683868161085,-7.8568647077095477,20.462474498911746,-4.99282330103091,25.64311362685163,13.456225090636522,26.508983331998252,-16.942504954159077,0.69015648065030177,-17.094697184321262,12.447917612942817,2.9170901065203623,-5.1207402657194052,29.642505302056477,5.1031290946234691,20.453615851612156,16.159920972734795,-15.012795154562298,-11.797060873428734,1.4543433368295666,-22.084978271284214,12.057112918659357,-25.092251355036851,33.031683350028501,-9.4911946393244619,34.088681437055484,-7.7276604689183301,-18.922999429381562,1.0303946324857378,1.072243997665737,-33.080917167189028,21.597754541301967,-21.869244810713965,7.2350814801059329,10.418652622992795,3.2837914549643585,-1.8531032348469409,4.476422527645525,-20.851116944366098,-15.54152706656518,-21.752565445661006,32.124570954806345,30.479112501497909,5.7756464539848764,-24.135286710695667,0.44826660488601533,30.756182936947468,-8.991228407861044,16.481066031351219,-18.957313941520908,14.310191236039103,-18.594044784806329,-24.111403887552299,-18.61510034578275,-16.87292019300024,-17.690876369136149,15.348263385933791,1.8929679462725204,-5.9522778110296031,-21.207323659144322,-19.795841656368211,-14.833066413887551,-21.871663941810041,-8.4407474513382823,9.9574647697942282,-23.087076376955906,29.927877222389341,-25.705674551768013,-1.4077611745300089,47.917135439756507,18.335266809478057,-4.5209259470893102,-16.792537816155615,12.17445727845849,0.27215034081530121,-6.9743579615482645,6.8804519825790891,-9.253375416002811,53.69589782069896,34.128301374520603,16.114417462246692,14.787547682986045,-10.334901461509006,18.238304758748271,-6.4491564094854397,-19.63835428266114,38.186388128381552,-18.056684303293878,-5.3611917914086291,-11.776268135197469,-18.41877855409075,12.502240276935893,-29.949560366821444,-3.6010427616160854,-10.963171005298491,-27.28058345197195,-0.88561036941347027,-8.094853311352054,-11.321770178502135,20.145060478861936,11.170924414139748,-1.2863852040902657,3.6525471146514263,-14.22349653606976,-3.5040868367139808,22.566269182203499,0.1877721576921374,3.7585099518744727,41.017965082284334,-13.551147797245122,19.738584959740166,36.332438351485948,-20.760565985938896,0.87546820922166546,-7.2754353053873757,-9.2939177666014103,-20.391615755005219,-17.401487998481954,25.910480552870467],\"y\":[11.247923076015383,14.883790481735403,30.518511630964753,-7.9369318336124763,15.702233079027835,-1.8415914583457322,-10.656462251836459,17.892358610725722,0.10985792090868074,-21.952899366195027,-5.3980229615159203,29.275572980929866,22.814275043854764,-29.783040098382315,1.27222864383819,16.324403375985838,-33.116186491146451,27.542371240744586,-11.46410313795694,4.9443985861924205,-4.5083507893406107,30.894267728440013,-30.139848601145133,-3.5210600421454927,-19.692958799582499,7.5019587429638506,43.956348136883548,-30.918836060941317,-1.8630443361754345,-3.5743116967139912,30.202965480604462,-20.266009272012084,9.3026675572993156,33.31006171852701,-5.8436220672971331,-14.747467609287924,-3.8524660193815947,9.3975406585398673,-20.899689305830506,31.666148813427895,-0.51605619888476895,-58.726877102846125,-22.772192275309664,30.322442756430746,-20.165502902869051,-2.6589648485691839,0.22410909999928208,-32.563256181878614,9.1904515560065079,7.8031714117603883,36.849182075971356,20.061390582952015,1.0073103111456021,-2.279371136277959,11.49257272130734,-18.377298802276627,1.4795319079406255,6.428593570434856,10.378971273166371,-23.315515266271561,28.618134878993857,13.413438317416791,49.513327073732682,-38.429438768415153,-12.425151699758104,-34.918941832851175,-9.0488538522686071,5.5739316341590666,33.42251582435523,-9.4965919832132073,-24.600837562296391,-6.77651418044465,11.792188158828949,3.0091479321508103,25.739122727914719,-6.6070821645479185,-33.593330739111252,18.401073496575378,-22.891354957962861,11.710433617846974,9.640978433773725,6.7602861786858313,33.84898671618393,-4.7517872287188681,-26.912798693934747,0.64058602958264999,-5.2684449192670115,12.072310655894285,32.063989813739852,-36.795447483032724,-4.9066149258609073,0.77842692976827266,10.365257495790345,-14.565366816221399,7.1824229514695048,6.999329286054973,-0.87635129160949532,-3.1175956243457961,28.705995967810253,12.849677632816778,38.499609368982107,-6.0097161419847822,-25.519926262987639,-8.5429543460207498,1.3190371958537526,-5.3966348971300278,-8.8654550269325796,-32.17325687383115,-16.574417920579251,-22.553631552065923,5.5372790774480194,6.2670065773257591,30.164065854441247,-7.2191797436982483,18.338891118906758,-10.214007631562609,-30.926631795966628,8.0618372214585463,-11.019629236245464,-17.320076556315911,-15.761848083001453,21.161174008111374,30.819762453648224,19.518391417056279,-6.092055757447838,-26.822486729930418,3.8225807212631935,21.639767780065654,16.11899205140304,5.6614394704848507,3.8154655469018763,-17.501203694352526,8.2472106168232955,0.48704632265420855,0.73055189450462876,-4.6681307430405781,-23.789200976783178,-12.483761306886265,14.692411784145406,0.14966643710783956,-0.33595964643110676,-4.355235256965301,27.382920649785234,-0.2591844936575427,4.3550243370746813,2.3555188175481021,-19.893559505009321,-1.9582313774848501,25.109544926713937,8.5336092921586442,-29.669461698857731,0.91794964251195665,10.569009563613832,-2.1278272951203689,15.02505805933815,-4.082267174858714,-21.654771463887613,13.960129679931981,4.6244089578806467,10.244261287135245,20.192310070078918,3.3212271781096803,-33.220461642294566,1.7919087516882968,-33.377334938971416,-11.249758015965469,18.444699943501845,-35.041909137478399,1.4975165012479721,-12.802265827558173,-6.6528355483280706,18.895154597613725,8.4912774915068781,25.259265452379623,-23.292940018737028,-18.018102911823632,-15.728301733139162,-3.2216029013529379,-20.664922605470139,-17.026261481360578,-20.119945270223269,11.457292278295,10.346855867631987,17.699757240820716,52.602431437130207,-4.2340372047814157,13.071399426229718,64.699394481574075,10.583113296076277,-2.0092418458980603,-20.077754615441947,-11.560627610837827,-34.402742455737197,-32.076349876927083,-8.7286390656220902,5.7568324631670862,0.17965773692706932,-8.4290871505402833,-37.013340497570162,12.554718308455847],\"z\":[10.450540561966079,33.590633845093706,-35.865702786496968,-4.4783705548507555,36.26454488187936,3.5863793626931937,28.943170273555864,12.742525361311124,3.9879233490767518,19.542426887866299,-34.758419250562618,-5.5395056741273407,13.383398552382559,28.080713320361468,16.603852865302414,5.1326204473692343,24.069440919266299,1.5354031979428981,-20.848011094501302,0.75485432692047993,-2.0153596442528681,8.6593020661300386,-6.3583836136427863,14.317154494666767,42.48494322997449,-34.674791629801334,12.939649598120894,-13.19695537034373,-11.325186190850317,-35.066013986345567,-3.9276748587299011,7.9507525780486787,-27.285245144805984,40.030671771359309,-13.932497155495867,-44.317415722635978,-1.0229082208753368,48.295240421226922,33.184523173765157,26.807017329217615,17.037524271159668,10.48741475406446,-7.5032755679964538,-28.89803307703356,-43.200815518191867,-22.315341739706554,-34.397097365825218,-18.500275676649281,15.827880876013737,-16.435591182268624,-29.510721234666804,-19.629401034327557,-33.104616697966037,17.333257892788922,-28.777636290789715,-1.6518743141133285,12.847279354643348,25.288618631125786,39.136322839448368,-33.946419761418838,19.749043162324583,-9.8727362513914017,-2.3535756553760194,30.206912814702449,-10.88452194818683,14.845355714164526,-0.61304569926963381,-8.5436187264725305,29.471294774416592,-3.2333686865109996,-2.9918026821225538,15.185676583489126,19.561757212819501,-17.209379208430178,24.195572366627417,-11.459193754454148,-16.470759061041761,-45.404626585565069,-1.6517089850160005,7.597387584663494,-12.891292647619494,26.101218269797073,13.66115101299728,3.2561684602960952,37.412176862002653,-28.79049246849992,6.9709164127284424,18.172246396033543,-18.648745643480765,-3.8789753825293616,0.14098624253456649,-7.6419976888390835,2.6520091688596494,-1.8353270118326321,-15.367162079676319,16.488994155401926,-10.272031542098844,-11.269257455281021,10.884813619685175,35.1635287873561,-33.966418769750206,5.2183674106146611,9.2050890845198978,1.8426170081252167,52.463574882922345,26.400661340194731,-9.4326466038050967,-11.246441462997041,19.535080845496111,21.402097802060226,15.643943573940049,-10.836126108582036,12.039195237234296,-0.27851060210531386,38.256498315028423,-15.840043918424087,1.9108530063709424,-19.243082506567205,-18.386874402801041,1.3401462476399644,-3.4104364497412263,-8.7196572735685578,32.252366366184461,3.0080454386009734,27.632129719804666,-18.366375272885264,-3.6543446443901217,-26.820569629876601,30.075970054701756,-18.36909271024129,30.743005187022149,-18.565837796937743,-0.63183978300708077,-56.24472656797942,-3.679214908238265,1.5529968150008671,-37.123646957433252,-4.4981677654982661,-5.674641799594113,-35.533664584433993,19.229885926969487,-22.998993111057743,-3.1211775259915129,12.543470321527082,-9.2505804054876677,16.145591607584336,3.8377421724331953,31.02359224559747,-11.995531914491039,-21.954992920897169,8.4335917984510615,-2.6388205753529235,-4.6475330517795754,11.190915582902534,10.956362871827665,1.6337971190987162,13.953598402042047,16.346988860605094,17.929887805664677,20.573333032856738,27.135706466722851,-1.4729133084446318,-7.5446666541950833,-23.287571180694343,-3.4949542584027853,-17.279056025582506,9.4828142245217322,-2.7191844278583517,-9.8908856787061978,-18.285035340020173,2.472812083081422,-10.686482483306406,-23.920866840996496,-26.942836922884624,23.284188696946856,-12.286733417109062,-13.985363042510201,-4.5768649319860089,-10.24566347893095,-7.6207302552354577,-4.9933017707466263,-10.801981419393385,-20.620587292079918,15.552230934940226,-0.91813815611010341,-27.617851598202051,17.380572380347957,-33.538594457561729,-6.7682990814956128,-4.4935426665228277,-17.510040892523548,7.0114498844106947,-28.849915378056494,31.644047374755203,8.6062942275206069,35.255355284697217,14.142046654042048,-32.497913464230251,14.211026995884538,10.233991644131649],\"mode\":\"markers\",\"type\":\"scatter3d\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} # Normalize points to have a median radius of 1 xyz_normalized <- normalize_layout_coordinates(xyz_centered) radii <- sqrt(rowSums(xyz_normalized^2)) median(radii) #> [1] 1 plotly::plot_ly(data = xyz_normalized, x = ~x, y = ~y,                 z = ~z, type = \"scatter3d\", mode = \"markers\")  {\"x\":{\"visdat\":{\"ce3b685d8483\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"ce3b685d8483\",\"attrs\":{\"ce3b685d8483\":{\"x\":{},\"y\":{},\"z\":{},\"mode\":\"markers\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"x\"},\"yaxis\":{\"title\":\"y\"},\"zaxis\":{\"title\":\"z\"}},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[0.86485810913919126,0.29356276949979504,-1.0082147658346177,-0.60102754852029849,-0.17887936104172047,0.013566418784873319,1.6189306986135774,0.52596832060382503,-0.51474076326455431,-0.746943669868533,-0.17537689878881779,-0.1818728570976777,-0.25666292997799006,0.18539076094602558,-0.57662100647304992,0.30757686265366152,-0.80680559257912865,-0.13195724816409518,0.26875670065696849,0.10621076788147084,0.5530056963090686,-0.020626271038769028,0.35281537633642468,0.7405407033381175,-0.44277477646390617,-0.83814864545500734,0.048527513222547926,-0.13957551793136497,-0.34416161139471235,-0.27118160549546155,-0.41514721976598862,0.50143070356870922,0.78459220003403496,0.67819617227731754,-0.26865262689022068,0.84213036982819867,-0.16864001293207906,1.1881885100523306,0.3908699366755462,-0.28415125518539058,-0.53674177011079982,-0.75954027585114814,-0.69228660481345339,-1.0240871230668525,0.78767265832297639,0.57155914996735291,-0.13399577576929955,0.1946575669577911,-0.23348037665375918,1.6433807528330711,-0.51229641870415943,-0.01914153442259426,0.18400404460317366,0.42916365057755451,-0.097561571138870054,-1.4637324830717131,-0.82417244560649838,0.25632445785069802,0.010051014214870316,-0.60907436693533978,-0.059733413028811529,-0.52536992367983382,0.17875732278977022,-0.93172241641433962,0.26112787345096594,0.18285273038620065,0.060889997786832573,0.030165762759793203,0.18879735498205966,-0.41483981012250781,-0.061960177790272852,0.45972845366945386,0.75066388272227047,0.11316066246809367,-0.061017664198836294,-0.59003927024350999,-0.94003944721644106,-0.51346220787334096,0.85263934587971091,0.53166185700672119,-0.12879219630308039,-0.26552049751044665,-0.26163753649700422,0.68141066668421413,-0.16626352078644702,0.85392854873252588,0.44809904640570847,0.88276244431426509,-0.56419391490154958,0.022982557052000772,-0.56926199251965426,0.41452190153818591,0.09714056402942256,-0.17052321988555863,0.98711029798174632,0.1699367590526708,0.6811156692848207,0.53813347570358894,-0.49993361045399937,-0.39284804558240771,0.048430362749602024,-0.73544085630222833,0.40150790915475371,-0.83558455871761117,1.0999716273044995,-0.3160615431508873,1.135170193890535,-0.2573349705244562,-0.63014537452572794,0.034312658203057525,0.035706263059065088,-1.1016111381161835,0.719216061657317,-0.72825682383337498,0.24093184307380749,0.346946359305778,0.10935190290393224,-0.061709267408440092,0.14906711595830663,-0.69435265509685318,-0.51754064838454217,-0.72437134243994639,1.0697643294520958,1.0149697374427225,0.19233192451633627,-0.80371715595904314,0.014927502834708032,1.0241963219473584,-0.29941241681383551,0.54882776727159044,-0.63128806499530232,0.47653654747604424,-0.61919101982728719,-0.80292184596653515,-0.61989218057121953,-0.561876707444806,-0.58911505847262924,0.51110487086057299,0.063036782298739241,-0.19821383732055708,-0.70621451740521346,-0.65921145858280217,-0.49394855322096498,-0.72833738211253429,-0.28108112478944774,0.33158857241976819,-0.76881122596622231,0.9966133260977893,-0.85601185891858989,-0.046879153375104531,1.5956646498124534,0.61057358342188017,-0.15054910215281775,-0.55919993396864254,0.40541553520685275,0.0090627428849404321,-0.23224961910279768,0.22912250289119634,-0.3081420437021502,1.7881003362597143,1.1364895576851497,0.5366181859755641,0.49243275664553754,-0.34415740361103669,0.60734469848744244,-0.214760143929414,-0.65396705002811895,1.2716258825005005,-0.6012966462031869,-0.1785303763237423,-0.3921556369677453,-0.61335456641470099,0.4163308735024297,-0.99733538568565006,-0.11991653057804341,-0.36507909461735899,-0.90845711541540031,-0.029491269605569116,-0.26956267639540266,-0.37702062699156413,0.67084062057231497,0.37199738736010424,-0.042837272666044271,0.12163165137346878,-0.47364957047298273,-0.11668784963674077,0.75146808509589158,0.0062529070550355224,0.12516026701375935,1.3659188156464483,-0.45126002015778732,0.65730478185983143,1.2098884248171362,-0.69133726275248863,0.029153530582935787,-0.24227564570089224,-0.30949212431687773,-0.67905103496282504,-0.57947828054586281,0.86283200150494077],\"y\":[0.37456148143021611,0.49563769012818398,1.0162817482202171,-0.26430381195864988,0.5228922392245533,-0.061325919475577369,-0.35486553925358472,0.59582451819969606,0.0036583238811566852,-0.73104256249975907,-0.17975687276623747,0.97489126760102851,0.75972680471156528,-0.99179017720465323,0.042365852107409709,0.54361082225144064,-1.1027856242983214,0.91717478011850528,-0.38176038594879036,0.16465095348800793,-0.15013034309092319,1.0287946147801679,-1.0036720793548128,-0.11725306589294009,-0.6557854078362777,0.24981898981730369,1.4637684455294102,-1.0296127525782097,-0.062040311070054852,-0.11902637270602801,1.0057739031060753,-0.67486827606332012,0.30978349673682248,1.1092417666358463,-0.19459554654249137,-0.49109807008351686,-0.12828905119880304,0.31294281860525835,-0.69597013910200833,1.0544986421572331,-0.017184930324398974,-1.9556344703599029,-0.75832542740640296,1.0097525563319465,-0.6715213635475632,-0.088544863440136484,0.0074629454638359752,-1.0843727675987005,0.30604664759584321,0.25984952280437212,1.2270962500889635,0.66805437106195376,0.03354393872119988,-0.075904202381511549,0.38270843735733601,-0.61197326986920908,0.04926915480451835,0.21407539107280693,0.34562495044872188,-0.77641835558651606,0.95299824897477947,0.4466742253916875,1.6488186320212681,-1.2797195907503081,-0.41376378520764656,-1.162818281605964,-0.30133137302286167,0.18561471981732022,1.1129865447773102,-0.31624127741018931,-0.81922023288072821,-0.22566132193530139,0.39268578174163032,0.10020613580763954,0.85712569996497512,-0.22001915080316475,-1.1186747671352506,0.61276497911694405,-0.7622936045217813,0.38996331451128863,0.32104941865145742,0.22512092133526582,1.1271882394324635,-0.15823689865246054,-0.89620969845789811,0.021331836162323599,-0.17544185895101391,0.40201400142926824,1.0677469470614764,-1.2253068611858631,-0.16339273864318843,0.025922007292253788,0.34516827478200068,-0.48503402231579534,0.23917828765182464,0.23308117673679782,-0.029182937669486368,-0.10381749836512857,0.95592406731161683,0.42790071175998701,1.2820563069532538,-0.20012656255774544,-0.8498263477136756,-0.28448466565880848,0.043924600373028484,-0.17971064952580573,-0.29522410012935263,-1.0713855949809834,-0.55193643201682863,-0.75104724567210568,0.18439417129052871,0.20869446313528778,1.0044785260391886,-0.24040230727364939,0.61069427474414517,-0.34013157842229086,-1.0298723544656145,0.26846322403802336,-0.36695918203256517,-0.57676723867822155,-0.52487744876527631,0.70467771087288145,1.0263135517508619,0.64997222641900432,-0.20286851306183459,-0.89320226474771691,0.12729385577822996,0.72061512358587576,0.53677052208950793,0.18852877466899601,0.12705691690236831,-0.58279886324497165,0.27463625110411588,0.016218886891883586,0.024327744599427228,-0.15545109570954016,-0.7921923273911321,-0.41571551452901601,0.48926468348517549,0.0049839674422235926,-0.011187624774598285,-0.14503151904590766,0.91186499544438959,-0.0086309736697185221,0.14502449530773331,0.078439958370529902,-0.66246551196686487,-0.065210087300285283,0.83616044333051376,0.28417347067685694,-0.98800795951905074,0.030568183624120202,0.35195332086141173,-0.07085771644255183,0.50034197133524283,-0.13594154496571256,-0.72111475378438272,0.46487932203441218,0.15399513832882197,0.34113904033089265,0.67241405566460732,0.11059853126589411,-1.1062580391456172,0.059671460418442596,-1.1114819986271163,-0.3746225858511294,0.61421776168665765,-1.1669131545418276,0.049868050784388981,-0.42632187485872702,-0.22154276143717433,0.62921812765831509,0.2827638004776053,0.84114621194884931,-0.77566658851778325,-0.60001186651123195,-0.5237603384849091,-0.10728099286913959,-0.6881522901993099,-0.56698304927738274,-0.67000427152453501,0.38153358090509065,0.34455549133236812,0.5894107959551923,1.7516873571029667,-0.14099556310402772,0.43528415871680382,2.1545222954388548,0.35242298222814827,-0.066908761490015761,-0.66859930155358094,-0.38497469932133022,-1.1456285833747006,-1.0681585433665621,-0.29066805997816852,0.19170540918326562,0.0059826927726148111,-0.28069283092298836,-1.232562807885256,0.41807841827988046],\"z\":[0.34800824367152922,1.1185849592114552,-1.19434589634526,-0.1491319862415515,1.2076275382175912,0.1194282320373935,0.96382209068152147,0.42433248736135531,0.13279984823558152,0.65077261965539401,-1.1574727990827758,-0.18446831807701677,0.44567388614532211,0.93510184145194342,0.552916630443402,0.17091883589469622,0.80152445807010397,0.051129696791802459,-0.69424922873817363,0.0251370277912237,-0.067112487244484556,0.28835910310922924,-0.21173736428782039,0.47676842748176052,1.4147699239364988,-1.1546879573560729,0.43089682334287632,-0.43946523464627851,-0.37713438191654619,-1.1677158581023268,-0.130793543280814,0.26476404968213985,-0.90861235212550984,1.3330414530749737,-0.46395914510765845,-1.4757921772798737,-0.034063356940554464,1.6082557353878606,1.1050612701135274,0.89268712594309807,0.56735810582815016,0.34923617276791175,-0.2498628407515304,-0.96231899939233445,-1.4386088302819113,-0.7431120753723216,-1.1454405990485323,-0.6160684614823968,0.52707637390074413,-0.54731343198274829,-0.98272182242258899,-0.65366890236683262,-1.1024003443809347,0.57720618379575095,-0.95830972600824704,-0.055008243392965624,0.42782084789361358,0.84212368752736677,1.3032591849541675,-1.1304328087202156,0.65765304525269475,-0.32876707024929003,-0.078375250095329349,1.0059053513118863,-0.36246004155789646,0.49435779308563826,-0.020414729346122103,-0.28450678986116745,0.98140890151629678,-0.10767279941770948,-0.09962853027971609,0.5056906487705829,0.6514163291742151,-0.57308096145759491,0.80572469854643314,-0.38159690101514643,-0.54848453998935554,-1.511996844460973,-0.05500273785108023,0.25299681812183816,-0.42928651263085899,0.86918366317028339,0.45492318243012497,0.10843204332322946,1.2458442589140801,-0.95873784317584509,0.23213501380049828,0.60514492186805569,-0.62101258586415742,-0.12917182629117296,0.0046949126081448894,-0.25448235697144073,0.088313235816196753,-0.06111731026386516,-0.51173420684353266,0.54909177777995977,-0.34206380375330958,-0.37527192696306022,0.36246975436512102,1.1709631498984245,-1.1310987857310031,0.17377425278937925,0.30653408463887771,0.061360070797745123,1.7470633641845501,0.87915526764287477,-0.31411186419498049,-0.37451214297339092,0.65052799275901219,0.71270059408104414,0.52095116946172115,-0.36084843581922599,0.40091124137413264,-0.0092745427767934006,1.2739605868895982,-0.52748140931511589,0.06363236377281789,-0.64080430157929613,-0.61229214217067929,0.044627542387762786,-0.11356924476684886,-0.29036896179668797,1.0740199807649897,0.1001694222193172,0.92016378250236375,-0.61160951086022364,-0.12169151001557457,-0.89313842435413004,1.0015448917108596,-0.61170000288749737,1.0237574962636671,-0.61825171298002812,-0.02104058176343037,-1.8729776122724779,-0.12251970227894315,0.051715573066418954,-1.2362360683386229,-0.14979124328822616,-0.18896841885184398,-1.1832888576354799,0.64036484885806699,-0.76587800902109737,-0.10393677748694423,0.41770385467212162,-0.30804896844975976,0.53765630065514347,0.12779873970857769,1.0331011860826544,-0.39945723082121942,-0.73111227892166109,0.28084283795836573,-0.087874049035803758,-0.15476518225684105,0.37266310330932523,0.36485238035719075,0.054406263729785728,0.46466182720398408,0.54436293022023063,0.59707425921927981,0.68510231148148015,0.90363263912290503,-0.049048752120799614,-0.2512411846875432,-0.77548780351745594,-0.11638373019723143,-0.5754012344251056,0.31578247113356489,-0.09055020564217843,-0.32937145528430467,-0.60890085028817997,0.082345882957943747,-0.35586522802245962,-0.7965768667252151,-0.89720998655188389,0.77537516511169813,-0.40915438695201606,-0.46571960566765602,-0.15241189841404798,-0.34118573402115854,-0.25377414076272758,-0.16627945406802475,-0.35971140053910866,-0.68667590202072037,0.51789709257148187,-0.030574461221514086,-0.91968831388976957,0.57878177996879143,-1.1168520214988684,-0.2253877550188447,-0.14963722517196648,-0.58309314637762288,0.23348479874285696,-0.96071665587610833,1.053762653161306,0.28659391548989888,1.1740210183285509,0.47093724853866309,-1.0821968223190572,0.47323432852893971,0.34079705606666982],\"mode\":\"markers\",\"type\":\"scatter3d\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} # Project points on unit sphere xyz_projected <- project_layout_coordinates_on_unit_sphere(xyz_normalized) radii <- sqrt(rowSums(xyz_projected^2)) all(near(radii, y = rep(1, length(radii)), tol = 1e-12)) #> [1] TRUE plotly::plot_ly(data = xyz_projected, x = ~x, y = ~y,                 z = ~z, type = \"scatter3d\", mode = \"markers\")  {\"x\":{\"visdat\":{\"ce3b53a6e9fc\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"ce3b53a6e9fc\",\"attrs\":{\"ce3b53a6e9fc\":{\"x\":{},\"y\":{},\"z\":{},\"mode\":\"markers\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"x\"},\"yaxis\":{\"title\":\"y\"},\"zaxis\":{\"title\":\"z\"}},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[0.86082785498763303,0.23331957314759427,-0.54078723404091966,-0.89266125403161223,-0.13469089110311377,0.10053884080718345,0.84440576280453272,0.58379421013617006,-0.96827099626660473,-0.60667946669360995,-0.14807185435037326,-0.18030034834080175,-0.27976161364995628,0.13476522390221421,-0.72077431495864419,0.47498069004180887,-0.50930059985355114,-0.14219097324314564,0.32123644815542074,0.53766382287230474,0.95851690119769917,-0.019301393368648001,0.3252522728990605,0.83345989793881636,-0.2731472326068719,-0.57862458991133181,0.031787031171097151,-0.12372114575931176,-0.66915663231875688,-0.22510573400730124,-0.37881245180778089,0.56886081508747643,0.63283296027906677,0.36421299503087401,-0.47103071480605391,0.47612776343042812,-0.78579418547208324,0.58707576674062933,0.28672971380924661,-0.20144975028754888,-0.6870684679674911,-0.35712444829743611,-0.65510063228970927,-0.59180835285787259,0.44444114197557022,0.60696564004489795,-0.11618711930696567,0.15421372526665711,-0.35772734611269247,0.93826714785538923,-0.30983154900318577,-0.020475495984713321,0.16456050159274579,0.59337121648483671,-0.094125566195329177,-0.92205565213105667,-0.88630000913529028,0.28294178456162394,0.0074543179939699942,-0.40589848715028665,-0.051519573138504061,-0.68770220796566883,0.10766365243103881,-0.4967766680666017,0.42884817229397376,0.1432225813585597,0.19763131992061281,0.088452792956123738,0.12621466819787186,-0.77885267658582658,-0.074869216743520803,0.63876049494558407,0.70243243132362876,0.19093077876449724,-0.051799620352368188,-0.80133256167952516,-0.60229955930348122,-0.30021081635848257,0.74463884800979152,0.75283023134542848,-0.2336095374173395,-0.28358434893589418,-0.21042656000705515,0.9625856741721972,-0.10770560287260227,0.6650188460508859,0.83869093197221223,0.77213262908252167,-0.41547172090163348,0.01864996464606912,-0.96116011138897117,0.85100816966278481,0.26304533504526789,-0.32935040727189208,0.86793731445166789,0.27398211932252792,0.89298113123615253,0.81016756277777635,-0.43929798861752328,-0.30054293116063885,0.028315564024851903,-0.94077119632999751,0.40612819728554062,-0.94436041790594472,0.53268188453810239,-0.33221728282556323,0.93486344436833224,-0.22112289788729855,-0.59413218934666989,0.033121939535066716,0.064477975931613973,-0.93527911290235988,0.55373832294732672,-0.94952911829088227,0.16811134589748947,0.48378785022532,0.10538778726276202,-0.088471664327318733,0.204416124134354,-0.76829529082714876,-0.69392467357287202,-0.68891003380625859,0.58436705862522387,0.83923037980572557,0.19999358158098776,-0.59610900197018857,0.08446246806328353,0.66585469499146832,-0.25479715809835363,0.65091169069859389,-0.52196682076027545,0.48917969480505757,-0.91367729875640247,-0.39399684478961844,-0.98029584925662661,-0.96002430097525027,-0.3723728029388243,0.75647880896200126,0.11932822905184087,-0.16520768045553688,-0.74074908558899644,-0.6457388558100392,-0.47392505277933861,-0.86742099104630777,-0.63663299672761398,0.52092664274625156,-0.75162137446698485,0.69356776412051335,-0.67854441268996735,-0.059658074641358534,0.84085153918189293,0.98858855581245342,-0.3646117911554701,-0.82755649201646098,0.54774826062971749,0.061775395658571895,-0.26132489116512458,0.30483598583121574,-0.4470224497535083,0.91932950388888146,0.7102642018866705,0.97551320993393531,0.3981838978963782,-0.40464293899292697,0.47749866283264825,-0.29852264831881353,-0.68756599534944529,0.73577953863678147,-0.87473010264101692,-0.23354097033254126,-0.85647169354045383,-0.64697856954545441,0.44185095360350068,-0.62986511310005777,-0.10869010439048817,-0.44914172118925039,-0.79175660357285838,-0.15628512588482585,-0.33115075342038192,-0.51884987397291915,0.69691127090642824,0.57860876100970526,-0.055671458924422539,0.1531908174047967,-0.26098525079781987,-0.12443758351582788,0.7200517598322812,0.0025766046120286033,0.28663489889268978,0.9928764426995762,-0.4533826831623271,0.82500866656132543,0.62905298515628527,-0.41846803560999879,0.071238958479042463,-0.19956957999864663,-0.54917057979986206,-0.51912414116906391,-0.40189668287859398,0.84794913684569628],\"y\":[0.37281601827320132,0.39392588676558399,0.54511421003769922,-0.39255067893177553,0.3937224576491602,-0.45447785102903987,-0.18509162042765651,0.6613305219273049,0.0068816172370108758,-0.59376433570384801,-0.15176989481819947,0.96646216454646339,0.82809931624118494,-0.72095731531041651,0.052957172367227419,0.83948006114467921,-0.69613967123055531,0.98830474591999928,-0.45630620605496791,0.83350175182545194,-0.26021878652554359,0.9627125289925299,-0.92526189885839372,-0.13196537056184385,-0.40455323757370804,0.17246512455631022,0.95881387929213979,-0.9126591204914265,-0.12062555569579085,-0.098802862920086415,0.91774594664190889,-0.7656214804274647,0.24986382387826425,0.59569823976326097,-0.34118586684596086,-0.27765941487369322,-0.5977750400929539,0.15462289327352965,-0.51054148728288484,0.74758947660652741,-0.021997959554508895,-0.91951000296342389,-0.71759219883961645,0.58352456904960548,-0.37890323921043634,-0.09402996997546155,0.006471085599601069,-0.85907353452830926,0.46890987842418624,0.14835774984764433,0.7421350570881462,0.71461066235646808,0.029999380683514449,-0.10494683984260136,0.36922989178509585,-0.38550310180441838,0.052983150050834864,0.23630547661647025,0.25633217028816402,-0.51741963385193102,0.82195308286236268,0.584690590758706,0.99306609289808379,-0.68232214139385916,-0.67952088263398369,-0.9107976434958347,-0.97803447443837632,0.54426405565628388,0.74405294222004659,-0.59373608643083109,-0.98989995451326374,-0.31354060541379397,0.36745504181536109,0.16907320202484757,0.72763824107987263,-0.29880809400854114,-0.71675430349717106,0.35827110894588871,-0.66573684906679376,0.55218588358512277,0.58233501976143354,0.24043631473761551,0.90656083557375178,-0.22353124072665034,-0.58056514992643771,0.016612716707821967,-0.3283682421795236,0.35163268425254807,0.78628756862878835,-0.9943162368746461,-0.2758775132330899,0.05321754990003609,0.93467549209955092,-0.93680000235533822,0.21030249718204438,0.37578729365283198,-0.038260480367828233,-0.15629871290610931,0.83998257220538475,0.32735948569481482,0.7495741386594994,-0.2560006070664772,-0.85960558866521086,-0.32151869603921035,0.021271311298842022,-0.18889670374031603,-0.2431302553510159,-0.92062064877570815,-0.52039293469567349,-0.72498438657583297,0.33297696033699464,0.17718373171370419,0.77336739833622192,-0.31344572874592103,0.42611485119332682,-0.474285204917337,-0.99253845354271486,0.38489175514135576,-0.50321208151360797,-0.63818803042964556,-0.70376194302245432,0.67018049607643115,0.56063173444101477,0.53743123397467485,-0.21094990142314915,-0.66247921504291829,0.72025129369411089,0.46848924667996861,0.4567866791724059,0.22359579959882744,0.10505425121830111,-0.59826129090180957,0.40525282185033307,0.0079586703158007841,0.038471830747434113,-0.26560422868044903,-0.50073559175702542,-0.61529442434862691,0.92617494245202192,0.0041540475262787264,-0.011734710371213484,-0.14206744428629015,0.87490015564493695,-0.010279147985740865,0.32847235514598372,0.12322941008771582,-0.64765344446646522,-0.045381306132088121,0.66280857095958234,0.36163712234907741,-0.52064073336662542,0.049493390024210389,0.85238854890104299,-0.10486189230269741,0.67600133867364132,-0.92663367297434185,-0.81139093049216293,0.61849859632601067,0.22340114045722487,0.17539238617926012,0.4202340702159908,0.20105604146275441,-0.89452647526306228,0.070158697341312706,-0.87385494502341643,-0.5207359447713813,0.6457745029466494,-0.6751913705858682,0.072545033232059325,-0.55768450377290013,-0.48385152779362428,0.66371176878008908,0.30009654060606383,0.5312241614275155,-0.70304971359510182,-0.73816980055043557,-0.45647802152483685,-0.56852158960414578,-0.84537723254089669,-0.78027318030250303,-0.69604241911073272,0.59344145962345118,0.44778543751920602,0.74234231468539447,0.96519577491935038,-0.15035967509674888,0.41708640822870541,0.88780339037274691,0.80709899625989401,-0.048635491606579054,-0.67174429765089239,-0.48319664197219675,-0.59564259436661948,-0.64655882366733297,-0.71027040094035054,0.15791338780046482,0.010615839953773409,-0.21458538060130752,-0.85484291742907625,0.41086704398528107],\"z\":[0.34638651907415025,0.88903564187391992,-0.64062443405894742,-0.22149458237372707,0.90930797323929502,0.88506600003229896,0.50271264136677485,0.47098435322083021,0.24980776836015356,0.52856781810712328,-0.97726179960955928,-0.18287336845027563,0.48578283416445939,0.67974913308292118,0.69114392480203768,0.26394425742556443,0.50596685378375084,0.055094975453053648,-0.82981431097096103,0.127249531544292,-0.11632511877291948,0.269837067014219,-0.19519574148775556,0.53659084925135758,0.87276988220712459,-0.79715077918905619,0.28225082732577739,-0.38954641299313608,-0.7332658977048514,-0.96931181917679543,-0.11934615108047841,0.30036831018945592,-0.7328645945202733,0.71588581589076961,-0.81346313375215007,-0.83439055736671452,-0.15872145261473827,0.79462809224292152,0.81063768786175217,0.63287279336076885,0.7262596024151714,0.1642056115924666,-0.23644153133099818,-0.55611325357621544,-0.81172926929813849,-0.78914578916148381,-0.99320626173937887,-0.48806842677274037,0.8075609399663809,-0.31248157916180735,-0.59433994336832219,-0.69922267934516402,-0.98591068483618205,0.79805811834374352,-0.92455917322839587,-0.034651592637915,0.46007073327638998,0.9295717660676589,0.96656000932099628,-0.75334145022933807,0.56722029508532601,-0.4303517006326098,-0.047204587503154156,0.53632959775528322,-0.59526516375851368,0.38721433959943291,-0.066260306341621486,-0.83423782049175554,0.65609075340641188,-0.20215332756325025,-0.12038554912799972,0.70262174664155097,0.60956170456258707,-0.9669331363012893,0.68400247766330458,-0.51824689921611011,-0.35142354685068761,-0.88403352777824917,-0.04803575573744532,0.35824208678169839,-0.778660714809157,0.92831583827596054,0.36587991779738105,0.15317507727323301,0.80705861608729657,-0.74664178294596761,0.43447878907434795,0.52930677160930106,-0.45731292191546863,-0.10482079901500059,0.0079270402463242316,-0.52244902866196807,0.23914195821600398,-0.11804263982509564,-0.44995297294430958,0.88527832246170823,-0.44846497622247417,-0.56497719650142653,0.31850675909283938,0.89582906497556658,-0.66131447850990233,0.22229090250709857,0.31006147665444261,0.069347885257989794,0.84604819082636407,0.92409399538577397,-0.25868517413398034,-0.32181094617448508,0.61334992875271244,0.68796844138572133,0.94072787484186826,-0.30636400928402319,0.30866930020678385,-0.012092503821721313,0.8889120929389045,-0.73552896637106213,0.061325627064833355,-0.918711653042107,-0.83963780835109492,0.04937999502993836,-0.1522749978165909,-0.27615406569487333,0.58669174114807832,0.082825348532898191,0.95681905625670538,-0.4536246768047616,-0.68855222417810724,-0.58065079945097309,0.85230530794759696,-0.72547838652413288,0.84647164295466659,-0.63465475181308695,-0.031047449485356846,-0.91907733399460456,-0.1937523320354364,0.088361390007433871,-0.78141049569302889,-0.22170381809279643,-0.35771601826776678,-0.98625005257675424,0.67167930500467965,-0.75022541370650941,-0.099723427541205958,0.49746875621382342,-0.69771365142332464,0.84465966244787183,0.12494128747169182,0.71896056472286263,-0.31664219281350275,-0.93040824688368096,0.14799295866663359,-0.14227814892160773,-0.37482262932322269,0.55150180059915177,0.49294424947306587,0.37085554681210769,0.52283272580491535,0.7242475461367236,0.8661771526995985,0.35223681543780783,0.5647371864398455,-0.089165270345112735,-0.20315503564885842,-0.91177949588183682,-0.091501705181679049,-0.79982392078743125,0.33200646587549226,-0.052393545497719539,-0.47914973201181632,-0.79652156871468904,0.17984420261916292,-0.37537370516822732,-0.84540511065166268,-0.56663112305545338,0.70278557286090493,-0.50336573169266086,-0.40589320832399017,-0.80768692052127433,-0.41913782126003407,-0.34923999252505938,-0.17274151580342828,-0.55949900418392329,-0.89240623631110938,0.65227330260434646,-0.016846808120055557,-0.9807687066345161,0.55458488190115007,-0.46021571154332541,-0.51617017055720027,-0.10877020956319665,-0.58583593367259246,0.29305580575292556,-0.49950199363182635,0.63784495820741849,0.70031490655479767,0.96707566647731547,0.83564285327187438,-0.82732293603385254,0.32821127770466446,0.33491869683467262],\"mode\":\"markers\",\"type\":\"scatter3d\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/node_markers_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate antibody counts per A-node — node_markers_counts","title":"Calculate antibody counts per A-node — node_markers_counts","text":"Computes returns data frame antibody counts per node (vertex) node graph given component edge list input. parameter k allows include neighbors (node) computing counts. k defines number levels searching neighbors.","code":""},{"path":"/reference/node_markers_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate antibody counts per A-node — node_markers_counts","text":"","code":"node_markers_counts(component_edge_list, k = 0)"},{"path":"/reference/node_markers_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate antibody counts per A-node — node_markers_counts","text":"component_edge_list object class tbl_df k Number neighbors include","code":""},{"path":"/reference/node_markers_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate antibody counts per A-node — node_markers_counts","text":"matrix node marker counts","code":""},{"path":"/reference/node_markers_counts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate antibody counts per A-node — node_markers_counts","text":"k > 0, edgelist_to_simple_Anode_graph used calculate -node projected graph.","code":""},{"path":"/reference/pixelatorR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"pixelatorR: Data Structures, Data Processing Tools and Visualization Tools for MPX Single Cell Data — pixelatorR-package","title":"pixelatorR: Data Structures, Data Processing Tools and Visualization Tools for MPX Single Cell Data — pixelatorR-package","text":"Defines S4 classes single-cell MPX data, extending Seurat toolbox. addition, pixelatorR provides functions process visualize MPX data. Defines S4 classes single-cell MPX data, extending Seurat toolbox. addition, pixelatorR provides functions process visualize MPX data.","code":""},{"path":"/reference/pixelatorR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"pixelatorR: Data Structures, Data Processing Tools and Visualization Tools for MPX Single Cell Data — pixelatorR-package","text":"Maintainer: Ludvig Larsson ludvig.larsson@pixelgen.com (ORCID) Authors: Max Karlsson max.karlsson@pixelgen.com (ORCID)","code":""},{"path":"/reference/pixelatorR_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Global Options in pixelatorR — pixelatorR_options","title":"Global Options in pixelatorR — pixelatorR_options","text":"Information global options provided pixelatorR.","code":""},{"path":"/reference/pixelatorR_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Global Options in pixelatorR — pixelatorR_options","text":"Available options: pixelatorR.verbose Whether print messages console.","code":""},{"path":"/reference/pixelatorR_options.html","id":"verbosity","dir":"Reference","previous_headings":"","what":"Verbosity","title":"Global Options in pixelatorR — pixelatorR_options","text":"Verbosity can turned globally pixelatorR function setting options(pixelatorR.verbose = FALSE).","code":""},{"path":"/reference/pixelatorR_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global Options in pixelatorR — pixelatorR_options","text":"","code":"# Turn off verbosity options(pixelatorR.verbose = FALSE)"},{"path":"/reference/pxl_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Five Cells MPX Test data — pxl_dataset","title":"Five Cells MPX Test data — pxl_dataset","text":"MPX data set 5 immune cells (link data resource) 1x CD3 capping stimulated CD4 T cell (RCVCMP0000217) Data set: CD3 Stimulated Human PBMCs SCSP v1.0 Kit, Immunology Panel 1x B cell (RCVCMP0000118) 1x CD4 T cell (RCVCMP0000487) 1x CD8 T cell (RCVCMP0000655) Data set: 1k Human PBMCs, SCSP v1.0 Kit, Immunology Panel 1x Migratory CD8 T cell uropod (RCVCMP0000263) Data set: Uropod formation T cells, SCSP v1.0 Kit, Immunology Panel ","code":""},{"path":"/reference/show-CellGraph-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show method for CellGraph object — show,CellGraph-method","title":"Show method for CellGraph object — show,CellGraph-method","text":"Show method CellGraph object","code":""},{"path":"/reference/show-CellGraph-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show method for CellGraph object — show,CellGraph-method","text":"","code":"# S4 method for CellGraph show(object)"},{"path":"/reference/show-CellGraph-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show method for CellGraph object — show,CellGraph-method","text":"object CellGraph object","code":""},{"path":"/reference/show-CellGraph-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show method for CellGraph object — show,CellGraph-method","text":"","code":"library(pixelatorR) library(dplyr) library(tidygraph)  edge_list <- ReadMPX_item(   system.file(\"extdata/five_cells\",               \"five_cells.pxl\",               package = \"pixelatorR\"),   items = \"edgelist\" ) bipart_graph <-   edge_list %>%   select(upia, upib, marker) %>%   distinct() %>%   as_tbl_graph(directed = FALSE) %>%   mutate(node_type = case_when(name %in% edge_list$upia ~ \"A\", TRUE ~ \"B\")) attr(bipart_graph, \"type\") <- \"bipartite\"  cg <- CreateCellGraphObject(cellgraph = bipart_graph)  # Show method cg #> A CellGraph object containing a bipartite graph with 16800 nodes and 68255 edges"}]
