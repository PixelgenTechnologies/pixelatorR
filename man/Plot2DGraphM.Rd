% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_layout_visualization.R
\name{Plot2DGraphM}
\alias{Plot2DGraphM}
\title{Plot multiple markers on multiple graphs}
\usage{
Plot2DGraphM(
  object,
  cells,
  markers,
  assay = NULL,
  layout_method = c("wpmds_3d", "pmds_3d", "wpmds", "pmds"),
  colors = c("lightgrey", "mistyrose", "red", "darkred"),
  map_nodes = TRUE,
  map_edges = FALSE,
  log_scale = TRUE,
  node_size = 0.5,
  edge_width = 0.3,
  show_Bnodes = TRUE,
  titles = NULL,
  titles_theme = NULL,
  titles_size = 10,
  titles_col = "black",
  ...
)
}
\arguments{
\item{object}{A \code{Seurat} object}

\item{cells}{A character vector with cell IDs}

\item{markers}{A character vector with marker names}

\item{assay}{Name of assay to pull data from}

\item{layout_method}{Select appropriate layout previously computed with
\code{\link{ComputeLayout}}}

\item{colors}{A character vector of colors to color marker counts by}

\item{map_nodes, map_edges}{Should nodes and/or edges be mapped? Note that
component graphs can have >100k edges which can be very slow to draw.}

\item{log_scale}{Convert node counts to log-scale with \code{log1p}. This
parameter is ignored for PNA graphs.}

\item{node_size}{Size of nodes}

\item{edge_width}{Set the width of the edges if \code{map_edges = TRUE}}

\item{show_Bnodes}{Should B nodes be included in the visualization?
This option is only applicable to bipartite MPX graphs. Note that by removing
the B nodes, all edges are removed from the graph and hence, \code{map_edges}
will have no effect.}

\item{titles}{A named character vector with optional titles. The
names of \code{titles} should match \code{cells}}

\item{titles_theme}{A \code{theme} used to style the titles}

\item{titles_size}{The size of the text in the plot titles}

\item{titles_col}{The color of the plot titles}

\item{...}{Parameters passed to Plot2DGraph}
}
\value{
A \code{patchwork} object
}
\description{
In contrast to \code{\link{Plot2DGraph}}, which only draw 1 marker at the time,
this function makes it possible to arrange plots into a grid with markers in rows
and components in columns. The color scales are fixed for each marker so that their
limits are the same across all components.
}
\examples{
library(pixelatorR)

# MPX
pxl_file <- minimal_mpx_pxl_file()
seur <- ReadMPX_Seurat(pxl_file)
seur <- LoadCellGraphs(seur, load_as = "Anode")
seur <- ComputeLayout(seur, layout_method = "pmds", dim = 2)
Plot2DGraphM(seur, cells = colnames(seur)[2:3], layout_method = "pmds", markers = c("CD20", "CD4"))

# PNA
pxl_file <- minimal_pna_pxl_file()
seur <- ReadPNA_Seurat(pxl_file)
seur <- LoadCellGraphs(seur, cells = colnames(seur)[2:3], add_layouts = TRUE)
Plot2DGraphM(seur, cells = colnames(seur)[2:3], markers = c("CD20", "CD4"))

}
\seealso{
\code{\link[=Plot2DGraph]{Plot2DGraph()}}
}
