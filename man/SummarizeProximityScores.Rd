% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R,
%   R/filter_and_summarize_proximity_scores.R
\name{SummarizeProximityScores}
\alias{SummarizeProximityScores}
\alias{SummarizeProximityScores.tbl_lazy}
\alias{SummarizeProximityScores.data.frame}
\title{Summarize proximity scores}
\usage{
SummarizeProximityScores(object, ...)

\method{SummarizeProximityScores}{tbl_lazy}(
  object,
  proximity_metric = c("log2_ratio", "join_count_z"),
  group_vars = NULL,
  include_missing_obs = TRUE,
  summary_stat = c("mean", "median"),
  detailed = FALSE,
  ...
)

\method{SummarizeProximityScores}{data.frame}(
  object,
  proximity_metric = "log2_ratio",
  group_vars = NULL,
  include_missing_obs = TRUE,
  summary_stat = c("mean", "median"),
  detailed = FALSE,
  ...
)
}
\arguments{
\item{object}{A \code{tbl_df} or \code{tbl_lazy} object with proximity scores.}

\item{...}{Additional arguments. Currently not used.}

\item{proximity_metric}{The proximity metric to use. One of "log2_ratio" or "join_count_z".}

\item{group_vars}{A character vector with the names of the variables to use for
grouping This is typically used is you want to summarize the proximity scores
for multiple cell types and/or conditions.}

\item{include_missing_obs}{Logical indicating whether to include missing observations
as 0 when computing the summary statistics.}

\item{summary_stat}{One of "mean" or "median"}

\item{detailed}{Logical indicating whether to return lists which can be used to compute
custom summary statistics. See examples for details}
}
\value{
A \code{tbl_df} with summary statistics
}
\description{
Computes the median or mean proximity score for each protein pair across all group combinations
defined by \code{group_vars}. This is typically useful when profiling a population of interest,
where the goal is to compute representative proximity scores for each protein pair within that
population.

The proximity table typically contains a small fraction of the possible protein pairs for each
cell. These missing pairs typically have UMI counts below the detection threshold and their
proximity scores can therefore be imputed as 0 (0 observed join counts and 0 expected join
counts => no deviation from the expected value). \code{SummarizeProximityScores} pads the
proximity score vectors with 0s for the missing pairs to ensure that the summary statistics
are computed for the entire population. This behavior can be turned off by setting
\code{include_missing_obs = FALSE}.
}
\examples{
library(pixelatorR)
library(dplyr)

pxl_file <- minimal_pna_pxl_file()
se <- ReadPNA_Seurat(pxl_file)
proximity_table <- ProximityScores(se)

# Default method uses mean
SummarizeProximityScores(proximity_table) \%>\% head()

# Switch to median
SummarizeProximityScores(proximity_table, summary_stat = "median") \%>\% head()

# Ignore missing values
SummarizeProximityScores(proximity_table, include_missing_obs = FALSE) \%>\% head()

# Return lists which can be used to compute custom summary statistics
SummarizeProximityScores(proximity_table, detailed = TRUE) \%>\%
  # It's important to do rowwise computations
  rowwise() \%>\%
  mutate(
    sd = sd(unlist(log2_ratio_list)),
    iqr = IQR(unlist(log2_ratio_list)),
    mad = mad(unlist(log2_ratio_list)),
    q90 = quantile(unlist(log2_ratio_list), 0.9)
  ) \%>\%
  select(marker_1, marker_2, sd, iqr, mad, q90) \%>\%
  ungroup()

}
