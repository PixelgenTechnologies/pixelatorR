% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CellGraphAssay5.R
\name{CellGraphAssay5-methods}
\alias{CellGraphAssay5-methods}
\alias{subset.CellGraphAssay5}
\alias{merge.CellGraphAssay5}
\title{CellGraphAssay5 Methods}
\usage{
\method{subset}{CellGraphAssay5}(x, features = NULL, cells = NULL, ...)

\method{merge}{CellGraphAssay5}(x = NULL, y = NULL, merge.data = TRUE, add.cell.ids = NULL, ...)
}
\arguments{
\item{x}{A \code{\link{CellGraphAssay5}} object}

\item{features}{Feature names}

\item{cells}{Cell names}

\item{...}{Arguments passed to other methods}

\item{y}{A \code{\link{CellGraphAssay5}} object or a list of \code{\link{CellGraphAssay5}} objects}

\item{merge.data}{Merge the data slots instead of just merging the counts (which requires renormalization);
this is recommended if the same normalization approach was applied to all objects}

\item{add.cell.ids}{A character vector with sample names}
}
\value{
A \code{CellGraphAssay5} object
}
\description{
Methods for \code{\link{CellGraphAssay5}} objects for generics defined in other
packages
}
\section{Functions}{
\itemize{
\item \code{subset(CellGraphAssay5)}: Subset a \code{CellGraphAssay5} object

\item \code{merge(CellGraphAssay5)}: Merge two or more \code{CellGraphAssay5} objects together

}}
\examples{
library(pixelatorR)
library(dplyr)
library(tidygraph)
pxl_file <- system.file("extdata/five_cells",
                        "five_cells.pxl",
                        package = "pixelatorR")
counts <- ReadMPX_counts(pxl_file)
edgelist <- ReadMPX_item(pxl_file, items = "edgelist")
components <- colnames(counts)
edgelist_split <-
  edgelist \%>\%
  select(upia, upib, component) \%>\%
  distinct() \%>\%
  group_by(component) \%>\%
  group_split() \%>\%
  setNames(nm = components)

# Convert data into a list of CellGraph objects
bipartite_graphs <- lapply(edgelist_split, function(x) {
  x <- x \%>\% as_tbl_graph(directed = FALSE)
  x <- x \%>\% mutate(node_type = case_when(name \%in\% edgelist$upia ~ "A", TRUE ~ "B"))
  attr(x, "type") <- "bipartite"
  CreateCellGraphObject(cellgraph = x)
})

# Create CellGraphAssay5
cg_assay5 <- CreateCellGraphAssay5(counts = counts,
                                   cellgraphs = bipartite_graphs,
                                   fs_map = tibble(
                                     id_map = list(tibble(
                                       current_id = colnames(counts),
                                       original_id = colnames(counts)
                                     )), sample = 1L, pxl_file = pxl_file
                                   ))
cg_assay5 <- LoadCellGraphs(cg_assay5)

# Subset CellGraphAssay5
# ---------------------------------
cg_assay_subset <- subset(cg_assay5, cells = colnames(cg_assay5)[1:3])

# Merge CellGraphAssay5s
# ---------------------------------

# Merge 3 CellGraphAssay5s
cg_assay5_merged <- merge(cg_assay5,
                          y = list(cg_assay5, cg_assay5),
                          add.cell.ids = c("A", "B", "C"))

}
\concept{assay}
