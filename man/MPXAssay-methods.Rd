% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CellGraphAssay.R
\docType{methods}
\name{RenameCells.MPXAssay}
\alias{RenameCells.MPXAssay}
\alias{MPXAssay-methods}
\alias{show,MPXAssay-method}
\alias{subset.MPXAssay}
\alias{merge.MPXAssay}
\title{MPXAssay Methods}
\usage{
\method{RenameCells}{MPXAssay}(object, new.names = NULL, ...)

\S4method{show}{MPXAssay}(object)

\method{subset}{MPXAssay}(x, features = NULL, cells = NULL, ...)

\method{merge}{MPXAssay}(
  x = NULL,
  y = NULL,
  merge.data = TRUE,
  add.cell.ids = NULL,
  collapse = TRUE,
  ...
)
}
\arguments{
\item{object}{A \code{CellGraphAssay} or a \code{CellGraphAssay5} object}

\item{new.names}{A character vector with new cell IDs. The length of the vector
must be equal to the number of cells in the object and the names must be unique.}

\item{...}{Arguments passed to other methods}

\item{x}{A \code{\link{MPXAssay}} object}

\item{features}{Feature names}

\item{cells}{Cell names}

\item{y}{A \code{\link{MPXAssay}} object or a list of \code{\link{MPXAssay}} objects}

\item{merge.data}{Merge the data slots instead of just merging the counts (which requires renormalization);
this is recommended if the same normalization approach was applied to all objects}

\item{add.cell.ids}{A character vector with sample names}

\item{collapse}{If TRUE, merge layers of the same name together}
}
\value{
A \code{MPXAssay} object
}
\description{
Methods for \code{\link{MPXAssay}} objects for generics defined in other
packages
}
\section{Functions}{
\itemize{
\item \code{RenameCells(MPXAssay)}: Rename cell IDs of a \code{CellGraphAssay} or
\code{CellGraphAssay5} object

\item \code{show(MPXAssay)}: Show method for a \code{CellGraphAssay} or a
\code{CellGraphAssay5} object

\item \code{subset(MPXAssay)}: Subset a \code{CellGraphAssay} or a
\code{CellGraphAssay5} object

\item \code{merge(MPXAssay)}: Merge two or more \code{CellGraphAssay} or
\code{CellGraphAssay5} objects together

}}
\examples{

library(pixelatorR)
library(dplyr)
library(tidygraph)

pxl_file <- system.file("extdata/five_cells",
                        "five_cells.pxl",
                        package = "pixelatorR")
counts <- ReadMPX_counts(pxl_file)
edgelist <- ReadMPX_item(pxl_file, items = "edgelist")
components <- colnames(counts)
edgelist_split <-
  edgelist \%>\%
  select(upia, upib, component) \%>\%
  distinct() \%>\%
  group_by(component) \%>\%
  group_split() \%>\%
  setNames(nm = components)

# Convert data into a list of CellGraph objects
bipartite_graphs <- lapply(edgelist_split, function(x) {
  x <- x \%>\% as_tbl_graph(directed = FALSE)
  x <- x \%>\% mutate(node_type = case_when(name \%in\% edgelist$upia ~ "A", TRUE ~ "B"))
  attr(x, "type") <- "bipartite"
  CreateCellGraphObject(cellgraph = x)
})

# Create CellGraphAssay
cg_assay <- CreateCellGraphAssay(counts = counts, cellgraphs = bipartite_graphs)
cg_assay

# Show method
cg_assay

library(pixelatorR)
library(dplyr)
options(Seurat.object.assay.version = "v3")

pxl_file <- system.file("extdata/five_cells",
                        "five_cells.pxl",
                        package = "pixelatorR")
seur <- ReadMPX_Seurat(pxl_file)
seur <- LoadCellGraphs(seur)
cg_assay <- seur[["mpxCells"]]

# Subset CellGraphAssay(5)
# ---------------------------------
cg_assay_subset <- subset(cg_assay, cells = colnames(cg_assay)[1:3])

# Subset Seurat object containing a CellGraphAssay(5)
# --------------------------------
seur_subset <- subset(seur, cells = colnames(seur)[1:3])

# Merge multiple CellGraphAssay(5) objects
# ---------------------------------

# Merge 3 CellGraphAssay(5) objects
cg_assay_merged <- merge(cg_assay,
                         y = list(cg_assay, cg_assay),
                         add.cell.ids = c("A", "B", "C"))

}
\concept{assay}
